//
// Generated by CocoaPods-Keys
// on 28/01/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[14617], PatchrKeysData[12404], PatchrKeysData[11298], PatchrKeysData[13951], PatchrKeysData[790], PatchrKeysData[4174], PatchrKeysData[2261], PatchrKeysData[4301], PatchrKeysData[1313], PatchrKeysData[8082], PatchrKeysData[7172], PatchrKeysData[5034], PatchrKeysData[1205], PatchrKeysData[11850], PatchrKeysData[9009], PatchrKeysData[4653], PatchrKeysData[10523], PatchrKeysData[13853], PatchrKeysData[11524], PatchrKeysData[719], PatchrKeysData[3150], PatchrKeysData[5766], PatchrKeysData[4934], PatchrKeysData[2194], PatchrKeysData[1261], PatchrKeysData[2991], PatchrKeysData[1567], PatchrKeysData[6882], PatchrKeysData[4037], PatchrKeysData[14056], PatchrKeysData[13996], PatchrKeysData[1926], PatchrKeysData[10102], PatchrKeysData[10534], PatchrKeysData[9905], PatchrKeysData[12309], PatchrKeysData[13648], PatchrKeysData[5535], PatchrKeysData[13208], PatchrKeysData[10597], PatchrKeysData[9664], PatchrKeysData[12158], PatchrKeysData[1630], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1877], PatchrKeysData[10518], PatchrKeysData[10878], PatchrKeysData[10036], PatchrKeysData[6670], PatchrKeysData[2659], PatchrKeysData[14520], PatchrKeysData[7841], PatchrKeysData[5333], PatchrKeysData[9804], PatchrKeysData[6096], PatchrKeysData[9225], PatchrKeysData[10604], PatchrKeysData[9462], PatchrKeysData[10630], PatchrKeysData[7059], PatchrKeysData[12806], PatchrKeysData[9730], PatchrKeysData[14522], PatchrKeysData[10758], PatchrKeysData[8905], PatchrKeysData[13921], PatchrKeysData[8268], PatchrKeysData[5445], PatchrKeysData[11781], PatchrKeysData[10690], PatchrKeysData[9859], PatchrKeysData[8023], PatchrKeysData[5626], PatchrKeysData[7368], PatchrKeysData[12504], PatchrKeysData[222], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[7817], PatchrKeysData[12449], PatchrKeysData[13671], PatchrKeysData[5011], PatchrKeysData[2717], PatchrKeysData[13089], PatchrKeysData[3759], PatchrKeysData[13322], PatchrKeysData[5552], PatchrKeysData[10293], PatchrKeysData[821], PatchrKeysData[2819], PatchrKeysData[7060], PatchrKeysData[415], PatchrKeysData[10156], PatchrKeysData[14025], PatchrKeysData[14387], PatchrKeysData[5164], PatchrKeysData[13636], PatchrKeysData[4749], PatchrKeysData[14618], PatchrKeysData[14583], PatchrKeysData[12723], PatchrKeysData[6221], PatchrKeysData[5259], PatchrKeysData[5773], PatchrKeysData[2680], PatchrKeysData[5836], PatchrKeysData[4008], PatchrKeysData[4904], PatchrKeysData[2810], PatchrKeysData[8393], PatchrKeysData[12401], PatchrKeysData[8127], PatchrKeysData[3088], PatchrKeysData[13504], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[6605], PatchrKeysData[8453], PatchrKeysData[8625], PatchrKeysData[6808], PatchrKeysData[5855], PatchrKeysData[8677], PatchrKeysData[3779], PatchrKeysData[11941], PatchrKeysData[3146], PatchrKeysData[8079], PatchrKeysData[4013], PatchrKeysData[5064], PatchrKeysData[403], PatchrKeysData[3979], PatchrKeysData[11985], PatchrKeysData[6800], PatchrKeysData[4405], PatchrKeysData[6957], PatchrKeysData[6102], PatchrKeysData[6687], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[2217], PatchrKeysData[13627], PatchrKeysData[8075], PatchrKeysData[8839], PatchrKeysData[487], PatchrKeysData[4641], PatchrKeysData[9778], PatchrKeysData[5080], PatchrKeysData[5642], PatchrKeysData[1585], PatchrKeysData[4209], PatchrKeysData[4417], PatchrKeysData[2645], PatchrKeysData[6360], PatchrKeysData[1096], PatchrKeysData[13125], PatchrKeysData[7166], PatchrKeysData[2765], PatchrKeysData[804], PatchrKeysData[10169], PatchrKeysData[12607], PatchrKeysData[9257], PatchrKeysData[2198], PatchrKeysData[10343], PatchrKeysData[14297], PatchrKeysData[1410], PatchrKeysData[7572], PatchrKeysData[11358], PatchrKeysData[1916], PatchrKeysData[4451], PatchrKeysData[13227], PatchrKeysData[14567], PatchrKeysData[9565], PatchrKeysData[990], PatchrKeysData[13481], PatchrKeysData[12737], PatchrKeysData[6211], PatchrKeysData[1486], PatchrKeysData[2513], PatchrKeysData[1939], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[11404], PatchrKeysData[9192], PatchrKeysData[3161], PatchrKeysData[4522], PatchrKeysData[5947], PatchrKeysData[13181], PatchrKeysData[5173], PatchrKeysData[5091], PatchrKeysData[1422], PatchrKeysData[13406], PatchrKeysData[4901], PatchrKeysData[13538], PatchrKeysData[8020], PatchrKeysData[4483], PatchrKeysData[7829], PatchrKeysData[2413], PatchrKeysData[14404], PatchrKeysData[3736], PatchrKeysData[4736], PatchrKeysData[5607], PatchrKeysData[187], PatchrKeysData[10961], PatchrKeysData[2007], PatchrKeysData[2503], PatchrKeysData[68], PatchrKeysData[10716], PatchrKeysData[13011], PatchrKeysData[9289], PatchrKeysData[2012], PatchrKeysData[10447], PatchrKeysData[3507], PatchrKeysData[5097], PatchrKeysData[5072], PatchrKeysData[1739], PatchrKeysData[11450], PatchrKeysData[4783], PatchrKeysData[8733], PatchrKeysData[13624], PatchrKeysData[12718], PatchrKeysData[2994], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[5323], PatchrKeysData[6750], PatchrKeysData[5776], PatchrKeysData[5531], PatchrKeysData[2156], PatchrKeysData[2604], PatchrKeysData[2322], PatchrKeysData[13258], PatchrKeysData[3325], PatchrKeysData[14161], PatchrKeysData[5205], PatchrKeysData[8496], PatchrKeysData[5772], PatchrKeysData[5879], PatchrKeysData[12052], PatchrKeysData[10888], PatchrKeysData[4850], PatchrKeysData[5427], PatchrKeysData[5471], PatchrKeysData[5939], PatchrKeysData[10952], PatchrKeysData[10352], PatchrKeysData[10356], PatchrKeysData[5462], PatchrKeysData[14488], PatchrKeysData[5184], PatchrKeysData[7032], PatchrKeysData[4442], PatchrKeysData[9815], PatchrKeysData[461], PatchrKeysData[9546], PatchrKeysData[653], PatchrKeysData[11700], PatchrKeysData[9944], PatchrKeysData[10578], PatchrKeysData[4299], PatchrKeysData[8675], PatchrKeysData[14926], PatchrKeysData[2326], PatchrKeysData[4169], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6240], PatchrKeysData[6173], PatchrKeysData[9959], PatchrKeysData[9930], PatchrKeysData[4014], PatchrKeysData[9399], PatchrKeysData[5147], PatchrKeysData[10068], PatchrKeysData[4130], PatchrKeysData[4983], PatchrKeysData[975], PatchrKeysData[9823], PatchrKeysData[6954], PatchrKeysData[8260], PatchrKeysData[5953], PatchrKeysData[13105], PatchrKeysData[2254], PatchrKeysData[7454], PatchrKeysData[13270], PatchrKeysData[10235], PatchrKeysData[1221], PatchrKeysData[4648], PatchrKeysData[3876], PatchrKeysData[553], PatchrKeysData[7538], PatchrKeysData[10105], PatchrKeysData[5666], PatchrKeysData[10773], PatchrKeysData[8919], PatchrKeysData[14525], PatchrKeysData[699], PatchrKeysData[8759], PatchrKeysData[11625], PatchrKeysData[12282], PatchrKeysData[6849], PatchrKeysData[14604], PatchrKeysData[6189], PatchrKeysData[5152], PatchrKeysData[5424], PatchrKeysData[14202], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[13487], PatchrKeysData[12930], PatchrKeysData[577], PatchrKeysData[7701], PatchrKeysData[14804], PatchrKeysData[14147], PatchrKeysData[2720], PatchrKeysData[14336], PatchrKeysData[13555], PatchrKeysData[5131], PatchrKeysData[13429], PatchrKeysData[41], PatchrKeysData[2152], PatchrKeysData[2535], PatchrKeysData[4860], PatchrKeysData[939], PatchrKeysData[3364], PatchrKeysData[2950], PatchrKeysData[7541], PatchrKeysData[12319], PatchrKeysData[11486], PatchrKeysData[9316], PatchrKeysData[13293], PatchrKeysData[5559], PatchrKeysData[5381], PatchrKeysData[14278], PatchrKeysData[5104], PatchrKeysData[3744], PatchrKeysData[10233], PatchrKeysData[9040], PatchrKeysData[1339], PatchrKeysData[8286], PatchrKeysData[525], PatchrKeysData[615], PatchrKeysData[9149], PatchrKeysData[7531], PatchrKeysData[10213], PatchrKeysData[1228], PatchrKeysData[1911], PatchrKeysData[249], PatchrKeysData[4650], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[11924], PatchrKeysData[11090], PatchrKeysData[8842], PatchrKeysData[6181], PatchrKeysData[7804], PatchrKeysData[9836], PatchrKeysData[5495], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[2451], PatchrKeysData[1828], PatchrKeysData[12115], PatchrKeysData[13007], PatchrKeysData[7053], PatchrKeysData[1037], PatchrKeysData[11560], PatchrKeysData[4765], PatchrKeysData[13582], PatchrKeysData[7647], PatchrKeysData[13452], PatchrKeysData[8837], PatchrKeysData[3308], PatchrKeysData[2442], PatchrKeysData[10387], PatchrKeysData[53], PatchrKeysData[267], PatchrKeysData[3264], PatchrKeysData[12790], PatchrKeysData[1131], PatchrKeysData[12468], PatchrKeysData[10677], PatchrKeysData[9672], PatchrKeysData[2091], PatchrKeysData[1947], PatchrKeysData[10310], PatchrKeysData[12526], PatchrKeysData[7408], PatchrKeysData[6771], PatchrKeysData[2674], PatchrKeysData[3488], PatchrKeysData[6811], PatchrKeysData[4703], PatchrKeysData[1409], PatchrKeysData[10816], PatchrKeysData[11402], PatchrKeysData[7605], PatchrKeysData[10137], PatchrKeysData[679], PatchrKeysData[12937], PatchrKeysData[12520], PatchrKeysData[10581], PatchrKeysData[9890], PatchrKeysData[3663], PatchrKeysData[5068], PatchrKeysData[2862], PatchrKeysData[3635], PatchrKeysData[6198], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[14966] = "eL3cjJG+bpY9AfSG2ErdLIKWapP2nAXlI4RjhIVMfb1TTAbVha+IX|\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
