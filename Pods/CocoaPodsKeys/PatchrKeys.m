//
// Generated by CocoaPods-Keys
// on 08/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4873], PatchrKeysData[760], PatchrKeysData[6276], PatchrKeysData[3585], PatchrKeysData[1744], PatchrKeysData[562], PatchrKeysData[77], PatchrKeysData[7477], PatchrKeysData[1289], PatchrKeysData[5999], PatchrKeysData[287], PatchrKeysData[3200], PatchrKeysData[4115], PatchrKeysData[3679], PatchrKeysData[2180], PatchrKeysData[2959], PatchrKeysData[7518], PatchrKeysData[6213], PatchrKeysData[4882], PatchrKeysData[4687], PatchrKeysData[2168], PatchrKeysData[6111], PatchrKeysData[6337], PatchrKeysData[6402], PatchrKeysData[1375], PatchrKeysData[675], PatchrKeysData[5675], PatchrKeysData[1091], PatchrKeysData[3879], PatchrKeysData[5392], PatchrKeysData[376], PatchrKeysData[607], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2187], PatchrKeysData[1521], PatchrKeysData[6981], PatchrKeysData[5974], PatchrKeysData[6817], PatchrKeysData[7607], PatchrKeysData[5285], PatchrKeysData[7036], PatchrKeysData[1973], PatchrKeysData[7179], PatchrKeysData[5231], PatchrKeysData[3699], PatchrKeysData[6134], PatchrKeysData[1013], PatchrKeysData[1069], PatchrKeysData[5704], PatchrKeysData[7208], PatchrKeysData[6937], PatchrKeysData[6434], PatchrKeysData[3424], PatchrKeysData[4653], PatchrKeysData[2743], PatchrKeysData[2897], PatchrKeysData[4667], PatchrKeysData[181], PatchrKeysData[1535], PatchrKeysData[6762], PatchrKeysData[5971], PatchrKeysData[1843], PatchrKeysData[7091], PatchrKeysData[125], PatchrKeysData[5351], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4597], PatchrKeysData[60], PatchrKeysData[6580], PatchrKeysData[423], PatchrKeysData[5395], PatchrKeysData[5154], PatchrKeysData[1264], PatchrKeysData[6572], PatchrKeysData[4434], PatchrKeysData[3847], PatchrKeysData[3289], PatchrKeysData[3552], PatchrKeysData[4627], PatchrKeysData[1080], PatchrKeysData[2409], PatchrKeysData[4879], PatchrKeysData[3716], PatchrKeysData[1026], PatchrKeysData[7490], PatchrKeysData[3720], PatchrKeysData[6700], PatchrKeysData[3660], PatchrKeysData[795], PatchrKeysData[7350], PatchrKeysData[3782], PatchrKeysData[1906], PatchrKeysData[2695], PatchrKeysData[5136], PatchrKeysData[5279], PatchrKeysData[3088], PatchrKeysData[6561], PatchrKeysData[925], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[5925], PatchrKeysData[2738], PatchrKeysData[2808], PatchrKeysData[909], PatchrKeysData[1753], PatchrKeysData[6695], PatchrKeysData[1296], PatchrKeysData[1788], PatchrKeysData[4101], PatchrKeysData[5232], PatchrKeysData[187], PatchrKeysData[1400], PatchrKeysData[4974], PatchrKeysData[3393], PatchrKeysData[691], PatchrKeysData[6264], PatchrKeysData[6715], PatchrKeysData[6521], PatchrKeysData[6890], PatchrKeysData[5212], PatchrKeysData[4264], PatchrKeysData[6934], PatchrKeysData[4377], PatchrKeysData[4968], PatchrKeysData[2553], PatchrKeysData[6455], PatchrKeysData[979], PatchrKeysData[2833], PatchrKeysData[4864], PatchrKeysData[4721], PatchrKeysData[3566], PatchrKeysData[3204], PatchrKeysData[5468], PatchrKeysData[1365], PatchrKeysData[6109], PatchrKeysData[4229], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[3933], PatchrKeysData[2868], PatchrKeysData[4316], PatchrKeysData[2519], PatchrKeysData[6174], PatchrKeysData[3261], PatchrKeysData[27], PatchrKeysData[5346], PatchrKeysData[5914], PatchrKeysData[6181], PatchrKeysData[1486], PatchrKeysData[990], PatchrKeysData[1483], PatchrKeysData[5237], PatchrKeysData[3603], PatchrKeysData[4175], PatchrKeysData[1047], PatchrKeysData[1737], PatchrKeysData[590], PatchrKeysData[3814], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[2183], PatchrKeysData[2241], PatchrKeysData[6907], PatchrKeysData[4609], PatchrKeysData[6602], PatchrKeysData[5474], PatchrKeysData[5025], PatchrKeysData[3151], PatchrKeysData[1082], PatchrKeysData[3867], PatchrKeysData[7671], PatchrKeysData[4835], PatchrKeysData[4092], PatchrKeysData[6930], PatchrKeysData[588], PatchrKeysData[1700], PatchrKeysData[5906], PatchrKeysData[184], PatchrKeysData[2982], PatchrKeysData[6544], PatchrKeysData[1977], PatchrKeysData[4983], PatchrKeysData[5968], PatchrKeysData[4764], PatchrKeysData[1110], PatchrKeysData[4496], PatchrKeysData[7285], PatchrKeysData[4422], PatchrKeysData[6784], PatchrKeysData[6063], PatchrKeysData[63], PatchrKeysData[2068], PatchrKeysData[7507], PatchrKeysData[2001], PatchrKeysData[5074], PatchrKeysData[2799], PatchrKeysData[6531], PatchrKeysData[5975], PatchrKeysData[3918], PatchrKeysData[2552], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[838], PatchrKeysData[4327], PatchrKeysData[6621], PatchrKeysData[3549], PatchrKeysData[3606], PatchrKeysData[744], PatchrKeysData[4299], PatchrKeysData[4495], PatchrKeysData[5283], PatchrKeysData[2507], PatchrKeysData[7675], PatchrKeysData[3886], PatchrKeysData[7237], PatchrKeysData[7092], PatchrKeysData[1859], PatchrKeysData[285], PatchrKeysData[554], PatchrKeysData[1950], PatchrKeysData[3664], PatchrKeysData[7028], PatchrKeysData[1278], PatchrKeysData[6165], PatchrKeysData[2380], PatchrKeysData[6885], PatchrKeysData[7419], PatchrKeysData[6473], PatchrKeysData[7239], PatchrKeysData[5523], PatchrKeysData[3428], PatchrKeysData[1884], PatchrKeysData[5803], PatchrKeysData[4909], PatchrKeysData[4029], PatchrKeysData[1765], PatchrKeysData[2025], PatchrKeysData[3305], PatchrKeysData[4921], PatchrKeysData[4631], PatchrKeysData[6482], PatchrKeysData[851], PatchrKeysData[98], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[4237], PatchrKeysData[3241], PatchrKeysData[4837], PatchrKeysData[326], PatchrKeysData[266], PatchrKeysData[2281], PatchrKeysData[2471], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[2971], PatchrKeysData[2649], PatchrKeysData[5848], PatchrKeysData[1984], PatchrKeysData[7596], PatchrKeysData[2073], PatchrKeysData[6554], PatchrKeysData[3848], PatchrKeysData[6072], PatchrKeysData[4636], PatchrKeysData[2498], PatchrKeysData[5763], PatchrKeysData[6187], PatchrKeysData[2273], PatchrKeysData[2491], PatchrKeysData[4463], PatchrKeysData[5306], PatchrKeysData[4793], PatchrKeysData[6445], PatchrKeysData[2705], PatchrKeysData[511], PatchrKeysData[5496], PatchrKeysData[1396], PatchrKeysData[7555], PatchrKeysData[3743], PatchrKeysData[6302], PatchrKeysData[5167], PatchrKeysData[3541], PatchrKeysData[1], PatchrKeysData[7655], PatchrKeysData[1007], PatchrKeysData[527], PatchrKeysData[4892], PatchrKeysData[2518], PatchrKeysData[5683], PatchrKeysData[1701], PatchrKeysData[7439], PatchrKeysData[4126], PatchrKeysData[1612], PatchrKeysData[20], PatchrKeysData[3906], PatchrKeysData[618], PatchrKeysData[5620], PatchrKeysData[2659], PatchrKeysData[202], PatchrKeysData[1951], PatchrKeysData[5342], PatchrKeysData[5950], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[7682] = "t63SwdlaanlZyq29Jys58ei5LLDUVs0jzExON9s14lSZEJLryCwEXMaV5ySD21NDryZ8hUvNaaukw8ca1GtSLym3SdNHtiAszJ30n5jfoYqhlezODr/aAr+sK6h/cchtn+HqIzz9T6cR84m+iuyvC213T7KRewLE6Q8bzR5qqM0bWCSY2ZYwjaY5eAc1PSQFZp6x8nCpFA3nY+2uBKGacvWhltxQDO+hkeU1++F5LVezqQ1gZ3daanU07rfm/LXklPZ0phVkXUsaxHZtHbdVtN0G6v1eIL+chZeFd0mtRdrf9UBaD7HtQ9F+Jc1Y0KiPNenHigiA5FQwjcsANYbKX9RuiSfeHwVuJlcR+k4iDAEmBg2GN4xgPygk0lIoES1LMXQEMFQiWM0YwPl/HLD3/WnaG+ZC8YdO1FmlLvD4Xpao6W+7y0CDe57BW3iWXIAhzXjKAmliYBI4hNaftXb7gZUUsL74DN+gXAEOYHgL3lxlcDnqB1TZEZYQrSpyuxwdqsM2AiBtSCq3kBd5zn0E5c9ucJ8cRAv6Y7qLoooUaT9KlNrrMdbCFBtmz1Pv2/D9kE7BDLsWm9L3eCCWkpYcbb9OKt3K+wy1TgZLECJ7w4ebxFxRhLOcudT41hMrbXBCjLjTk7s8s8xUixdTtZsnd7jou9yC8J24eWk37q/D/p5lBMfnZVQ4v4xmyhnXQoQu/6V8QF/LBongF9WBBcMMMkFuYD/P2RJjLHAfwtkBiNNi/BI5OuTqZ7Mq1UcrpaszGAFMpOmrChOBBDwEYJKtY+ZBtlM9UU0Xatw7dGcQPrbigta6LqiHvqYMp3S6NDNOosadjSkHKOoznG6ee73cZWjfNd3q9bbe66BY6OcAvu2nMV8w7HsTVeqZTPR2cwMJfu4OGge6nUJEjcc/LUvHjMriSVf5DdTRvQEoERNpcYQTky1l+bCxeU+GVjwmBKgl08fdb5gaEwVh+/np2/z9DNfu3Gpf6KCmtyFtpKGpWdST3zc4fXoOz7y5g8c5/YsM2E7vPIF2a69tNg9SZXgh+toGwlcj2iwKEbVfZltda+tiL884nrXvZPlp9F4KfNEsgQfdUWPUNYTkX6EeBbieQlhrN1fjQ/1X8IqYt9rRfMP0KPXixLJbRI0iKzsyFaQs/aQvJ4jEILhVC9ZLPX+FmuId2NXJ9cG6LnjI6OX4O4mY01m7dhMKV8z6EbvfN3Krd4Tm1pOq4qGIS5Zu26UQhobBwfJdpJmRRHEv3nb3PKgZCC6MflWSuK547LZ7YWieR876OQOYf5i0K3SW94qSGZF9GI++XbNp39Nq8vTmZvaCd7bbb+9TRkuKChjVUc2290pzx7MmZWincYexVmtqH0uvwUK8Dz13Jd2ujwFC05pvmHkcyBl0cqPH1LIPx+UxUD7Jla7k13utrc6IMM1WP2y2PSnL1/1bze3ej/lLAyhP6EVe18lN2Sh2Ze+uHSryFxtwuJTs83L29SHw5wW+dxtMUt5csUByo3ccJar+99c7PPb9SaTN8LI7OamIRzfdPRvzADZUI80ASBTexSNZPZk6fbBzqGAjUrVGih3baT8GKA9HY/aLWL9ld7Tt57cXJXUP+Z7pe7YecsqNtC1K96sx/qVOvzjc5zIuYIlaPmmQXd58oz+YNy/QBE21xiqvc+aYZBt7qwOEWqysDqLfiRv9lDW8R7t0sfig4bzwRri1pktKFrHqIJswLEpOMuwGi5q82hLOn3NQLTf63JQ8mx6qn59EpFhKbi8JMz0w76SwomeM1njUwmxNAARH4f6XBSgPQrkilYtHVR9nb30E+ip1k8Md7URmubh3gu+jW3hIcWLWB814U7Ds7HuDZWs+pAEhuxKKi0+SdkaT7fWxspTMKJopsCh7Sf1mTCl6Nt+ttjxrvF0utK2RJkEBl3gcBCfPa2AfviOGjZqtkuHy6RrU+zIHaVue5PNXcfAzXELcL8RY2SCnFe/4xiu4TYMr6TpqkGPenLma8XaF5gvnAf1l3ld9sB3N1vgz5FQAbruxu3GdtHrMNiPlV3RwrVJzXJS3PUZiErx9oHPO0851s5jxS4EiZcQ5NW1OpmLvOZ18mB2q4YISfrl1zO4sFxeIZWlbiosNCkQblvbIXuTJlI+2MO+GBGIeW5ZOeUqNC22dY6zWnUkNgtYg4OZjSIBRWF0W9aD+Oj+5S3SFTV5NoxaYjAnngyGXUz/sYOdjBw4JE6HkqoocEVYsIac0wBMOTemCaK2pRAqYPCaHD17qtCdsjWDe2n+8b7UaexLklsGcpTnNAazphg3txRiMuyxk0JwM70DcyazH1PwEaEigrpD8L/WQQtZt54NroahEjCiJxVwKnDqF1/SfMhst5udGIWMClz4H9XgW9VdOw26tCe3uXh3qk2zRY+dzGSQ2w4Kmp2D7GszOhetZCd1LCjkekHpteZaXljjKFMU/NCJYR6aNUjiFMV12VSd06J9am3PUbEzPV2HpROsCDlP05F6VFu4pYzbUskOaVAXveegNlefAhgvIi+bZGAy4RkK/qAweZRGYetu+KrbYScHwsnd6jAy8tw4LezBAoGb91By1OumiDOVdRU9K4OZmVlpbkbYCF0BsotVUHgzdm5TYA7QttIj5Wt4U07jDZnjfARHOIr0Zu9D46YD/pgN34oTHkGv91m2s+1UqN8AnK8O6yZjigs560O9fVXelQe8KJasLBlsLMjYN1Wh2DQ4Wks0AIhChqSDjm12PxGd4dUFHmzvm7sAhijXjocnn1UJ6qyuXBotXdxT6uIPi7s+CNSOrXaJwqnZ8klAKweqIcANKXFKOlzV1qmUMP5NvQXBXheNQV5zBi7CEHEisUvV9KHz9kW67mJ2XP3HLKWZlcwNJDUE/uhq6Uz+CuZi7D5xyr7ipRSJ/gpGH5oi9BZuu43xT2ewzaJRG4aE+l3Zz3XZ/G7LzWB1uZIPGbli6NWb3B7nTK9Y7GOT8nFsiEv9FAO0FUP0Rf6Ia0LCJO8TRdGvgLiDYr0hz0AGjLg7ttGKPDoLZS6wZ5rFg1dmwlt+bbR5B/YpfuGz2vccpPRPiNLz/mBcqLNH9xBID/W1Y/ql29s7B7HFlZyDTm1V1wMxdGPen5BQbz2qVbWQP589fgpbcl+VxOfaUPNsjUfS4FVSzWelTLlGhpYOqixHVXM7qaqcY62GFuhAQVpI8Tvuai6KPGHKs1XvY4l+mvsQhUEv6Eg0PgSpqkwmY3YgnJHj/qkR6pac18v7sBJC4Mfj+dSVYmYbJNG3+7LfOUGWoLdlJNA7RkWWCF1yDAPuF0LFJJnt5DaJlBnym7vKaLn8GYyMIVoEDTOp+iqjz3QnMvtHV0Bp3yIdk3xhtRVl89/Zf7+cXKmHzVVK1/it1ZwYvO7MxOcjQr-Bpf+Vec+vk9Eyo2DSbd+EZLQzItdg31kPJV4kUT7gzOlFJWR+lNXBCGLZlhr7TpPa1mskYMWMKKQrVfzvNLLqC0LxA1k3yyhU6cr4Lcg4hIAVlNviH3Y7+FJom8RtPi7dr17wu87sUiN0ukDAMGbh0IfNtx_dtcUJqHGYmMt4MGHbZpJhKxXsrEn+vBUpQD1OEJjNDnE1gMFT7LqHOrklKkNNc0gvdLipcof9i3IJpukp7Y0Mnmfh/2ScFMTSg+F7QHABML9vmc1ui6h0juAl8eq0fjSvdCfWudjKR0fy33lJRwWi9BxHFwWkxqiAM42Zaa2Ph3zDc8C0rd6twcyvuruttFk1bxnY0B7q/iWVKwgWFTlP/UK+k0oxYj0jPWkSvCl1aWJMVlhULxkIiHDmxQ7xJlacG+/jZkjAT1J5lMtMoCeYDmFo88NI4Vrx9u7nK3pG85IwNXKQglpcU21SRcAX6oldVGW6IKLD4uyDbuJbJ8WaGdrZ+DlsydEE/1Kb0atBxSsIxzTPLTqmmcX/E+5tFCARjIQJXNb/ZbegRnu+l8kdOEjtOezJQiRd9v1YDxqXm5QkPsq/mnKv/Wz3jFV70G7xgGIAfAb9nuYwggAjPldY/oBSLkxPEwlMAzMPLZAVlOMDmE05DjG/JmQaGD+um0uYD7ZANqLd6/ZwkWZ5rNA8o4n4rXAG/c+n2tBTqY-2f11mrKlr5KNL40enkl1Yt3h9D8VCfsrxsouejZ/v4ffKf1i6e1HsUjR3G6RcsP+jySte3zBVUF8R3Q24vEbRhaJlottS1rG1B51KMzm7GIVzqXjJ/PH1pXis8gkEjJbPVo4ut0l902KOQfGOteZy4wQRTQAKfh52R2qILQ5fg/e68fRxWiuD4nAYDW+r//EJ8XCJvkS3vnXf5EswVshNaIYjjVWOWM6EeXWhrsLeGynBK1UzrNReEJ1y2RsDH2Jc2njoe2wfVKWBGuAyz14RlF4AY+fF9YtZv2jYnwaP2fqXG5QvIqatUqgDAqnMTurgSKwOw7fHaCr4aeieNi/ivUQwoTMd68A5s9jNuvCp|PaxmNsOElY5bBOXz7/lmhfkXp1WZP7RevNyBSWyn5BF1MZC8YYjnvKR+p6PCTw4Lo5JnULTDZrXHvH7GrTT6CKbHs0poSnvLv7xzn0oKSoge8sa0fidieGDQeGwqN82bGO0bc9vujVuALholY8/wnOeBl20/2x9NiT741jwnKh5n2tsTccu7sV2RcAgjnaqBVa0AbVq8ekA1/DKl1gJ2AswWJBz6p6l9kDeuHErljn2MdGBMFALmn9Eb7/kKxMnxaaYkumLAD46sOUG19kxTDBNozqFu+kfylrpxn4ZKAMSExfNLjBLsX4sBSgKQbFeTqiERuMSWG4Wd2POB+WTCafJVGuNL8wEVIEccbQ8gXrIaZyA2YqpPErayFK+weW7pYEvOSlldVx4YYFnhb94XBkVUJdzfwLR1Rz1kcuaTq1tfdh+UlDHLhuTjMq+Bok6+E4PJKEn/jK/c5cqWf6N8837+aZNk8PYEDNWHiyhKDhwiwzMPraL+sKBG-dZa0Qd2WmhiAO0tEbdD+gRkRH6Y3U3w8zVACQx/0RmHtiqad4oI2+DBwYRZgIW6RTtIlBP4N8mqCQjxAKdJyA+ExlpjTF44vb0vBXPI5jAUed/sHgcSuiEakbkMEc49C65K6fw6cLJlPDu0ecPIwEnTd9+m8qium+OSqOf/aLhRerjLkPi79PgSV732uXowJLiWhl7cnFKDIwFMQPUPHqE2hTlsome7S8kCV4JR3rxcu4PRi0uFa0eBWZWMM2WQSc+UQZQc9aN2NA6ccci4HIE5ORrgOKbG1aS4OuTK+QpOpinfdQ7Cl/Wc6uy_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
