//
// Generated by CocoaPods-Keys
// on 05/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4791], PatchrKeysData[4488], PatchrKeysData[4318], PatchrKeysData[1148], PatchrKeysData[2825], PatchrKeysData[4285], PatchrKeysData[4049], PatchrKeysData[252], PatchrKeysData[2773], PatchrKeysData[4440], PatchrKeysData[2966], PatchrKeysData[457], PatchrKeysData[1828], PatchrKeysData[4245], PatchrKeysData[4830], PatchrKeysData[2590], PatchrKeysData[3664], PatchrKeysData[4002], PatchrKeysData[1152], PatchrKeysData[1897], PatchrKeysData[2162], PatchrKeysData[73], PatchrKeysData[800], PatchrKeysData[1726], PatchrKeysData[3756], PatchrKeysData[4147], PatchrKeysData[2907], PatchrKeysData[3973], PatchrKeysData[348], PatchrKeysData[4398], PatchrKeysData[3138], PatchrKeysData[1670], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1489], PatchrKeysData[3060], PatchrKeysData[4849], PatchrKeysData[4024], PatchrKeysData[2984], PatchrKeysData[2237], PatchrKeysData[2819], PatchrKeysData[4370], PatchrKeysData[2382], PatchrKeysData[1799], PatchrKeysData[4475], PatchrKeysData[3546], PatchrKeysData[911], PatchrKeysData[4151], PatchrKeysData[4112], PatchrKeysData[3507], PatchrKeysData[1955], PatchrKeysData[1291], PatchrKeysData[1858], PatchrKeysData[50], PatchrKeysData[1183], PatchrKeysData[4418], PatchrKeysData[2749], PatchrKeysData[3919], PatchrKeysData[2525], PatchrKeysData[3318], PatchrKeysData[4201], PatchrKeysData[2077], PatchrKeysData[434], PatchrKeysData[3799], PatchrKeysData[1065], PatchrKeysData[220], PatchrKeysData[863], PatchrKeysData[2063], PatchrKeysData[148], PatchrKeysData[3853], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[837], PatchrKeysData[4991], PatchrKeysData[719], PatchrKeysData[2865], PatchrKeysData[4574], PatchrKeysData[1094], PatchrKeysData[3892], PatchrKeysData[4270], PatchrKeysData[1387], PatchrKeysData[2556], PatchrKeysData[2905], PatchrKeysData[1522], PatchrKeysData[2247], PatchrKeysData[3528], PatchrKeysData[3259], PatchrKeysData[1810], PatchrKeysData[2658], PatchrKeysData[3122], PatchrKeysData[4468], PatchrKeysData[2726], PatchrKeysData[514], PatchrKeysData[2188], PatchrKeysData[3793], PatchrKeysData[3512], PatchrKeysData[2154], PatchrKeysData[1531], PatchrKeysData[2778], PatchrKeysData[3448], PatchrKeysData[2878], PatchrKeysData[1926], PatchrKeysData[3210], PatchrKeysData[317], PatchrKeysData[2482], PatchrKeysData[2765], PatchrKeysData[1113], PatchrKeysData[4350], PatchrKeysData[1482], PatchrKeysData[4656], PatchrKeysData[1167], PatchrKeysData[2633], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4568], PatchrKeysData[841], PatchrKeysData[1817], PatchrKeysData[1811], PatchrKeysData[4406], PatchrKeysData[738], PatchrKeysData[4119], PatchrKeysData[2327], PatchrKeysData[1362], PatchrKeysData[86], PatchrKeysData[1910], PatchrKeysData[3169], PatchrKeysData[1651], PatchrKeysData[1815], PatchrKeysData[1240], PatchrKeysData[960], PatchrKeysData[621], PatchrKeysData[5022], PatchrKeysData[4573], PatchrKeysData[4933], PatchrKeysData[2523], PatchrKeysData[1692], PatchrKeysData[1256], PatchrKeysData[4121], PatchrKeysData[678], PatchrKeysData[1601], PatchrKeysData[2598], PatchrKeysData[1345], PatchrKeysData[408], PatchrKeysData[1660], PatchrKeysData[4495], PatchrKeysData[1441], PatchrKeysData[1909], PatchrKeysData[2446], PatchrKeysData[518], PatchrKeysData[731], PatchrKeysData[918], PatchrKeysData[3807], PatchrKeysData[2264], PatchrKeysData[207], PatchrKeysData[1455], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4167], PatchrKeysData[4276], PatchrKeysData[573], PatchrKeysData[3243], PatchrKeysData[1888], PatchrKeysData[4626], PatchrKeysData[926], PatchrKeysData[2936], PatchrKeysData[96], PatchrKeysData[57], PatchrKeysData[3047], PatchrKeysData[1089], PatchrKeysData[963], PatchrKeysData[3832], PatchrKeysData[1737], PatchrKeysData[3585], PatchrKeysData[1886], PatchrKeysData[186], PatchrKeysData[2552], PatchrKeysData[1976], PatchrKeysData[2149], PatchrKeysData[549], PatchrKeysData[1164], PatchrKeysData[672], PatchrKeysData[2751], PatchrKeysData[594], PatchrKeysData[4082], PatchrKeysData[3800], PatchrKeysData[4487], PatchrKeysData[4308], PatchrKeysData[2194], PatchrKeysData[2000], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[5070] = "5XvTe8WNFUDJhAeoDC3lOOxJPtP8yK4DcKf2qwCWPNr4ecUNXpactJ+uibegYch5bfk6W6nI00AMNabBecs71vaYA4/E5kac0i6746zTfvUlUhrb5oGuqikA5g+PggX/8WpSKIK9VB0dfRzaVsueaUfnSwrDnpqvc57sQBGOQ+02mAZiJsT4MeAoVqaqU2KpTJNc/i9PheA4pjeczpzM1OORBN9N4m8i9KM2cM/CIm95hhm0L2PpeiYisH4mdLRRjpdyHHxreu5RNgwLQ82IUx/6uvw+v19tbLfyZVHOjSddg/rMOqG+/746cC7c3sv5mLkl/5fowWnj1xkZLvo2xUQPgpom4C0RCJA5ygtZE0pUfJneToQr9B+RxmHgERM25bJtE8qzFfrX85VqNFZartnNV9+8lavHJ3mkMqlivk/ZkKAg/9blJF8MgWeaBGDXkkDGcwCEY198REl770IkQIWCYvnTXzW7u+gp8xGjSZDhCs3rGzfiqD7bmmQwB+dFwbiXFRrp820DDEbhzHBWjZdreYfJdWZNbkmVq161471FUFkJPO6O/c1hAD+f8aBC1gH47JVXEi7mycAdI6548m/ED6wDP9dLILUSKA+17jDjI9kWEgtczv2XMtbaTbw7LI2QUufYPn+n/QhBcCTIDz9iZ+pY+U1J41q966Etp9jsRZzGFEt6edWL8CyWyAdLTV4ECnQ/vkQZuCvNcFZqvIsdV0ma6jiKRDiTxksnWjtA/Ruewc3JBOP98BNbnXrGi0TTWO5HJhDNj/yajLoNKBHUVZzxhoVD665w6zwQMZngQpkB9UqLJ12zKkLDNgDV0GS/i+1ZledaOBWUajliR+nJRpSuI7h280fChTK3P7kOpHS0urKTQl0QfZLMXJeyFWBFK5a5ay34yn8dNIBpPJKJ7ZD6SK43iotRrN3YomRJdpIMjRVzksEcPEYrmTOTL734O7re9ll4kN9pGoUaDrJeamWSGwnMOhnpy4L2y8SSlEcKyUtErIX1hm1YzUvSmcH0MWgk5LnyYPSez8N8W4rIptRCqr0pFigAx//WBbxgWvtn/ErfDkYMVrNSedUBb3wGE1UdTzpBoB9Kikz/zAJ+TA2oxKgwuC0DofFkckgOqA6PAtneXrOZ77kq123b1BEUEW3C+LEEd+fPPbEcn+p8h9zvA6k24kzGtEBPDl5HOHVhcYoScp3p9USnUaOpZ+u6d1Dg8O6CDYZJc2nY5YnnhniCdPYm7iZ+HAOo906/gDx750CF9/KGu8spoeCzI9rmhT7LvW06T2WEs1OJaDmuUEk360raFdZ61P/HUx9+ijymmH71TGqJvAc7sMivFz7nj+3lHr/hxO8997_MmwaqpBNbOC2BX4gsF4Kv7gy4YVbCg+G5d/2JYleb6Gbt/9Ic2ry9BLGiySPOzBktUHJu7jTEPelgrkGVAHOzCZATkdU3hbUB2jKAs6JrQFCo6rwODOIENXaKX2+i4eb7FvjIGmUAkJC68AeziTwjlrThdyp+jNPXfpt2zVSvbdYSu1l4xLWWylCB1Lt1edKYKwvzh5hGSjWSofbOUCaosOI4wXBUh/8CYMNeQLtOl/89229s46PxIVEjOAn0iaJUC4eGlDKBldzsA6TnQg/oeLmcmh+2P8hK8p7Id3Ems70YGzisEM126x/tE3717ta+sc1sK1mJQ1aZl8FjpawNToClb+ykOixWQGNob7rcByflTrTqzXTsZeFmIs+elSFtZSYxmdqmrwgmUP+KRiwj3U1hx+rfPI5m12oMLDRA7DzrZIA3mmv9qrmqJjWpNZ4_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
