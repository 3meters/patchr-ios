//
// Generated by CocoaPods-Keys
// on 29/11/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3329], PatchrKeysData[5608], PatchrKeysData[121], PatchrKeysData[3979], PatchrKeysData[6637], PatchrKeysData[6515], PatchrKeysData[6300], PatchrKeysData[588], PatchrKeysData[5839], PatchrKeysData[5721], PatchrKeysData[455], PatchrKeysData[1426], PatchrKeysData[3296], PatchrKeysData[1951], PatchrKeysData[3059], PatchrKeysData[5939], PatchrKeysData[4009], PatchrKeysData[2251], PatchrKeysData[3460], PatchrKeysData[3532], PatchrKeysData[5258], PatchrKeysData[2955], PatchrKeysData[4068], PatchrKeysData[883], PatchrKeysData[6275], PatchrKeysData[920], PatchrKeysData[4623], PatchrKeysData[2503], PatchrKeysData[2605], PatchrKeysData[339], PatchrKeysData[6935], PatchrKeysData[3795], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1996], PatchrKeysData[6945], PatchrKeysData[4893], PatchrKeysData[6858], PatchrKeysData[6746], PatchrKeysData[3377], PatchrKeysData[948], PatchrKeysData[1381], PatchrKeysData[1510], PatchrKeysData[321], PatchrKeysData[5072], PatchrKeysData[5282], PatchrKeysData[3039], PatchrKeysData[240], PatchrKeysData[41], PatchrKeysData[6199], PatchrKeysData[1775], PatchrKeysData[6344], PatchrKeysData[982], PatchrKeysData[6132], PatchrKeysData[4208], PatchrKeysData[1791], PatchrKeysData[1989], PatchrKeysData[2142], PatchrKeysData[3610], PatchrKeysData[5876], PatchrKeysData[2706], PatchrKeysData[6864], PatchrKeysData[4873], PatchrKeysData[1057], PatchrKeysData[3830], PatchrKeysData[4839], PatchrKeysData[4398], PatchrKeysData[3190], PatchrKeysData[219], PatchrKeysData[3421], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1473], PatchrKeysData[4707], PatchrKeysData[6994], PatchrKeysData[1698], PatchrKeysData[6948], PatchrKeysData[2981], PatchrKeysData[2167], PatchrKeysData[6409], PatchrKeysData[1243], PatchrKeysData[5504], PatchrKeysData[2158], PatchrKeysData[5840], PatchrKeysData[4371], PatchrKeysData[5801], PatchrKeysData[2238], PatchrKeysData[2832], PatchrKeysData[828], PatchrKeysData[1131], PatchrKeysData[6974], PatchrKeysData[485], PatchrKeysData[334], PatchrKeysData[2009], PatchrKeysData[2914], PatchrKeysData[1403], PatchrKeysData[6983], PatchrKeysData[2701], PatchrKeysData[5264], PatchrKeysData[4212], PatchrKeysData[5033], PatchrKeysData[1821], PatchrKeysData[1868], PatchrKeysData[6038], PatchrKeysData[5741], PatchrKeysData[6209], PatchrKeysData[911], PatchrKeysData[286], PatchrKeysData[988], PatchrKeysData[5476], PatchrKeysData[3624], PatchrKeysData[4941], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[3823], PatchrKeysData[2518], PatchrKeysData[2751], PatchrKeysData[2118], PatchrKeysData[3779], PatchrKeysData[6444], PatchrKeysData[3930], PatchrKeysData[6077], PatchrKeysData[6709], PatchrKeysData[689], PatchrKeysData[4365], PatchrKeysData[953], PatchrKeysData[4292], PatchrKeysData[4798], PatchrKeysData[2974], PatchrKeysData[6809], PatchrKeysData[6705], PatchrKeysData[2538], PatchrKeysData[990], PatchrKeysData[2842], PatchrKeysData[4829], PatchrKeysData[4290], PatchrKeysData[6521], PatchrKeysData[2983], PatchrKeysData[435], PatchrKeysData[6389], PatchrKeysData[6757], PatchrKeysData[1398], PatchrKeysData[6396], PatchrKeysData[5441], PatchrKeysData[837], PatchrKeysData[2614], PatchrKeysData[742], PatchrKeysData[2317], PatchrKeysData[444], PatchrKeysData[6822], PatchrKeysData[2470], PatchrKeysData[3910], PatchrKeysData[3516], PatchrKeysData[6313], PatchrKeysData[2659], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[147], PatchrKeysData[2586], PatchrKeysData[2988], PatchrKeysData[6897], PatchrKeysData[5993], PatchrKeysData[5473], PatchrKeysData[6122], PatchrKeysData[961], PatchrKeysData[5296], PatchrKeysData[3616], PatchrKeysData[3753], PatchrKeysData[3235], PatchrKeysData[2364], PatchrKeysData[1886], PatchrKeysData[6694], PatchrKeysData[4381], PatchrKeysData[579], PatchrKeysData[2458], PatchrKeysData[47], PatchrKeysData[6033], PatchrKeysData[5659], PatchrKeysData[3226], PatchrKeysData[3682], PatchrKeysData[3756], PatchrKeysData[4277], PatchrKeysData[1667], PatchrKeysData[3935], PatchrKeysData[5525], PatchrKeysData[1349], PatchrKeysData[5717], PatchrKeysData[129], PatchrKeysData[1842], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[7002] = "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_E0Kc1cZdAMSm8jlYbr1nf4b-lthV1XbHDr0LNK9yjOVc50mUYnbAvtSHPd9LPUuoKBeBYWlz9qvySVzWsih+UUzZgCUSt9wegJgU3QGup/noqjEYFLTGc1EeuJ0hv8d9o9UC4VMxmg1rTTbXGBQDxEcBRvem2Q/3nw+f6XN2wNPVioYsZ3cjU3wGNRGkeeuuK2Q3x5zhv4U4bECyRtskULE2lKL4r4E4Wp9yHyteSsycvqMR0C78u4bhgjAhxLqnohBbs9QSvxYtU//mr/ikZhCttyQVJYoQuwFYXZg7gs/Pw5Dvs5xf3Br56Jb4+a0BSdI/CtbSHaBBS6prUl5apP5wJVlZ+TDKvcBU7RBlHz1LiqxWDqCY0aeVbWdrKQlWdFLNOLvVUYIscIHeOW3/5JWBIpKNfiNuknOuYouIsFkn1fs2F+d9hcz65FyT8GIUqxTY0qiR4zTYy/yoVXncOnTMUdDwmJTJHo2Y8V4orZuTxaGkZUbdbLc13wZE7giP2XwycaHOG2+SBMdL4Osf/flSdGO13RKly8kiXaqb6esR11B8xWf1dY8W6TDf8ePktUpQLCv8lf79+oSuV9JGiZB8HdhTI8cSpxpjxk3dcwXZ4XvZajLMPz4LyTSk2rxpARWUj/xVTUHGS0Nin0UNrKzZEfZX1Rzan6unzcu+YYJe7jYKpOBT4F5G7o+IZCT8iSBBXbQIn46P2W+o3LtpC2PwwoLJcSlM8YXvzmARTq7Fa+TPVjiXRmUACfLk7pTw4eRrxjI0uMCaT0La6dSDcEnolucE0YtnCkaerq/fzmL16Z0+Od9fkUY0VHSjusM0wa610vLCHxYhzWa71UTuYZShNhBt+DUJ3k7xpaREbst31zqEVpT/wvQE+Cyw8UL/c2dKiNPBKEWndCppQz9RKg6bdWhrlhzzATKo4xtTC4F19GFkZYd06yz8Fjc4z1+4b14nB0LX89pO72gOHQBg6HAS9UXZ9T9xd19Xf4VwQRP5f8saPZOOEXmSKXedZeDLzQhHYfTLvsFdPzoEgYjf1qZSXC7+nqQz9xsdEX+VtX8e5id0HVYDdhkF6ZW0u6IJgdnHektNrXC0CyUy2V312nCU1YHZ3GF842Smc5fJe2BhqBuhSFXzFH+I6tAKlnW/36Jso0Qi1yDca0MwhELsw+RGj4lQVvp3xD7IWR2sH0TLMYhi3X0GCDna6tdmXaRvUsB4AG6I9tFsurppsZN9VP+gvGeor3bP43Ph98NzZf4Gn4Ny9O31Xej2diLAHb9ffYshqVFTr6r7zq/+3uBHDJbwNVbmR9LOb1VEXb6/6kC0k7ybMA4mK2tD4V5sY1pDFoRl4hjlEUAg7/khDuWy2JzIt56o4egbW8ystm6zxOdU5VFodrsyHS+Lkqa2Ao7w+KRoE9z75wpB6a/xggUSGEd/l8Dieq+aI4fBZVWIag5OAKfsJxHWBbVWHovwUO84whpUk8EEklAejQKI3J5cbGWiEbPTivDolPullGSU1+zv/tJ7VZNXi8c0YCwczIbt5Wc4JCj3SKgZHHj8xjvqPluPzosdsYuHteQlyvU/dKk6V2Nb0FFnhmYg/5FrSBAV8rb/UMP29jrSPKrAV39D6EMgXRsUzNFXJx5Ie4nVXGceRhquxGkler1J4VPCl+9C3mZBGpytHHOJ13GO/y3iHZOtjyXdjIUHqqBEij9BkMSB31bb553Kv2DTKRkuoxSK+LpA977af1Lq5I8G7CVLfCShuYoq9d5BEGIpLz0ZaKk5+lWDvVBvSNPH6z2f4MWnIs8+jiB7vin+KUWKe+9vB2ye4EgJkjnLg/unVwFpIdAlOkOTG/aypgfhyc7NRkJEnlG21KHpbDFt0CUPfb5HBcV28IWtAITjrX7xtvJsK952uCrFUdt+HwGGXho7gtMc6dupBbRq+krcpWbJurH+U/HS3Ql+X6WDsyvQMPDyP349lbdmjKVVsione7fkovYyb+1kQnVjlojN6U8Elns4MUFRva7hLoyU+BQ6xPZgxtiMcu8Wuyaa6EzdAl4DmPZl1eWPLmqLRmI65sijfH+8/zKevDLoPk5AWvzm50/rU2MHmgaJ54ptoA/8SWfSwUlaSLziXI9OMd2oZTy7uDSaBuqnnD6tb8ovvHF7XunwPZwH0O0L+oHBIWEaXdsQ9KpE0FrtvvJy7MGmlIgQgm5s+0dSOpfIUyXrdeK+35ltEz8BGEJI6Tl5OuaJqDD7D2MNRBViqRaRZjOWcjZcdRz1T0bh984aht22d04phT62MmJVmUm/3eegv4G5i1tq+9KX8AHmxMs59BaRwyGION8KiyYi25yKRDmbGc0fHDo90t/fLEa1mmOZIUPgds70TuMXOY60RaXoULY4KYFZcU5x/YjavE4f+l2uDKpUkCC1K0P0T1Qo79s6TLpDtmy3AeN9B1n3eXpWEPGcHUsJSU4EZ6g0HEb+RIr7cEzhUJOZ8fRYy6VCidCrDMEitLYU2Tm1nXDiWXPOfBw9GBK716hGAy2Ns+HyYux1TD+0ApPOJNlIb7o3qVllpgvLIWnl4e0uvS6ooBi4nVh/5Zfq1gXu9WQCoz7be0qKoirMfFTC4y7asWXrZwgBJ+gHi0U9opxpPb0uRJ583DAXBEC154LokuQq32MaFFAkK49Mm07uUfgiuVJAY7+o5A7feP+X+5jvRdNfVa6usGMGMXRFtb9SQfi6qf/uD+NH4cyhoH6HWbLfeo8NM1a5vljeIXB+3foq7Nb6UkUllmCBofJhscMX0tcdNp/riYUFBc4NQUVGDfAcQ5dTYVxB7yNttlZS5FoaXdHpF7SV8PqBN9zjwod12jwxtVOjLuOE9XXdg5rLKF7p4U59LhY7ez7D7c1nhMPL/YYkcSRjPFcKr879JhRJx3SpqrwYlD2A3NUH/K8+2a1vDtUNcSImwTJcaDsC0cIdN/iTyOz6v1Gtev/btGyDMJmTrRbHvlUwR6Y4YdGC+Iq13lwpYIe32jPmNgk7kHK8VxXGI/ADdWdf1QCGURj5fWrcceDUwmo60sFklhQg4DqQtiZxLCvkcuHOxpnN5SwlMxLgmosREvs0g506Q7mdccFZ07f+VjEZH/HQvq776UPJjzau4dKj1FJbrGJeVJdkKTh42Ezjdzsu2q3yp9+JGLdQwB/1KeTkiD2eIaxwJ08CR0ISRHbpHq95sN8m0iCeaj+fz/0vpr7/JUdKXL3LQ7+g+EpgPzk0I3OyPfUrV4Gt7tsGIKwwQ1p2lCLk60t9/ILGf5Qbr8666mtBg3LCfvkKRdiXAy4BbXEuuvNiO5P+Ff7tXhbm1cwbfFsAXcuqYOKqBCrp4o/LCBuszITYSPaScY0D4xty/X4ufRZEIrjt+4xbdZRraQfsV6NItgvE6xchi6UKMPmMPM24wgUS9r4+2mQccqvlQAB99OPw+/wfJnqA0lj6t+c1hBW5o9ZByjHW9TrC8a687CBShI25zLYLiwA0xj6jj1AmF6bqtJ5cQ0KpADRDklKWNHuw++wQ5ZHUDRjDPRpPXihNM4+K67PMdIJRrkvKWzKkCf68N6Sr8neys5jOf9N0WPWxFcDoP+V2JW4rst1bBTaN/nf/1utaP70+rrj8dBYJcyuA71LzPgjd22iK+zwJTQD6d8HFV6KlmG3v+gxwPjIGI5H4gAGdbLeUdfLRbZkhKhHFJXwi6N6n7vQhuABgZ2EwRCEpch6QHW4Z5PDxy3t/8ZYTedpoSDYm7t9W83uPPTgzbiZ9ocCgNO/Fw/zThJWeF4F3vxPpFkIistZr1PKAnCdtrpK4xuwbjQ4X2VsHikwKtQDL3krSy9MpImt3GCRliqfUuCmGHRs0zJxrqj6a/gR+sPy44XM71adk8r03GpopAHkAamHMfd6Yci0c8mypPCOflKACOFLol1bAvHhsurpf1Wd0/eH9Giz2j+53WACmwLt95KdUnqAHPgeWajrE4T1hBvcmd0BDImJDeGLTPy2jYGvHuVFmlGZT2/54nJVZMgg8maT7rj4aaaJzfD0GWrRL8PiC/AVcu1nwQm9C2kcTdM2l3Khmzbz+iiCsjI7j/aHa40VicexfDkOhZzg5Gf2pD7VduWLc+JQKY0D/VZ0PgVbUF2danxQd8lfVvIlHU1V0zZAkGEqDm8Go39f+3RkTl2hAV/9xp+FqO2aRh4tbH8lLDdAFrmjmkqcauv6lODceAXeSH/CRYe8EO8TRs4pme6pOZZbc+lI9PqL96I8z6h7U7ZRXwIBlZE+PHCkhLepioX2fqVy08VaI2mjmpC8tH0zGxBrtDHFHkXSEBZIfE5EF6NhXQlNs3BI0Si+X0QjAN6sC25lq/Md6p4gA2LSXYmb1EyZMHSSqT67E+vxj0vc6kSXQ9HbPgyVUk6jDSUGebF1v959UFxu9Y9JOaM7Qp4/7Sx1QjlVexpEuhcvtgWNtZrx28AWeWsqm56rj0y+lCX/PzhBvvTqUZKpSixRSLyPpgLa3Yv7c+JQpQwRqdLita9f/yLCwuvxLon39nsUQAUCvWlc4OVNTvQxawqKxxAahsoZeTrLSU+Y8At5j4fy1Yv6/8udepmfRsgGs+w9A0R_IiqakoyfoHOIfGUnazU/KqMNb+hwXIO8KDMG5xgsfQaoyTdlhdFQIOdNuPUrEK9+HVVwbXnw3F+tXvt2NvXH1rsjcY4s2RyI7r8LMNynjeNxXO9NaTKMAtPNqp5aP+4WbT1BarljA0fv3tVuk9s0c+1PJ/eMhgUqX8OKaZDVf9YggyDnvaGKWijD/CE6fh7IkyO+mgYsugD07RhY/NBKWvjP1J7alo3Qy0WmFs+oQM82zlSupV0h1wSRH2fP3UrfM1gf0rps0/0hA5nvJhjfdCpMv9YNNzLkQ=\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
