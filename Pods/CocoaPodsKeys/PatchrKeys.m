//
// Generated by CocoaPods-Keys
// on 01/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2473], PatchrKeysData[1734], PatchrKeysData[4321], PatchrKeysData[7014], PatchrKeysData[6957], PatchrKeysData[2568], PatchrKeysData[5516], PatchrKeysData[3790], PatchrKeysData[5091], PatchrKeysData[7289], PatchrKeysData[5329], PatchrKeysData[978], PatchrKeysData[2950], PatchrKeysData[4459], PatchrKeysData[4650], PatchrKeysData[6466], PatchrKeysData[3947], PatchrKeysData[6710], PatchrKeysData[3802], PatchrKeysData[2236], PatchrKeysData[7194], PatchrKeysData[6968], PatchrKeysData[3578], PatchrKeysData[2554], PatchrKeysData[892], PatchrKeysData[749], PatchrKeysData[2132], PatchrKeysData[7102], PatchrKeysData[4088], PatchrKeysData[375], PatchrKeysData[6807], PatchrKeysData[2245], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5706], PatchrKeysData[4403], PatchrKeysData[625], PatchrKeysData[5344], PatchrKeysData[4091], PatchrKeysData[1180], PatchrKeysData[7640], PatchrKeysData[4101], PatchrKeysData[3186], PatchrKeysData[4602], PatchrKeysData[169], PatchrKeysData[2678], PatchrKeysData[5627], PatchrKeysData[2622], PatchrKeysData[4491], PatchrKeysData[134], PatchrKeysData[5268], PatchrKeysData[4537], PatchrKeysData[80], PatchrKeysData[2975], PatchrKeysData[7521], PatchrKeysData[3908], PatchrKeysData[6340], PatchrKeysData[5557], PatchrKeysData[296], PatchrKeysData[87], PatchrKeysData[7792], PatchrKeysData[4979], PatchrKeysData[1501], PatchrKeysData[580], PatchrKeysData[957], PatchrKeysData[420], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[89], PatchrKeysData[162], PatchrKeysData[2875], PatchrKeysData[5980], PatchrKeysData[2976], PatchrKeysData[7421], PatchrKeysData[512], PatchrKeysData[7848], PatchrKeysData[506], PatchrKeysData[3399], PatchrKeysData[4974], PatchrKeysData[152], PatchrKeysData[2322], PatchrKeysData[4107], PatchrKeysData[2551], PatchrKeysData[2591], PatchrKeysData[6584], PatchrKeysData[3337], PatchrKeysData[7524], PatchrKeysData[3165], PatchrKeysData[8005], PatchrKeysData[7072], PatchrKeysData[3899], PatchrKeysData[1408], PatchrKeysData[5560], PatchrKeysData[3481], PatchrKeysData[1244], PatchrKeysData[5976], PatchrKeysData[4070], PatchrKeysData[7431], PatchrKeysData[6311], PatchrKeysData[2460], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[5854], PatchrKeysData[8050], PatchrKeysData[3553], PatchrKeysData[6645], PatchrKeysData[4617], PatchrKeysData[5069], PatchrKeysData[2194], PatchrKeysData[2531], PatchrKeysData[4687], PatchrKeysData[1127], PatchrKeysData[2928], PatchrKeysData[989], PatchrKeysData[2423], PatchrKeysData[3412], PatchrKeysData[4170], PatchrKeysData[59], PatchrKeysData[7487], PatchrKeysData[6300], PatchrKeysData[1323], PatchrKeysData[1953], PatchrKeysData[649], PatchrKeysData[5270], PatchrKeysData[562], PatchrKeysData[4165], PatchrKeysData[4555], PatchrKeysData[532], PatchrKeysData[7280], PatchrKeysData[2494], PatchrKeysData[2467], PatchrKeysData[6922], PatchrKeysData[5591], PatchrKeysData[6604], PatchrKeysData[56], PatchrKeysData[4162], PatchrKeysData[1745], PatchrKeysData[2099], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[993], PatchrKeysData[4317], PatchrKeysData[6713], PatchrKeysData[7808], PatchrKeysData[2978], PatchrKeysData[4301], PatchrKeysData[5284], PatchrKeysData[2455], PatchrKeysData[6585], PatchrKeysData[3644], PatchrKeysData[7628], PatchrKeysData[6803], PatchrKeysData[1081], PatchrKeysData[3735], PatchrKeysData[6972], PatchrKeysData[4605], PatchrKeysData[7045], PatchrKeysData[3910], PatchrKeysData[5167], PatchrKeysData[2527], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[2291], PatchrKeysData[7367], PatchrKeysData[7623], PatchrKeysData[1207], PatchrKeysData[2932], PatchrKeysData[7526], PatchrKeysData[731], PatchrKeysData[3693], PatchrKeysData[6403], PatchrKeysData[6747], PatchrKeysData[5147], PatchrKeysData[5795], PatchrKeysData[879], PatchrKeysData[7739], PatchrKeysData[2639], PatchrKeysData[1559], PatchrKeysData[5522], PatchrKeysData[4087], PatchrKeysData[2475], PatchrKeysData[1421], PatchrKeysData[456], PatchrKeysData[6004], PatchrKeysData[2053], PatchrKeysData[6911], PatchrKeysData[5414], PatchrKeysData[1478], PatchrKeysData[2791], PatchrKeysData[1594], PatchrKeysData[7388], PatchrKeysData[4027], PatchrKeysData[5548], PatchrKeysData[1232], PatchrKeysData[2612], PatchrKeysData[6805], PatchrKeysData[5859], PatchrKeysData[4935], PatchrKeysData[2137], PatchrKeysData[542], PatchrKeysData[2607], PatchrKeysData[6748], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5659], PatchrKeysData[4411], PatchrKeysData[2559], PatchrKeysData[2877], PatchrKeysData[732], PatchrKeysData[6063], PatchrKeysData[3535], PatchrKeysData[4936], PatchrKeysData[189], PatchrKeysData[3180], PatchrKeysData[4097], PatchrKeysData[7989], PatchrKeysData[2070], PatchrKeysData[5302], PatchrKeysData[7561], PatchrKeysData[81], PatchrKeysData[2724], PatchrKeysData[3841], PatchrKeysData[2364], PatchrKeysData[7492], PatchrKeysData[4911], PatchrKeysData[2160], PatchrKeysData[2751], PatchrKeysData[7178], PatchrKeysData[6832], PatchrKeysData[1210], PatchrKeysData[5823], PatchrKeysData[6598], PatchrKeysData[2218], PatchrKeysData[3941], PatchrKeysData[1653], PatchrKeysData[1184], PatchrKeysData[4360], PatchrKeysData[1952], PatchrKeysData[5223], PatchrKeysData[5513], PatchrKeysData[5213], PatchrKeysData[2781], PatchrKeysData[1595], PatchrKeysData[2730], PatchrKeysData[1529], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[3876], PatchrKeysData[5824], PatchrKeysData[697], PatchrKeysData[709], PatchrKeysData[5973], PatchrKeysData[2014], PatchrKeysData[1321], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[7883], PatchrKeysData[5568], PatchrKeysData[3149], PatchrKeysData[3052], PatchrKeysData[365], PatchrKeysData[1347], PatchrKeysData[4349], PatchrKeysData[6785], PatchrKeysData[2614], PatchrKeysData[1877], PatchrKeysData[1159], PatchrKeysData[1735], PatchrKeysData[4352], PatchrKeysData[5360], PatchrKeysData[2362], PatchrKeysData[5574], PatchrKeysData[926], PatchrKeysData[1707], PatchrKeysData[5334], PatchrKeysData[5666], PatchrKeysData[6393], PatchrKeysData[1775], PatchrKeysData[4373], PatchrKeysData[1890], PatchrKeysData[3367], PatchrKeysData[3588], PatchrKeysData[7012], PatchrKeysData[5281], PatchrKeysData[3548], PatchrKeysData[3645], PatchrKeysData[6667], PatchrKeysData[1292], PatchrKeysData[6819], PatchrKeysData[5540], PatchrKeysData[917], PatchrKeysData[4404], PatchrKeysData[5731], PatchrKeysData[4869], PatchrKeysData[4163], PatchrKeysData[4366], PatchrKeysData[8014], PatchrKeysData[661], PatchrKeysData[619], PatchrKeysData[7659], PatchrKeysData[400], PatchrKeysData[1015], PatchrKeysData[4186], PatchrKeysData[2471], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[8066] = "39zWiaxELQX0Kgeuzw8UI//a15jeFRDrm1+ffBkiPmstA4EXRfb81Z2L2SGcR0hpDmJcGDnoWTOH7m/R2Ljj9z0dg9WRqKVWCX3AKPSPh+OGntYFbSBmn6GCRe4Bsjvm8T2fCE0ul3d9m4COqa0DzdYVc7qp7YMaWe2lIzukWcOWue8UvPSFyvtfhuEqj_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_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
