//
// Generated by CocoaPods-Keys
// on 30/01/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[2639], PatchrKeysData[6992], PatchrKeysData[2306], PatchrKeysData[10602], PatchrKeysData[5920], PatchrKeysData[6788], PatchrKeysData[3479], PatchrKeysData[1584], PatchrKeysData[5987], PatchrKeysData[3927], PatchrKeysData[6749], PatchrKeysData[11080], PatchrKeysData[7393], PatchrKeysData[5711], PatchrKeysData[4421], PatchrKeysData[10052], PatchrKeysData[5416], PatchrKeysData[10592], PatchrKeysData[8371], PatchrKeysData[3542], PatchrKeysData[596], PatchrKeysData[10470], PatchrKeysData[4578], PatchrKeysData[6446], PatchrKeysData[4485], PatchrKeysData[2741], PatchrKeysData[1851], PatchrKeysData[10163], PatchrKeysData[2508], PatchrKeysData[7119], PatchrKeysData[2564], PatchrKeysData[9833], PatchrKeysData[6685], PatchrKeysData[549], PatchrKeysData[11328], PatchrKeysData[6267], PatchrKeysData[4041], PatchrKeysData[8674], PatchrKeysData[9695], PatchrKeysData[7148], PatchrKeysData[6392], PatchrKeysData[7001], PatchrKeysData[2177], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6935], PatchrKeysData[3098], PatchrKeysData[3239], PatchrKeysData[3475], PatchrKeysData[3488], PatchrKeysData[1470], PatchrKeysData[7140], PatchrKeysData[4847], PatchrKeysData[2097], PatchrKeysData[8362], PatchrKeysData[6373], PatchrKeysData[3583], PatchrKeysData[1429], PatchrKeysData[4518], PatchrKeysData[3539], PatchrKeysData[8965], PatchrKeysData[9426], PatchrKeysData[895], PatchrKeysData[6425], PatchrKeysData[2117], PatchrKeysData[10859], PatchrKeysData[9079], PatchrKeysData[9213], PatchrKeysData[3810], PatchrKeysData[7659], PatchrKeysData[10364], PatchrKeysData[2813], PatchrKeysData[9027], PatchrKeysData[7102], PatchrKeysData[1111], PatchrKeysData[3277], PatchrKeysData[858], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1157], PatchrKeysData[7912], PatchrKeysData[3499], PatchrKeysData[3024], PatchrKeysData[548], PatchrKeysData[7642], PatchrKeysData[10834], PatchrKeysData[6569], PatchrKeysData[1099], PatchrKeysData[4257], PatchrKeysData[1874], PatchrKeysData[7947], PatchrKeysData[1471], PatchrKeysData[3250], PatchrKeysData[10750], PatchrKeysData[3375], PatchrKeysData[5366], PatchrKeysData[9973], PatchrKeysData[6217], PatchrKeysData[1635], PatchrKeysData[4160], PatchrKeysData[5052], PatchrKeysData[5547], PatchrKeysData[1419], PatchrKeysData[11100], PatchrKeysData[9704], PatchrKeysData[3132], PatchrKeysData[7587], PatchrKeysData[9837], PatchrKeysData[8767], PatchrKeysData[5497], PatchrKeysData[4158], PatchrKeysData[4256], PatchrKeysData[2104], PatchrKeysData[8876], PatchrKeysData[4085], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[1595], PatchrKeysData[7624], PatchrKeysData[3785], PatchrKeysData[9829], PatchrKeysData[10674], PatchrKeysData[376], PatchrKeysData[1046], PatchrKeysData[8092], PatchrKeysData[4447], PatchrKeysData[1243], PatchrKeysData[10825], PatchrKeysData[7721], PatchrKeysData[9836], PatchrKeysData[2772], PatchrKeysData[1674], PatchrKeysData[7930], PatchrKeysData[7935], PatchrKeysData[3341], PatchrKeysData[6601], PatchrKeysData[10860], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6161], PatchrKeysData[7445], PatchrKeysData[902], PatchrKeysData[10133], PatchrKeysData[8866], PatchrKeysData[6751], PatchrKeysData[2694], PatchrKeysData[8567], PatchrKeysData[5217], PatchrKeysData[10462], PatchrKeysData[3638], PatchrKeysData[9692], PatchrKeysData[8161], PatchrKeysData[1637], PatchrKeysData[4820], PatchrKeysData[2153], PatchrKeysData[5785], PatchrKeysData[6468], PatchrKeysData[1628], PatchrKeysData[10640], PatchrKeysData[7578], PatchrKeysData[4923], PatchrKeysData[11289], PatchrKeysData[6858], PatchrKeysData[6167], PatchrKeysData[9470], PatchrKeysData[1833], PatchrKeysData[505], PatchrKeysData[10963], PatchrKeysData[9630], PatchrKeysData[7287], PatchrKeysData[268], PatchrKeysData[4953], PatchrKeysData[5956], PatchrKeysData[7314], PatchrKeysData[1755], PatchrKeysData[4051], PatchrKeysData[11209], PatchrKeysData[2443], PatchrKeysData[9296], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3786], PatchrKeysData[9653], PatchrKeysData[1950], PatchrKeysData[1487], PatchrKeysData[9889], PatchrKeysData[9017], PatchrKeysData[1310], PatchrKeysData[2954], PatchrKeysData[7168], PatchrKeysData[4512], PatchrKeysData[2437], PatchrKeysData[7550], PatchrKeysData[10876], PatchrKeysData[7685], PatchrKeysData[6339], PatchrKeysData[10492], PatchrKeysData[11075], PatchrKeysData[2821], PatchrKeysData[1736], PatchrKeysData[8904], PatchrKeysData[11227], PatchrKeysData[7697], PatchrKeysData[5522], PatchrKeysData[8967], PatchrKeysData[10867], PatchrKeysData[4536], PatchrKeysData[3399], PatchrKeysData[10507], PatchrKeysData[3712], PatchrKeysData[5253], PatchrKeysData[10170], PatchrKeysData[2711], PatchrKeysData[2004], PatchrKeysData[7072], PatchrKeysData[275], PatchrKeysData[2366], PatchrKeysData[3299], PatchrKeysData[2209], PatchrKeysData[1324], PatchrKeysData[9737], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7514], PatchrKeysData[9189], PatchrKeysData[8940], PatchrKeysData[8521], PatchrKeysData[9566], PatchrKeysData[7258], PatchrKeysData[4823], PatchrKeysData[11210], PatchrKeysData[6652], PatchrKeysData[6021], PatchrKeysData[9715], PatchrKeysData[8162], PatchrKeysData[6686], PatchrKeysData[5751], PatchrKeysData[4680], PatchrKeysData[5471], PatchrKeysData[8598], PatchrKeysData[845], PatchrKeysData[10584], PatchrKeysData[6828], PatchrKeysData[1868], PatchrKeysData[6073], PatchrKeysData[3744], PatchrKeysData[6366], PatchrKeysData[9335], PatchrKeysData[5179], PatchrKeysData[2145], PatchrKeysData[9571], PatchrKeysData[2587], PatchrKeysData[10224], PatchrKeysData[8203], PatchrKeysData[10985], PatchrKeysData[159], PatchrKeysData[7702], PatchrKeysData[11142], PatchrKeysData[9561], PatchrKeysData[9265], PatchrKeysData[6957], PatchrKeysData[4675], PatchrKeysData[2828], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3570], PatchrKeysData[7319], PatchrKeysData[4621], PatchrKeysData[10138], PatchrKeysData[1870], PatchrKeysData[4283], PatchrKeysData[5197], PatchrKeysData[1434], PatchrKeysData[3394], PatchrKeysData[4171], PatchrKeysData[10227], PatchrKeysData[2310], PatchrKeysData[5030], PatchrKeysData[8283], PatchrKeysData[10431], PatchrKeysData[9761], PatchrKeysData[7297], PatchrKeysData[6252], PatchrKeysData[6507], PatchrKeysData[9811], PatchrKeysData[7292], PatchrKeysData[9004], PatchrKeysData[10216], PatchrKeysData[683], PatchrKeysData[2327], PatchrKeysData[6973], PatchrKeysData[2262], PatchrKeysData[3965], PatchrKeysData[10915], PatchrKeysData[2909], PatchrKeysData[6349], PatchrKeysData[1644], PatchrKeysData[9918], PatchrKeysData[11117], PatchrKeysData[11023], PatchrKeysData[8971], PatchrKeysData[4148], PatchrKeysData[8853], PatchrKeysData[694], PatchrKeysData[6], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[8017], PatchrKeysData[10925], PatchrKeysData[4569], PatchrKeysData[3276], PatchrKeysData[10248], PatchrKeysData[3053], PatchrKeysData[5444], PatchrKeysData[10738], PatchrKeysData[5031], PatchrKeysData[4391], PatchrKeysData[6207], PatchrKeysData[286], PatchrKeysData[5648], PatchrKeysData[9029], PatchrKeysData[234], PatchrKeysData[3809], PatchrKeysData[2120], PatchrKeysData[145], PatchrKeysData[1227], PatchrKeysData[9117], PatchrKeysData[11041], PatchrKeysData[2982], PatchrKeysData[4055], PatchrKeysData[1878], PatchrKeysData[2963], PatchrKeysData[7944], PatchrKeysData[4474], PatchrKeysData[10877], PatchrKeysData[9465], PatchrKeysData[3114], PatchrKeysData[2650], PatchrKeysData[6784], PatchrKeysData[2133], PatchrKeysData[5941], PatchrKeysData[11296], PatchrKeysData[11295], PatchrKeysData[2178], PatchrKeysData[7970], PatchrKeysData[6054], PatchrKeysData[3817], PatchrKeysData[7417], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[2829], PatchrKeysData[1008], PatchrKeysData[8463], PatchrKeysData[552], PatchrKeysData[1459], PatchrKeysData[172], PatchrKeysData[10440], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[10409], PatchrKeysData[8258], PatchrKeysData[5397], PatchrKeysData[8222], PatchrKeysData[2973], PatchrKeysData[4556], PatchrKeysData[8003], PatchrKeysData[11218], PatchrKeysData[2229], PatchrKeysData[3749], PatchrKeysData[4452], PatchrKeysData[10938], PatchrKeysData[9723], PatchrKeysData[2793], PatchrKeysData[10557], PatchrKeysData[4933], PatchrKeysData[3244], PatchrKeysData[682], PatchrKeysData[3805], PatchrKeysData[6819], PatchrKeysData[6006], PatchrKeysData[6209], PatchrKeysData[733], PatchrKeysData[3351], PatchrKeysData[5694], PatchrKeysData[2453], PatchrKeysData[10212], PatchrKeysData[2196], PatchrKeysData[3875], PatchrKeysData[7615], PatchrKeysData[3140], PatchrKeysData[680], PatchrKeysData[8357], PatchrKeysData[4590], PatchrKeysData[838], PatchrKeysData[6034], PatchrKeysData[4520], PatchrKeysData[11120], PatchrKeysData[745], PatchrKeysData[5220], PatchrKeysData[4654], PatchrKeysData[5787], PatchrKeysData[7179], PatchrKeysData[706], PatchrKeysData[9473], PatchrKeysData[6040], PatchrKeysData[135], PatchrKeysData[6958], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[11354] = "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-0tg1NlxCgM4G16B9YOfTgZ/AU_ddaawnK+eC99JpHrIITEO3otx8G9h+J6eP+3e5TnB6nGvkgnUP0o2yr3wjpVKM0V3r+pUvmLgy5QsrCW5qQp3FrY+qV/Sy1mMocaq0xDAo7tHr2DHNcDJ1aMnLpGzky10d5PZo/KNYwSToWeygPyx4DK1EFj7oLtKpSYDc34sXjJZX7pEcvvIMK9MiXTz0Zn5VD8ze4Q7oZm3GJ5Qpg6pV5A+TDVRscZkA/Mg8KGLqxX7gh+CJIISuCa+v5zKmZmlvw6YM4bbHYCP0hadGAvucK5jItlrWNYhiSNn3qfjKEr2cxMA2cADGg+QOcWeSYWBHz2/zZrZEnieYjkzMQILBOc474nlbT6u0CgJanMky23M+M/LvUzX0NZjdhS2Wt8ma6a7jBfb4Y1YpNwVZnmqdsYcZZZ3coTG2tTdQ7R5nLB3fsvYBi7+ecwE2kGfkBnJRi4iBHvv1lS4vi9Y7lKFkXD2AfNyUuZlY+TJHD9hVFxf+DQ2bngdPYiMDGJIEXIAmuheZBpVVoEamFX5OLtL6KaxRdLch61B6lqfd0d6EcEQYjBC6361E9mnqbm4OGPUKPaVEonMQjBhrzIopnuPI6jCfSSNg7j+2Ql55k/HoxIt962cozxEbN9QBcl8o2d9u/b93nUtfmyX0T6MEmNWE7xODM9Kg3L4d7z/3YIfbXXJFuO5noPu0jAjnavBT1wvorVaanypnm1EfpcwjZ8Z4CVILQ1vL7JCPRYzv2TcITnwIkDVGJCa+8VvtHXWdvxEjIvsTa76I9n6RaLG64gRRSLrWkzkhgFYnzNLx0LbjuhvYUmPnZUbSXCoZsb2DLBcQSDEFNmLQApnKAxYuFRwO7nPuh+axQWZJefJoj9o8n+Y6gIJ442iOOcCoXSuofA01CmmDOhqZcjI5VrXVGhwYvbXMFvVmmZDBJSn9NzlDq+af8guGiOi9dtZwwtJ5KdJACsi49T2p+XfDCtyRq29fvdBrI0cHtmSof3881CxFzvqL30vBIRwlmg80z51tTSJpRv78lvfnK/ByQxDtGooU9JZ7HqwdwBC2Aw/tqn+6KBWzJ5gfFXCA1V0ZZG9fCFbjQ9+rK4WKrMObLVVx3LdK8pHtaKGzxT+cbBWGsL9byVV/rtWvg2lGKwJFSYsUXjD/oPj/R48NaDKlimA1FbJmr4/1HxuvDuzr3bc+YLjbYdMlh3x44Ei0VPwEFOOpYhy5fubP9Io88Yvs7HIK7AQ1nBG9+dl+yAJdKyMACkPFIGdwd2M9yc+okkUrSH+iD4h0BbSyOGUFV5yiEw/VpdJTDBsaObnZ529f1zb/N4YSKcHeyyU5ulurZXAWIwg4P00ZhY1/tw/qAQH60JfiiiZRHEGZWt2Y/YIbEuekJWZBxcAd82Zlhr5dSUDC/JgHB7WZ9d8HW1rYcieD3Xp2nxueG5/CfOqgteKhbRi6WU+GwYF694XKCvr6aiFgyS5WrkQSeoSr1fYH2OiIflWnUxgDP+mtrjKSmln8tlF+WzQUCufkXBXv/XWBLdHNSdYka33YaDFafeJhQLnblXh5h+8O+PErlRiFDdQP8T9RqS92j1WaqdV8dVqnwNDSRjszDYTk7CyToBtuxxfHqxOkqT/BexrDGRTN25pjGdg8RbEdOsHptDWn3FHULX|18BBAFBsmn/Egc/UiMQua96RRyDtwx+n1dWVLmyRWW3sKQfs4CZlPJdQM1iOKjG53A2vQsU7gtE5CG9koHGwynrwCudyTSzq0_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\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
