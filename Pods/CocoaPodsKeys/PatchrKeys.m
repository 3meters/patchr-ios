//
// Generated by CocoaPods-Keys
// on 18/01/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[4562], PatchrKeysData[8840], PatchrKeysData[6792], PatchrKeysData[1383], PatchrKeysData[663], PatchrKeysData[291], PatchrKeysData[4397], PatchrKeysData[1285], PatchrKeysData[7807], PatchrKeysData[9115], PatchrKeysData[8776], PatchrKeysData[544], PatchrKeysData[6396], PatchrKeysData[8529], PatchrKeysData[10686], PatchrKeysData[421], PatchrKeysData[1668], PatchrKeysData[8348], PatchrKeysData[8366], PatchrKeysData[4619], PatchrKeysData[9163], PatchrKeysData[7674], PatchrKeysData[3623], PatchrKeysData[8690], PatchrKeysData[7970], PatchrKeysData[8016], PatchrKeysData[8713], PatchrKeysData[3139], PatchrKeysData[7709], PatchrKeysData[3640], PatchrKeysData[3066], PatchrKeysData[282], PatchrKeysData[10467], PatchrKeysData[4746], PatchrKeysData[8476], PatchrKeysData[12043], PatchrKeysData[271], PatchrKeysData[3170], PatchrKeysData[8116], PatchrKeysData[8670], PatchrKeysData[591], PatchrKeysData[1296], PatchrKeysData[1902], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[10876], PatchrKeysData[10261], PatchrKeysData[1035], PatchrKeysData[7077], PatchrKeysData[3319], PatchrKeysData[2342], PatchrKeysData[12489], PatchrKeysData[5321], PatchrKeysData[10083], PatchrKeysData[8543], PatchrKeysData[2204], PatchrKeysData[8085], PatchrKeysData[3458], PatchrKeysData[7101], PatchrKeysData[2043], PatchrKeysData[5798], PatchrKeysData[10860], PatchrKeysData[1420], PatchrKeysData[9244], PatchrKeysData[9771], PatchrKeysData[1625], PatchrKeysData[1424], PatchrKeysData[1688], PatchrKeysData[2518], PatchrKeysData[9236], PatchrKeysData[3571], PatchrKeysData[2661], PatchrKeysData[475], PatchrKeysData[12882], PatchrKeysData[2171], PatchrKeysData[5215], PatchrKeysData[546], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2295], PatchrKeysData[10633], PatchrKeysData[12632], PatchrKeysData[8200], PatchrKeysData[8311], PatchrKeysData[13314], PatchrKeysData[9565], PatchrKeysData[6070], PatchrKeysData[784], PatchrKeysData[1883], PatchrKeysData[5262], PatchrKeysData[540], PatchrKeysData[322], PatchrKeysData[280], PatchrKeysData[3299], PatchrKeysData[2495], PatchrKeysData[10115], PatchrKeysData[11102], PatchrKeysData[3624], PatchrKeysData[6032], PatchrKeysData[12143], PatchrKeysData[10354], PatchrKeysData[9854], PatchrKeysData[12275], PatchrKeysData[1155], PatchrKeysData[12045], PatchrKeysData[12004], PatchrKeysData[3770], PatchrKeysData[1060], PatchrKeysData[4381], PatchrKeysData[3553], PatchrKeysData[19], PatchrKeysData[6158], PatchrKeysData[3652], PatchrKeysData[13339], PatchrKeysData[12694], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[2241], PatchrKeysData[9750], PatchrKeysData[4577], PatchrKeysData[12647], PatchrKeysData[5475], PatchrKeysData[10417], PatchrKeysData[6344], PatchrKeysData[4766], PatchrKeysData[9703], PatchrKeysData[9575], PatchrKeysData[4241], PatchrKeysData[10152], PatchrKeysData[348], PatchrKeysData[10725], PatchrKeysData[12015], PatchrKeysData[8891], PatchrKeysData[11027], PatchrKeysData[7906], PatchrKeysData[1262], PatchrKeysData[4059], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3955], PatchrKeysData[4146], PatchrKeysData[9269], PatchrKeysData[4423], PatchrKeysData[4265], PatchrKeysData[10579], PatchrKeysData[12138], PatchrKeysData[6059], PatchrKeysData[13208], PatchrKeysData[1545], PatchrKeysData[11816], PatchrKeysData[787], PatchrKeysData[4542], PatchrKeysData[1608], PatchrKeysData[9061], PatchrKeysData[11005], PatchrKeysData[8349], PatchrKeysData[334], PatchrKeysData[11440], PatchrKeysData[335], PatchrKeysData[5759], PatchrKeysData[12474], PatchrKeysData[2359], PatchrKeysData[861], PatchrKeysData[4368], PatchrKeysData[7680], PatchrKeysData[251], PatchrKeysData[1466], PatchrKeysData[3657], PatchrKeysData[2185], PatchrKeysData[667], PatchrKeysData[6578], PatchrKeysData[10591], PatchrKeysData[2137], PatchrKeysData[8245], PatchrKeysData[4813], PatchrKeysData[7147], PatchrKeysData[5025], PatchrKeysData[12721], PatchrKeysData[12609], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3296], PatchrKeysData[3855], PatchrKeysData[1382], PatchrKeysData[3006], PatchrKeysData[7995], PatchrKeysData[8667], PatchrKeysData[4030], PatchrKeysData[6124], PatchrKeysData[10287], PatchrKeysData[9689], PatchrKeysData[12349], PatchrKeysData[12453], PatchrKeysData[12141], PatchrKeysData[777], PatchrKeysData[1566], PatchrKeysData[1259], PatchrKeysData[9492], PatchrKeysData[12841], PatchrKeysData[2784], PatchrKeysData[1845], PatchrKeysData[1023], PatchrKeysData[779], PatchrKeysData[5120], PatchrKeysData[165], PatchrKeysData[12803], PatchrKeysData[3744], PatchrKeysData[6961], PatchrKeysData[692], PatchrKeysData[12575], PatchrKeysData[3088], PatchrKeysData[3492], PatchrKeysData[1644], PatchrKeysData[12272], PatchrKeysData[12600], PatchrKeysData[2373], PatchrKeysData[7035], PatchrKeysData[11071], PatchrKeysData[4483], PatchrKeysData[8510], PatchrKeysData[6314], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[10091], PatchrKeysData[12267], PatchrKeysData[107], PatchrKeysData[11356], PatchrKeysData[12465], PatchrKeysData[1019], PatchrKeysData[12247], PatchrKeysData[4675], PatchrKeysData[799], PatchrKeysData[4997], PatchrKeysData[835], PatchrKeysData[7553], PatchrKeysData[3768], PatchrKeysData[1174], PatchrKeysData[13307], PatchrKeysData[253], PatchrKeysData[7695], PatchrKeysData[1186], PatchrKeysData[7132], PatchrKeysData[11491], PatchrKeysData[12090], PatchrKeysData[1169], PatchrKeysData[6894], PatchrKeysData[8993], PatchrKeysData[4142], PatchrKeysData[11407], PatchrKeysData[2139], PatchrKeysData[9187], PatchrKeysData[9247], PatchrKeysData[13164], PatchrKeysData[12498], PatchrKeysData[10966], PatchrKeysData[13192], PatchrKeysData[8682], PatchrKeysData[13102], PatchrKeysData[2136], PatchrKeysData[5101], PatchrKeysData[5646], PatchrKeysData[8747], PatchrKeysData[6094], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[9618], PatchrKeysData[4041], PatchrKeysData[10926], PatchrKeysData[2719], PatchrKeysData[9648], PatchrKeysData[9074], PatchrKeysData[12391], PatchrKeysData[8033], PatchrKeysData[7868], PatchrKeysData[6687], PatchrKeysData[2315], PatchrKeysData[2377], PatchrKeysData[4453], PatchrKeysData[1279], PatchrKeysData[9504], PatchrKeysData[10299], PatchrKeysData[5290], PatchrKeysData[9403], PatchrKeysData[3575], PatchrKeysData[8639], PatchrKeysData[2673], PatchrKeysData[10763], PatchrKeysData[7404], PatchrKeysData[1857], PatchrKeysData[2940], PatchrKeysData[12399], PatchrKeysData[8122], PatchrKeysData[2762], PatchrKeysData[2968], PatchrKeysData[128], PatchrKeysData[3540], PatchrKeysData[5851], PatchrKeysData[13264], PatchrKeysData[9950], PatchrKeysData[10479], PatchrKeysData[10260], PatchrKeysData[6311], PatchrKeysData[137], PatchrKeysData[1894], PatchrKeysData[8394], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[3413], PatchrKeysData[6943], PatchrKeysData[3798], PatchrKeysData[2049], PatchrKeysData[9451], PatchrKeysData[8403], PatchrKeysData[11456], PatchrKeysData[9544], PatchrKeysData[10919], PatchrKeysData[4670], PatchrKeysData[11528], PatchrKeysData[7655], PatchrKeysData[1701], PatchrKeysData[867], PatchrKeysData[491], PatchrKeysData[4543], PatchrKeysData[4481], PatchrKeysData[11878], PatchrKeysData[2764], PatchrKeysData[4786], PatchrKeysData[3419], PatchrKeysData[4824], PatchrKeysData[4799], PatchrKeysData[5369], PatchrKeysData[3345], PatchrKeysData[154], PatchrKeysData[3079], PatchrKeysData[13144], PatchrKeysData[2825], PatchrKeysData[10273], PatchrKeysData[13029], PatchrKeysData[4938], PatchrKeysData[10748], PatchrKeysData[10162], PatchrKeysData[8716], PatchrKeysData[8054], PatchrKeysData[3952], PatchrKeysData[3154], PatchrKeysData[5373], PatchrKeysData[1942], PatchrKeysData[9375], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[702], PatchrKeysData[751], PatchrKeysData[1614], PatchrKeysData[2557], PatchrKeysData[5909], PatchrKeysData[13335], PatchrKeysData[7717], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[119], PatchrKeysData[6527], PatchrKeysData[13246], PatchrKeysData[6257], PatchrKeysData[12772], PatchrKeysData[17], PatchrKeysData[9228], PatchrKeysData[1409], PatchrKeysData[5725], PatchrKeysData[12187], PatchrKeysData[7356], PatchrKeysData[7881], PatchrKeysData[8638], PatchrKeysData[11766], PatchrKeysData[12999], PatchrKeysData[11830], PatchrKeysData[11206], PatchrKeysData[7278], PatchrKeysData[5844], PatchrKeysData[6841], PatchrKeysData[11512], PatchrKeysData[5900], PatchrKeysData[405], PatchrKeysData[13139], PatchrKeysData[9312], PatchrKeysData[4038], PatchrKeysData[5785], PatchrKeysData[9788], PatchrKeysData[3396], PatchrKeysData[11884], PatchrKeysData[10807], PatchrKeysData[10222], PatchrKeysData[159], PatchrKeysData[9229], PatchrKeysData[6408], PatchrKeysData[10170], PatchrKeysData[4457], PatchrKeysData[12573], PatchrKeysData[4738], PatchrKeysData[8225], PatchrKeysData[5095], PatchrKeysData[10497], PatchrKeysData[3222], PatchrKeysData[4956], PatchrKeysData[5615], PatchrKeysData[10441], PatchrKeysData[6237], PatchrKeysData[2912], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[13418] = "|SDXNp1pIQJrhwxgxtiPdvna0ggUby9+RUIQYJCODj/UxSblu+ZPEL7iUldkSenpcg7XIkD7TrudwxK7GylI93U+qHofOEyNGC2Us5WpxSM3OaWf50Fv9l8uI/G2ZHAl6k09ZHyFb3YWosmF8bBLTv4J5wBFKmt0EQELTqljQg0Ojs9IgB8i1CTX8OZbrkVOLyCvIH9WTW1+TTJx46EHrvXchNVxCtEuezvszmGUePt0ybzRt+aYocmA3XmoRLzpDWdQHrhx9meURWUPtG/+e9Z9o9+R8qM/P5nwIN02K2mioh2tiAJLY/1jD20RXQjYtg5sUoyAFOnxvV70RCMu1S7iHwJapRIplToT/2Z7JEEJr/iW+kXQoASf1TBc5udh9Vr8UGnGUCFL8UKW8HOWixy1wdOA6zNfoQ6zX2lp72ZcsJCOmR5L8QXWL/l9f-tXu54t7504yC2FAiffM392Zu5UJ+eVaoyIJzQt74BPbLL1J3+L9o3QB6Eto5UIe3HlJapSejGD0ChRaHVQ4B82lRWCMRUIVLB2iaV88Sq27Nvxbghrc8Tb/CH8KdhGt9AUA+L3VjVV6fRHmnmfSo3hG7GYxz4u1+Z3gtpq2acDXUbOV6kibtqqSh7/pjrlMrBaVQ4ktkdJHKCssqoN6sGfNrhgPgEpHUG1DJNzRxPl/aYrQNqUWOev6J9rkkbY3N4hfbrPM+RCS3FkD8nG/5JhvcHVs30PhEVeGT764RZ9t7sg/ksb1T5EeLt/+GTPnsio6iDJrfDsIdTS9Ze6Oq1/2X0g4kFOT0LGGlcy+fxyZHplM8wLLAB1vj2AH1lWSyXEmCLvYQ/+MbbJrI9pcPdP+0m49BX61UbsbG4Gp1dCRxKU4kOQ1sSaoPg542YPRxCcKZ0HnkuYmZmdZrA4jbE43A1qyn/1xzN/plzWAZqApP9Avu5KTly4mp5ZP3P1pHvj2hnAG20o1X4okOIEFRHsJhS0YxHU2Nn+6Dx9Sk1AIPw0lnvZwscXDRCukm5rbATxvBosqu3G679fAo7zsG65iqvo2/rrcPqtKcMMT/gKYDqRdMF/SQGEJm2HL5CbrAjXJ8nVLDHDMS+JM49SVTZc9PcwpD6rZfgOUmMC0CasIcdhQBzhqL8B9Gf9zbdr2pxldjfN89wBaIp6eHX9r085+SP+S7DNtL4jV11OydZ6vuV8vnjlsuYosiRlreE5W+C435ER1/1vNNxuzRZ8qtvDIVmwV4Z6YriZqts7wTgFHjQ8mxOXgpR50hXddI6AkwUfE3RlhUlfApc7aw/QyPGBdV5bDLCJH5OfIDzJidPU8mM147SlBZddgWoPdskdV2NKrKZsdTaDWlojntS6yLn1Dx/3AuhyCXkW594TdJhA6C1D3lB1u7QdwFQzKzUM7GjBFExrjIbW4vo3YM/O149peGo7hsak0jUQp91bFavBN6u2IT3XHEAiQyyerk2D6uieUhlxrJa3kZvd4AV8dZU48diATO2ICBYv2sV8paTrgY9+XLymo09qL6LVXcA/xTkSgp3Ou0hvVfzJ01P8AA5QTAQl4WD6Ea1fGDcu7eVRSTbwVqYRri\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
