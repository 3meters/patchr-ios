//
// Generated by CocoaPods-Keys
// on 14/01/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3276], PatchrKeysData[3374], PatchrKeysData[1298], PatchrKeysData[7557], PatchrKeysData[6338], PatchrKeysData[6077], PatchrKeysData[1534], PatchrKeysData[1637], PatchrKeysData[5023], PatchrKeysData[5137], PatchrKeysData[6824], PatchrKeysData[4241], PatchrKeysData[3117], PatchrKeysData[6300], PatchrKeysData[6457], PatchrKeysData[226], PatchrKeysData[4057], PatchrKeysData[2241], PatchrKeysData[7145], PatchrKeysData[668], PatchrKeysData[314], PatchrKeysData[7182], PatchrKeysData[4149], PatchrKeysData[7006], PatchrKeysData[7109], PatchrKeysData[120], PatchrKeysData[4838], PatchrKeysData[3572], PatchrKeysData[3516], PatchrKeysData[683], PatchrKeysData[2151], PatchrKeysData[1354], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6914], PatchrKeysData[954], PatchrKeysData[7161], PatchrKeysData[3675], PatchrKeysData[840], PatchrKeysData[2002], PatchrKeysData[4369], PatchrKeysData[514], PatchrKeysData[5518], PatchrKeysData[3153], PatchrKeysData[5750], PatchrKeysData[4209], PatchrKeysData[1882], PatchrKeysData[1426], PatchrKeysData[1812], PatchrKeysData[5341], PatchrKeysData[3428], PatchrKeysData[1365], PatchrKeysData[2301], PatchrKeysData[4188], PatchrKeysData[639], PatchrKeysData[2891], PatchrKeysData[2252], PatchrKeysData[1148], PatchrKeysData[469], PatchrKeysData[5168], PatchrKeysData[812], PatchrKeysData[1316], PatchrKeysData[6593], PatchrKeysData[1127], PatchrKeysData[5766], PatchrKeysData[273], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2261], PatchrKeysData[4518], PatchrKeysData[3308], PatchrKeysData[4450], PatchrKeysData[6578], PatchrKeysData[5451], PatchrKeysData[2670], PatchrKeysData[5127], PatchrKeysData[7236], PatchrKeysData[5169], PatchrKeysData[1704], PatchrKeysData[4147], PatchrKeysData[1912], PatchrKeysData[7290], PatchrKeysData[3530], PatchrKeysData[2848], PatchrKeysData[944], PatchrKeysData[1226], PatchrKeysData[6152], PatchrKeysData[6641], PatchrKeysData[4315], PatchrKeysData[5981], PatchrKeysData[5481], PatchrKeysData[1313], PatchrKeysData[2074], PatchrKeysData[2742], PatchrKeysData[2204], PatchrKeysData[7360], PatchrKeysData[1547], PatchrKeysData[3402], PatchrKeysData[2209], PatchrKeysData[1938], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2537], PatchrKeysData[6146], PatchrKeysData[2616], PatchrKeysData[7122], PatchrKeysData[833], PatchrKeysData[3862], PatchrKeysData[5008], PatchrKeysData[2125], PatchrKeysData[3060], PatchrKeysData[3788], PatchrKeysData[2290], PatchrKeysData[7576], PatchrKeysData[3744], PatchrKeysData[1114], PatchrKeysData[7189], PatchrKeysData[7047], PatchrKeysData[1690], PatchrKeysData[309], PatchrKeysData[4458], PatchrKeysData[5053], PatchrKeysData[6379], PatchrKeysData[6831], PatchrKeysData[1090], PatchrKeysData[3656], PatchrKeysData[5917], PatchrKeysData[5959], PatchrKeysData[23], PatchrKeysData[580], PatchrKeysData[1205], PatchrKeysData[1397], PatchrKeysData[1456], PatchrKeysData[1326], PatchrKeysData[4400], PatchrKeysData[6950], PatchrKeysData[3914], PatchrKeysData[7354], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[5783], PatchrKeysData[1507], PatchrKeysData[4888], PatchrKeysData[1727], PatchrKeysData[4814], PatchrKeysData[2033], PatchrKeysData[3014], PatchrKeysData[5856], PatchrKeysData[724], PatchrKeysData[2663], PatchrKeysData[7232], PatchrKeysData[5574], PatchrKeysData[3881], PatchrKeysData[819], PatchrKeysData[4781], PatchrKeysData[4268], PatchrKeysData[2577], PatchrKeysData[3827], PatchrKeysData[3513], PatchrKeysData[2637], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1991], PatchrKeysData[5949], PatchrKeysData[660], PatchrKeysData[2164], PatchrKeysData[5510], PatchrKeysData[4793], PatchrKeysData[6012], PatchrKeysData[2555], PatchrKeysData[7429], PatchrKeysData[1848], PatchrKeysData[674], PatchrKeysData[5798], PatchrKeysData[5107], PatchrKeysData[2299], PatchrKeysData[941], PatchrKeysData[3285], PatchrKeysData[3728], PatchrKeysData[1520], PatchrKeysData[6940], PatchrKeysData[3000], PatchrKeysData[7318], PatchrKeysData[788], PatchrKeysData[7332], PatchrKeysData[5121], PatchrKeysData[1784], PatchrKeysData[5533], PatchrKeysData[1123], PatchrKeysData[4852], PatchrKeysData[7416], PatchrKeysData[4588], PatchrKeysData[6100], PatchrKeysData[2918], PatchrKeysData[1082], PatchrKeysData[5640], PatchrKeysData[168], PatchrKeysData[623], PatchrKeysData[5294], PatchrKeysData[6945], PatchrKeysData[2916], PatchrKeysData[2139], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[7296], PatchrKeysData[5449], PatchrKeysData[1144], PatchrKeysData[4777], PatchrKeysData[2589], PatchrKeysData[4123], PatchrKeysData[2367], PatchrKeysData[7075], PatchrKeysData[2253], PatchrKeysData[5696], PatchrKeysData[529], PatchrKeysData[6910], PatchrKeysData[1907], PatchrKeysData[608], PatchrKeysData[3758], PatchrKeysData[2289], PatchrKeysData[5878], PatchrKeysData[7521], PatchrKeysData[4236], PatchrKeysData[5946], PatchrKeysData[690], PatchrKeysData[3329], PatchrKeysData[3548], PatchrKeysData[72], PatchrKeysData[2640], PatchrKeysData[7043], PatchrKeysData[5686], PatchrKeysData[6956], PatchrKeysData[5104], PatchrKeysData[2521], PatchrKeysData[260], PatchrKeysData[2690], PatchrKeysData[151], PatchrKeysData[6823], PatchrKeysData[556], PatchrKeysData[3306], PatchrKeysData[6498], PatchrKeysData[3821], PatchrKeysData[2300], PatchrKeysData[1023], PatchrKeysData[2173], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[352], PatchrKeysData[4377], PatchrKeysData[5736], PatchrKeysData[4449], PatchrKeysData[7458], PatchrKeysData[6540], PatchrKeysData[7353], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[584], PatchrKeysData[715], PatchrKeysData[259], PatchrKeysData[4958], PatchrKeysData[5242], PatchrKeysData[5740], PatchrKeysData[6871], PatchrKeysData[6224], PatchrKeysData[3003], PatchrKeysData[1384], PatchrKeysData[6226], PatchrKeysData[7241], PatchrKeysData[5889], PatchrKeysData[6702], PatchrKeysData[5475], PatchrKeysData[5394], PatchrKeysData[3126], PatchrKeysData[3224], PatchrKeysData[3056], PatchrKeysData[7628], PatchrKeysData[2873], PatchrKeysData[983], PatchrKeysData[7340], PatchrKeysData[919], PatchrKeysData[3987], PatchrKeysData[4677], PatchrKeysData[4974], PatchrKeysData[933], PatchrKeysData[3555], PatchrKeysData[7482], PatchrKeysData[7445], PatchrKeysData[6560], PatchrKeysData[6904], PatchrKeysData[1154], PatchrKeysData[4549], PatchrKeysData[7368], PatchrKeysData[4973], PatchrKeysData[7230], PatchrKeysData[2800], PatchrKeysData[6526], PatchrKeysData[4284], PatchrKeysData[7002], PatchrKeysData[4945], PatchrKeysData[637], PatchrKeysData[4637], PatchrKeysData[756], PatchrKeysData[318], PatchrKeysData[242], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[7682] = "CziwCG2Wa/6bfcPAzkdGOCZ9WnrGME86gHSeof4gqubdlERv4oV2T7OX4R5xR4tAAv3tvDOl3YqV1IqXt1ndBknpRggWFL2oUbEyZEKeLL9crPyVQ8HR4gW93ylWYYDAcFLYVVDThNR7ZiYgcTYFtYYlRg9KpuXI0hRDpL9cAr59cQPhGYsfM/0WcK8Ko4v2ghE2XCKkI+84PRYEq7CYDm6cyjeoKHniN+3d8zI+1s20eM9PPm1oMGHXZBtzG6zMc0b4lETy8s+7Xzp1qdYwQSViNlPvrEpZVQPOgtb6rQtkkvXfwrChr6AYbl4mnB72SF6O/bTRD2eOR2KnsCJsLSeN/ruHQYi4lLvmDR2Ni2aQXde1f3KT9SHi5V28gqS0cxKSJp0TL16zk4oABBpgXa2CJxiR11SysmvMnukXC8UlqWu9WVvX4ZVvqe/hBv1DMLbTbdeePwFIJ3I4ehTfgaQKPTj1UiXlswS3L0vNTp17aE6ytiKdrTd/x1CVcQkDhB5Pr5716eZucqfXwaF2ANirfzKHdmGpodQhZZ82z33drvgTUXDKjFqW+KPbnQ0/bJfXesLP85zJWqx1yk8T0j1ev1Am9AX9fWVxLO/SFfGmRIC8GKqp7ueG2R94B3Oa9SbGfRrX/YLdhifp/hPMNXMbIZm99TycBEyZNn4iluic7eLW2hidcMbGhwb9u8X1MBThh8ZlSf69ugGq/bQmFjY4lG6WmTULWcRkG/1fjGmMXGgqvk6leoi8Div1RXPTP8pSvZhjxLiWA+46dXPstSay/dRO0R2NAqFtJWpK0F4y7mA9zIoAU2XNe/khwY6xN5nDAxzt2wTQgv4lOYlCQsZr7e+amkFdfrTC+N89rohe9bTcw6abZpqpMRhCFbhSlcagCJKcDDeNw/bZPYoBu6m5Z13HpL6C8D3mzbSvHHm91ewoahdpCobPtgaVdVJh+8nJTR4e6vkZD79+6Wo0CKJe/VrwRRzm7j+5lkIJ4m/lyz6dKUJpDJPTAojeC8Vcq2TOzEybgaXAb1DyZiHmdjxHQM5HJMrmQAQmHVjDmHumVvLl9G/xGb2UsGuyQyDrzC4MTq8MImarrxRl6XK7e897Us-zPJ6voCkzs+daXcLJoAb2AoG77rdgyN3h1wnge/fSpWaEm/qIQcm+QDrlpunxv1uQ2vFxNGPkS+EHWf8hymfvT9AoxbU1CS6sBVvJnj85idBeSf7l4eXYsrg8I1nIUG0G1L+2G+kWJeEzmmuUK4wv1cwdGzVTlKhkCL1wlf6G1WOiEZTvokM8xD3WiJARq7Zifn2uX6NQ8/PdDqLJO54iItElmCUWUhdG+QkUPyAuv3ASCF1YSWlB1nzt6826V2LKiR92EHxRWvK62G4CqaKJBm3SZagomjxkaG7K4BB7TAwJa7VCUnrBnq7MGr1NEXsRADUvdiHYZ55iKapJeFtibkHVxsxLi45Q8kEhyddplKMSETwLu3D8t27YPLcgX3Qv5T+0sj3KO/1Zh/aRSMPIe0QWHYglWUfbQW8ZtJs923BjdkbcbH/47TUjO5nUIRuPjN9obP/jJvXJIH8mJZVcl8qUY/ZM0qYRMgCISzJvGsEaURpBqsvo2w9Px8o4H8h6825Uaq55MdgEPXRMb5uIDWswqP0aKebQTStoBxFp0vwqNSaSbF5fGrgsynRlRP67bsiPdHI0Eyz21Uh28GRgw7BWtjUO6xYMjqAAj2q/b9VvUneM+sK1yyk9gHGAnhYUNck+sfDXw2jl1n4QvQPyi050YQObhGpHCYY3DKR808pzNAbcdyxAWJYx81dofRZbkCyMYjaA7ovJno6kmJdb4vsAVSEh6XbAp3T7hKQfmoYUaHZ9xz61y5NoBflWuc4961GeGHndDYlFqOlymAY01xzKt6sA4+aLSisKPuh84yuTHuQvWl1YB2dSM6dI2VXPSiHKLIdWkVe3UF6pr4Sdqn+0L3sZ3Y39mwM7NLjFITR+72f2q9WCWkcA79lJ8nXg99jtFaiBNM8qjjTc9UoWNYa4h0sX7uxVRJyAQgs2OfAqpd0JjAH91IsBANlH4u1nb7SwwhniZ8G7JAshwS9lpZkg3yNGUufXtvnKXYQ1DMrA9t0tT4w2bizkrNQtLnKSwgsiVlO2gSk04bE1dXZiUbEv8nfHSQ/6O3nraSvvYp62ojFKp6CBF88wzLFUov/GfIxVodmwlgO+UUCS0f+DF4nXjM3rFdhXJd9JW4Ln9azGsjXF7_8U5s7vI9mdt0SMhgyzUv1c88z6Ot7wikpPRL1LXge1ec1kS2TyM32tmwmlIhhI43vVNTIZ71XeaTo/8YQ2f40XsMW9uoGQITx22WgagMjMsug7fTZvnRIOTsgqpCPZkuKfcWpldJaZA7RNjvnvsxUtHDB6/4kMVVqLYOJTY7O0IGsa3SkHPi37cBmu0ivORWPCKqMhLqIEo9+mxkqWwP2bTbG9DCP5R7oiWk2Cd5N1jEjKz64K1pZdOlHJU45lwl+Q8jcMLFI/YsjbdJ7nB8iwdV1gre5Fgsefki1Fkod1ljQzJRP9HSkI0EBROk7Ea8mmWGRL9n5hfsdYxl+wuznx3P3OP7yibPgX9/7ETLPUcZN2edtv6+YDg0DQug3ibAlEEOcGZE2nLKfk3VVkwVW8PALP+PQkPDfpQdK1iQKLklYZ2Gw9u3k4233pTywGjDIkNFEJKQUH69QznLh8PR3Ro+E5KG2NInbpoWw1/+0puIYtQHd2Iv09TNQGv19m9sW2mMwCfIgmTioqaBRhmMzGtdFLltLMhxpOcjjYjUquZScfLehQdskVQ561UdRPeWpH5Oz/V54a7wAgSvmU13ZR5h7m+FfRADhB41y4n60Mud2q5ojzpf7D8uPB1KR4bEvoJaQFxp4uXDc+w7NUoNcsPxs0pD2pR6R+IoWY0qV0lEn4kNI+KZuQgTFPl47O/UF2V/sAW33i65bf2k1b9wqkS6m+X3HNawv/1ej+/yNOWHy7ekG6KAXtTiUrnXnnxcgGsjWMFIZI6B0y5EBGWBwPWObrStK0bNcV55Xe-8FOmNfdwACzvdzko75RCpoHPdJ5iB4yz50X5bwghiDB9Gl0ED80gPPbq4S+z49MRn83F3EkzEa1hjhOyoIrWZrMOVr2Te6QX/dTctbMW2B0S7Wc2GzuExkVYfD28ZE6h97+uuswLdsh1DFB2uBzjtCFofGDWjV+SfJo4FJ2rWHFcPc6HkRlbuep2SfvHBPlrGPAQzOQlSyBOXjhlxSQjrqDdp31Ga75s45IYbubVwgj8qNKCloJbuav4YgGFW4m8Oz+8TOItloHNQW2UzwrWFWTFAJLEN3tqFco5GQzh9jqE5kW9JZcEy189Y1D16KnWPz54ALQQ1l76ydt9PRjB49505J4Pk6ExiSM4YNASE1TY/9n8ZMLAnqIuQ34pljxqCWdq0k+HggSYjLrWFtaLStWl1eSm5GSVpogWY1TnNJ1aUfuCUGGauZM5keM+yWcb7u2/C/x4sTHIheize6tvT4/2gNlUfNB36T9GNEp9w+xEAQ6XffEE1NMTYxEIcKMd2EYfHkHrrgxGDnIjm5VCXFlnfI1pTgYEV/hAus4MvLCPX7Rlx4msooqwutpsY+zTkD/qahQ7HzrzGxrSe+O-xmDxFIP3mfV5fvjOCha+VCQaGopRudiGYxiTKruQrUKtD+79GfXFI4NknCRJS+1eblmxqM395DVEtsX5B3YOCAxdN9uh0pzxIMBCxhpFrIoODQl/ToTKuXSse5xncwiMUdq9SGGRR6nuOZ9i+43aiaDMEYpegHranHfonLJnSd3BzYOspu9XJnpWf/tVY16I8Df1T+/RbEn5T4WtASno1cNs7dsRjKAn2Hv8NCEWal1Z/FaSDD1t/18G5CFafL6+GahlhRMg/o+RC06XPLg4CK8GysBDLvNy/FefI2oVdxshwTR5m24Fn/Xu0v1smQaK2ScU15ESqUbCCf4+ReGAI75Of2IvTkSgc3k+NPJ4gzpBM6lj41fZd039b0DiokTnZLyOm9PpApvj9IdR70QISd4gwkCMKKHS3HzHCY2s9/7Cbmw/jKCez4qxxgsjj+VaXOnLQvRKGJ5DA8DuDCi7T7suSYF8Dj3vLuqvNIbQ2Ocm66+RQ4i79qbalgeuCgDKTCiTVPEthig/KaDLIMN1ROOyQdHLSXUX7Gp60sfi9Rn9kuRBlkZ/pnf03i+zqP/FTAh60/P81O2BmSpelWSExAB5h+ESK5nZdU/UGOm9jNU6k5BF14/bzUYEV/fAWPVu0mEvnO2VQR05pG1q1kfNjYczE/zWMIp1YonTZvDCx8hppuPZU+dKmBoK1HThEArlLvq2RBRN1QD1NP6EagFhQl2Yut0FTZEEnsSm/WV2QqwRviihWGNdZktjr5RGqay0FsuVu9/ywh4ocjG74FZckpWxi4znpxugl-SJ83IoBLdrUJB+U2iz4TOvbtD49Uhj6tX8JqlCtq2DRfMwhwjcmL21igu3O2umde8nRdk1xofNN/yaB8v5N9FWefjNal3Acf6qFv7ah7AMMxgEmhHKHAJKoXjQcQBLQEwQvKVTgU81J9/AWvzGf73yRtwAh24YC6gijDp6Q26ANOLtgGRH3ePOlszLKTu8Z5ofpr0QqZjtDdl48BizXQTKSHQobCTKATQlrE7XKvq7NCYVW/WDQJfXCC4i3VT49zUcCt9sUgBiJ6FhKroZ3vt0O6Pn+M7ZUNx/1UkxdRSXafWLRHKoazhzMfSjSim+_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
