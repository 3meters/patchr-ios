//
// Generated by CocoaPods-Keys
// on 06/12/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5411], PatchrKeysData[2966], PatchrKeysData[21], PatchrKeysData[5067], PatchrKeysData[1981], PatchrKeysData[2316], PatchrKeysData[380], PatchrKeysData[1203], PatchrKeysData[2043], PatchrKeysData[759], PatchrKeysData[1813], PatchrKeysData[3757], PatchrKeysData[5279], PatchrKeysData[4874], PatchrKeysData[5504], PatchrKeysData[1999], PatchrKeysData[692], PatchrKeysData[5298], PatchrKeysData[1148], PatchrKeysData[1539], PatchrKeysData[5271], PatchrKeysData[5122], PatchrKeysData[803], PatchrKeysData[893], PatchrKeysData[558], PatchrKeysData[5307], PatchrKeysData[2306], PatchrKeysData[5004], PatchrKeysData[3525], PatchrKeysData[369], PatchrKeysData[2357], PatchrKeysData[3193], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[4866], PatchrKeysData[4162], PatchrKeysData[3157], PatchrKeysData[1402], PatchrKeysData[4488], PatchrKeysData[1805], PatchrKeysData[2939], PatchrKeysData[3333], PatchrKeysData[1525], PatchrKeysData[959], PatchrKeysData[4396], PatchrKeysData[774], PatchrKeysData[1724], PatchrKeysData[2202], PatchrKeysData[2950], PatchrKeysData[3096], PatchrKeysData[514], PatchrKeysData[5187], PatchrKeysData[1469], PatchrKeysData[5332], PatchrKeysData[2930], PatchrKeysData[5303], PatchrKeysData[279], PatchrKeysData[916], PatchrKeysData[689], PatchrKeysData[462], PatchrKeysData[3160], PatchrKeysData[997], PatchrKeysData[4807], PatchrKeysData[26], PatchrKeysData[1713], PatchrKeysData[1711], PatchrKeysData[5365], PatchrKeysData[3311], PatchrKeysData[2722], PatchrKeysData[4379], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[686], PatchrKeysData[3554], PatchrKeysData[5023], PatchrKeysData[2708], PatchrKeysData[5294], PatchrKeysData[1350], PatchrKeysData[1076], PatchrKeysData[2141], PatchrKeysData[3679], PatchrKeysData[2132], PatchrKeysData[5028], PatchrKeysData[4533], PatchrKeysData[1036], PatchrKeysData[4872], PatchrKeysData[4930], PatchrKeysData[1314], PatchrKeysData[4172], PatchrKeysData[3297], PatchrKeysData[5205], PatchrKeysData[1045], PatchrKeysData[2150], PatchrKeysData[3923], PatchrKeysData[1807], PatchrKeysData[2376], PatchrKeysData[2338], PatchrKeysData[2494], PatchrKeysData[77], PatchrKeysData[5150], PatchrKeysData[1472], PatchrKeysData[3483], PatchrKeysData[663], PatchrKeysData[1835], PatchrKeysData[5410], PatchrKeysData[2501], PatchrKeysData[1841], PatchrKeysData[1949], PatchrKeysData[149], PatchrKeysData[5169], PatchrKeysData[3795], PatchrKeysData[4931], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[743], PatchrKeysData[2086], PatchrKeysData[1688], PatchrKeysData[1591], PatchrKeysData[2233], PatchrKeysData[4947], PatchrKeysData[1931], PatchrKeysData[4585], PatchrKeysData[837], PatchrKeysData[3111], PatchrKeysData[1936], PatchrKeysData[2681], PatchrKeysData[5166], PatchrKeysData[1792], PatchrKeysData[814], PatchrKeysData[3481], PatchrKeysData[4642], PatchrKeysData[3170], PatchrKeysData[3614], PatchrKeysData[1205], PatchrKeysData[2772], PatchrKeysData[274], PatchrKeysData[4378], PatchrKeysData[5168], PatchrKeysData[3409], PatchrKeysData[1550], PatchrKeysData[2404], PatchrKeysData[268], PatchrKeysData[251], PatchrKeysData[5377], PatchrKeysData[5120], PatchrKeysData[4362], PatchrKeysData[2527], PatchrKeysData[4209], PatchrKeysData[5384], PatchrKeysData[158], PatchrKeysData[5029], PatchrKeysData[2602], PatchrKeysData[3015], PatchrKeysData[2747], PatchrKeysData[639], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2700], PatchrKeysData[1265], PatchrKeysData[2308], PatchrKeysData[5376], PatchrKeysData[764], PatchrKeysData[4335], PatchrKeysData[2354], PatchrKeysData[1689], PatchrKeysData[483], PatchrKeysData[2633], PatchrKeysData[1166], PatchrKeysData[337], PatchrKeysData[4945], PatchrKeysData[3643], PatchrKeysData[131], PatchrKeysData[2763], PatchrKeysData[3179], PatchrKeysData[3730], PatchrKeysData[4619], PatchrKeysData[4061], PatchrKeysData[4415], PatchrKeysData[5011], PatchrKeysData[5493], PatchrKeysData[1595], PatchrKeysData[170], PatchrKeysData[1621], PatchrKeysData[1070], PatchrKeysData[4151], PatchrKeysData[3249], PatchrKeysData[1217], PatchrKeysData[4976], PatchrKeysData[4701], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[5554] = "D2g5+vHwxyKHedwR0PN8R3fHeZaJ5RN3e98z4kpwPFaErdvzwC0KmeK7LMcCm6GrRgiX+pWqIbf3TzdRwbdV9BFBHULO1J9MiJeed6x+1MAqu4YVwFaqiZM2rYu8Bv6+grxeoWfVV9+ugfRUMT8+Ualc2T7XsMaOf+3WZKoqjT0fd8d1qTPSTEht8qHUqPUODZHHbYAXUtEzu9i6r7ji+NK88EAuZEpombCJU6ySqA2riiadpV/L0aeNTGDVDyDBhQtmF3WPs4qWzPAypdQmt0Z4jhMzfUjeEw6dVCXXT6dVPvn0UFMl8y8p1qH/EIrEEoX7NvRkA6DR7Lhho35jz67J35sOdELDxqiXKKa96sg1yglXucLO/xIwI2iT8uGTj2LViZbSec5rmnCPTWY0doTHuhTUP0N+oGmzdzqOpkXstxNcmn708QjwJyDwwJfp9IBIQlAr1CyuEJchAghVLyYidlOzlLHfhXq0APKtEk8PVwvypiW2+bqmypwTbh4zZk6/9iVvbHff7kcu8qOgKN2drSovsGJcBLizz0m92l00Bk3ShyhX1fNqm69qnwKN5O/AL1aKPuRaT9r5Zb4vjmlWdOKDEiSb12sFIku3bdHl9YIXY1z7uKEJhTMWkcL3wgPV3ymdHpPJuNaN94KSPiODLJTLUnWwvo7I9CZEVq+7KC+5XcEN7gV17GO8+80I2rknUbkpS0wW58jqBMeHLhKUuJAxJ/mRMf8hxtWkcsP9tZqVOf6lrs6fKoNu0b05QUsIg712W/3207bScunNCEpgV3HIt1/DW/w6hBizmGHsxghQcGt+cLMwJI+Z3WJNqwPru_z7WC0lfx3s8c0HSeP0aQBU7QoBjE8luCX3gXqtTYOMRwcIvBPQvPOkkfImCUuELx7i8bbglyaKNNR5-ZjLYPcX6xFfkm0Nk6KfRylOnCcRJVtwqu2Vw0YdZl/9rP24RuY/x6Aq7hw2V5XMDDscCsRQR1W5zux+/eD5tZVYbvVqGGDSrTQtLoKHKy3+y6fVKpntGQMJcVFZYbcHrWwg/EbGQoOtwQrngVLQNjvCfA4nEW7KYwfr5uKHdkPFUSLT8JmSFNxmSHFeJoo8FunvaJZTQ76I0EHHU6iJE/jSFd+nTLCeK+mdK5L01zyVru52A5yw6n/Hvr5rpxE5voI5tME5UpqMbXaJV4HPo65iC2Oy21bdkpbEDT8wvV3ZGa2MVCSt3oix6Ud4D/XFxLIvnVESbEmWjKahqmIgHmaHCOQlBcZpxtRnkdKq8xOogsMoAou9R2nkf9OzOR5Dgg/uh1KYp/0kBJ4YZEivT01dTq4KzSiS5YesJnmgYiyoTQ72zRU2s5wMTSXwpS9MkyHARQryf6fd1Li2DsXvQvLhBTysM5MdKjBRO7csvLjhCeAxxiDab+tJVsbmhtOIIZv/gho2rPyzQvQEr+HgvysruDVSriNb3vrlbmvjr-egUH9ZSQ3YKE/bj4jY5PJTKmPtpipQt/q+tiV+OKsylE3CstIS281t8-mIZg/1TtD/z5c9bswJjbFETR2O0J4wIOarJqmBB/dpMrgVtCRQ2esComcGu3QhOzs_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
