//
// Generated by CocoaPods-Keys
// on 28/06/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1583], PatchrKeysData[3890], PatchrKeysData[4453], PatchrKeysData[160], PatchrKeysData[5366], PatchrKeysData[916], PatchrKeysData[2931], PatchrKeysData[3397], PatchrKeysData[1924], PatchrKeysData[2065], PatchrKeysData[372], PatchrKeysData[1597], PatchrKeysData[3977], PatchrKeysData[5493], PatchrKeysData[4165], PatchrKeysData[4272], PatchrKeysData[5656], PatchrKeysData[398], PatchrKeysData[3525], PatchrKeysData[5740], PatchrKeysData[5686], PatchrKeysData[770], PatchrKeysData[2603], PatchrKeysData[4923], PatchrKeysData[83], PatchrKeysData[1307], PatchrKeysData[3289], PatchrKeysData[5210], PatchrKeysData[4720], PatchrKeysData[5515], PatchrKeysData[3731], PatchrKeysData[4419], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2551], PatchrKeysData[1674], PatchrKeysData[4250], PatchrKeysData[5152], PatchrKeysData[3532], PatchrKeysData[56], PatchrKeysData[1837], PatchrKeysData[673], PatchrKeysData[3157], PatchrKeysData[3163], PatchrKeysData[3540], PatchrKeysData[1015], PatchrKeysData[801], PatchrKeysData[4801], PatchrKeysData[4085], PatchrKeysData[2811], PatchrKeysData[3009], PatchrKeysData[1888], PatchrKeysData[4173], PatchrKeysData[5704], PatchrKeysData[4543], PatchrKeysData[2386], PatchrKeysData[1638], PatchrKeysData[3044], PatchrKeysData[1517], PatchrKeysData[1106], PatchrKeysData[2447], PatchrKeysData[3435], PatchrKeysData[2219], PatchrKeysData[2676], PatchrKeysData[3287], PatchrKeysData[4107], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1283], PatchrKeysData[2138], PatchrKeysData[2111], PatchrKeysData[4780], PatchrKeysData[4105], PatchrKeysData[2259], PatchrKeysData[4101], PatchrKeysData[2894], PatchrKeysData[4427], PatchrKeysData[2062], PatchrKeysData[520], PatchrKeysData[1528], PatchrKeysData[651], PatchrKeysData[1372], PatchrKeysData[1382], PatchrKeysData[72], PatchrKeysData[3620], PatchrKeysData[740], PatchrKeysData[5006], PatchrKeysData[3581], PatchrKeysData[1698], PatchrKeysData[1614], PatchrKeysData[3005], PatchrKeysData[2801], PatchrKeysData[2956], PatchrKeysData[2672], PatchrKeysData[3589], PatchrKeysData[2366], PatchrKeysData[4924], PatchrKeysData[1374], PatchrKeysData[956], PatchrKeysData[3153], PatchrKeysData[1135], PatchrKeysData[4405], PatchrKeysData[5171], PatchrKeysData[3821], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[5778], PatchrKeysData[249], PatchrKeysData[5373], PatchrKeysData[5380], PatchrKeysData[3210], PatchrKeysData[2585], PatchrKeysData[1145], PatchrKeysData[4888], PatchrKeysData[2727], PatchrKeysData[617], PatchrKeysData[2576], PatchrKeysData[2275], PatchrKeysData[3359], PatchrKeysData[337], PatchrKeysData[790], PatchrKeysData[3466], PatchrKeysData[3238], PatchrKeysData[2765], PatchrKeysData[1840], PatchrKeysData[106], PatchrKeysData[891], PatchrKeysData[1903], PatchrKeysData[5463], PatchrKeysData[1286], PatchrKeysData[3592], PatchrKeysData[2037], PatchrKeysData[4629], PatchrKeysData[5036], PatchrKeysData[2984], PatchrKeysData[5579], PatchrKeysData[1981], PatchrKeysData[3041], PatchrKeysData[5054], PatchrKeysData[399], PatchrKeysData[4241], PatchrKeysData[2707], PatchrKeysData[494], PatchrKeysData[128], PatchrKeysData[4916], PatchrKeysData[5060], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4618], PatchrKeysData[688], PatchrKeysData[5112], PatchrKeysData[910], PatchrKeysData[5567], PatchrKeysData[5780], PatchrKeysData[1344], PatchrKeysData[4591], PatchrKeysData[5327], PatchrKeysData[1971], PatchrKeysData[5736], PatchrKeysData[4054], PatchrKeysData[1118], PatchrKeysData[3550], PatchrKeysData[755], PatchrKeysData[3822], PatchrKeysData[821], PatchrKeysData[4077], PatchrKeysData[537], PatchrKeysData[4008], PatchrKeysData[2134], PatchrKeysData[2368], PatchrKeysData[4178], PatchrKeysData[733], PatchrKeysData[196], PatchrKeysData[2995], PatchrKeysData[674], PatchrKeysData[5159], PatchrKeysData[744], PatchrKeysData[2648], PatchrKeysData[5539], PatchrKeysData[223], PatchrKeysData[857], PatchrKeysData[5746], PatchrKeysData[595], PatchrKeysData[1848], PatchrKeysData[5434], PatchrKeysData[5467], PatchrKeysData[4792], PatchrKeysData[955], PatchrKeysData[1441], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[5794] = "zLt755LlxVJMrx+rCqGX7aCR5yTaEgRW9BsHxc0e5O0cuxwVILMAT98O0EzGrY+SZ42PhJ7VcvK7D2QrT4q3TjTXiXVoq3dsucnuLmE4+dWuCDq5zK97TLAwo5rH6LUHxA8Vi6KD8ErbOxi7DFm+quk9MXgMbAB61n7HYkvrvTOzcTZ1BS9ahCZFG0My9itdDu+fEcOO0r0EOAwJtcRm56xni1IOmJKkhH++G79orD+imAGxppxU9+fIoeeL+xGWtKZEkmYDJUXinza6rnTGHUlf3GpAH2sDrTBvzSGjXupD/1Ik7Jef11+tZlDce8RwK65MpwiDjHO6dAANkkC4VPgk2hAwEoKxTDw+lC7dl+31APwU2rAKc/69fMDFF/s8wzrtl893mhyAQ94gQU0QaMWD6o8HmVbwTRXKY6QsigBYW0JNds8R+/VhQ/wTUDJrncxzXsas5cAmF6RxivAZDodZjhT/G3CvI3yo1Fe7ogEdVTaXrhkN9y7UBHLvuY3Ha6SwFsKG123abZnM0zv52001u62QtGrgt4Pc3sgtwUXhWqyQK6l+EQ6SDDXP/0cNq3uqqREJUeclzuIlxUxr/JlU2XmsENvNZJWx6lU5W6iMtzWeoTwwlDHXnaLBB9VUdRXucMCzTKHdseVl+KLETxxcXaDU+Aswr8lSwa/y7+r8qtRPeNkXgjK/GPe8W40oss0UN4qR4h2aSHNWtWOY9JKZF26of3uWYXp46/OCV4XTkntwjDshG06D8bWb6KkwJM0xHqM3fL1+0cuXvVXaTweoQNPKzgime4veHvgBZ7QDW68qhoxFp9CkUcX7rDqsr5QyZBkB4ORuJcEFYBFU3L8vflTSoCOQ1oGv55l6sU1KNnI9GYSnxzJcmqliQ0nr/c2wkMeDZkopWk_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_ZpLBAAQ2PXf1pSSKA3m3yoNFwclGDFGVfyuPCA3Ay24MYNuVDexo8te1s7spstrGwEHCtkO3enVdTOlPWg/fXqSbYOZiaIOxxr6ncCVnKrKpge6Djv4sdjV/+F7IXhzc5tbohgVEHUlnHgJ2SjnOroHVIOq2Gm0N/h+MudpOtIsnW4psqePZG8FDbS5coDsgyLfo1a7e0m7K+j8zpecl6hS4bhYly4Lc4b9TbjhqFfgucPYlKjYKdKjnokSQwA0tw3X6RXH1NVcf7bAfbmqhfU8JXzbJaklUDPl1FQ5qTw3bkzGa8wbNZd67xkPm1WDDPlEoEj/d71kSwn5LrBFenRTwutTJhvZt7Ks0d74WsvUDBjSftwNp2JzvbY8dzEXhiO8sp9FqwugqE69pcTgZjy3Zag6O95YUHGz2hqEE8rLGnO9+nrsd5VwCZMJXxlnvPn+giUk7K3OtCK0R\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
