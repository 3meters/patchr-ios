//
// Generated by CocoaPods-Keys
// on 01/03/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[9661], PatchrKeysData[9487], PatchrKeysData[8338], PatchrKeysData[14079], PatchrKeysData[1450], PatchrKeysData[10857], PatchrKeysData[4], PatchrKeysData[7826], PatchrKeysData[5900], PatchrKeysData[13911], PatchrKeysData[9816], PatchrKeysData[14251], PatchrKeysData[11058], PatchrKeysData[1452], PatchrKeysData[12223], PatchrKeysData[3498], PatchrKeysData[2801], PatchrKeysData[5428], PatchrKeysData[8376], PatchrKeysData[13344], PatchrKeysData[12445], PatchrKeysData[11298], PatchrKeysData[13461], PatchrKeysData[11718], PatchrKeysData[531], PatchrKeysData[6936], PatchrKeysData[13169], PatchrKeysData[4724], PatchrKeysData[4766], PatchrKeysData[1172], PatchrKeysData[4760], PatchrKeysData[8957], PatchrKeysData[11170], PatchrKeysData[1911], PatchrKeysData[6057], PatchrKeysData[5052], PatchrKeysData[10756], PatchrKeysData[11576], PatchrKeysData[4276], PatchrKeysData[11887], PatchrKeysData[3534], PatchrKeysData[1563], PatchrKeysData[1360], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[8937], PatchrKeysData[12945], PatchrKeysData[6212], PatchrKeysData[6759], PatchrKeysData[290], PatchrKeysData[12731], PatchrKeysData[6361], PatchrKeysData[4517], PatchrKeysData[545], PatchrKeysData[2703], PatchrKeysData[11609], PatchrKeysData[12801], PatchrKeysData[14416], PatchrKeysData[5362], PatchrKeysData[3758], PatchrKeysData[1041], PatchrKeysData[3800], PatchrKeysData[5227], PatchrKeysData[13460], PatchrKeysData[6969], PatchrKeysData[6330], PatchrKeysData[3613], PatchrKeysData[5596], PatchrKeysData[14481], PatchrKeysData[8639], PatchrKeysData[2148], PatchrKeysData[2954], PatchrKeysData[9971], PatchrKeysData[325], PatchrKeysData[14670], PatchrKeysData[5677], PatchrKeysData[5817], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[10078], PatchrKeysData[12329], PatchrKeysData[6968], PatchrKeysData[8541], PatchrKeysData[3272], PatchrKeysData[13447], PatchrKeysData[9195], PatchrKeysData[12555], PatchrKeysData[5797], PatchrKeysData[6177], PatchrKeysData[1283], PatchrKeysData[4128], PatchrKeysData[6920], PatchrKeysData[4077], PatchrKeysData[6593], PatchrKeysData[14454], PatchrKeysData[10860], PatchrKeysData[5219], PatchrKeysData[44], PatchrKeysData[12343], PatchrKeysData[6116], PatchrKeysData[7479], PatchrKeysData[11612], PatchrKeysData[159], PatchrKeysData[6521], PatchrKeysData[14773], PatchrKeysData[977], PatchrKeysData[10838], PatchrKeysData[14534], PatchrKeysData[12202], PatchrKeysData[11693], PatchrKeysData[7700], PatchrKeysData[2560], PatchrKeysData[14409], PatchrKeysData[12295], PatchrKeysData[1207], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[1598], PatchrKeysData[13715], PatchrKeysData[2276], PatchrKeysData[9395], PatchrKeysData[5634], PatchrKeysData[4556], PatchrKeysData[12947], PatchrKeysData[12458], PatchrKeysData[6021], PatchrKeysData[7915], PatchrKeysData[10038], PatchrKeysData[9451], PatchrKeysData[841], PatchrKeysData[12857], PatchrKeysData[6299], PatchrKeysData[9310], PatchrKeysData[8224], PatchrKeysData[12041], PatchrKeysData[6558], PatchrKeysData[10242], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[8663], PatchrKeysData[12777], PatchrKeysData[9834], PatchrKeysData[14058], PatchrKeysData[4270], PatchrKeysData[14355], PatchrKeysData[7970], PatchrKeysData[4043], PatchrKeysData[4385], PatchrKeysData[3712], PatchrKeysData[12321], PatchrKeysData[6688], PatchrKeysData[5627], PatchrKeysData[2729], PatchrKeysData[7586], PatchrKeysData[13749], PatchrKeysData[10466], PatchrKeysData[2957], PatchrKeysData[13001], PatchrKeysData[11533], PatchrKeysData[1337], PatchrKeysData[5320], PatchrKeysData[11833], PatchrKeysData[2665], PatchrKeysData[13768], PatchrKeysData[2004], PatchrKeysData[9671], PatchrKeysData[9645], PatchrKeysData[7268], PatchrKeysData[5955], PatchrKeysData[14812], PatchrKeysData[8655], PatchrKeysData[10306], PatchrKeysData[13008], PatchrKeysData[3053], PatchrKeysData[2991], PatchrKeysData[2820], PatchrKeysData[6452], PatchrKeysData[777], PatchrKeysData[2629], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[550], PatchrKeysData[8496], PatchrKeysData[12610], PatchrKeysData[5788], PatchrKeysData[1814], PatchrKeysData[13920], PatchrKeysData[6586], PatchrKeysData[14141], PatchrKeysData[10191], PatchrKeysData[5037], PatchrKeysData[13026], PatchrKeysData[11793], PatchrKeysData[2500], PatchrKeysData[753], PatchrKeysData[11296], PatchrKeysData[6500], PatchrKeysData[5513], PatchrKeysData[9845], PatchrKeysData[2391], PatchrKeysData[3577], PatchrKeysData[1421], PatchrKeysData[8132], PatchrKeysData[5561], PatchrKeysData[563], PatchrKeysData[10228], PatchrKeysData[2934], PatchrKeysData[13116], PatchrKeysData[13488], PatchrKeysData[9727], PatchrKeysData[6022], PatchrKeysData[3938], PatchrKeysData[3509], PatchrKeysData[12001], PatchrKeysData[7286], PatchrKeysData[12227], PatchrKeysData[13853], PatchrKeysData[2473], PatchrKeysData[11420], PatchrKeysData[9042], PatchrKeysData[14736], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[11475], PatchrKeysData[10657], PatchrKeysData[13100], PatchrKeysData[13218], PatchrKeysData[11160], PatchrKeysData[11792], PatchrKeysData[7205], PatchrKeysData[2355], PatchrKeysData[6425], PatchrKeysData[5119], PatchrKeysData[12886], PatchrKeysData[8300], PatchrKeysData[8547], PatchrKeysData[6095], PatchrKeysData[12402], PatchrKeysData[6782], PatchrKeysData[11756], PatchrKeysData[12854], PatchrKeysData[5509], PatchrKeysData[1980], PatchrKeysData[526], PatchrKeysData[2189], PatchrKeysData[3165], PatchrKeysData[6122], PatchrKeysData[9492], PatchrKeysData[5971], PatchrKeysData[10913], PatchrKeysData[12471], PatchrKeysData[14663], PatchrKeysData[6236], PatchrKeysData[6644], PatchrKeysData[13106], PatchrKeysData[6352], PatchrKeysData[116], PatchrKeysData[13634], PatchrKeysData[3119], PatchrKeysData[8135], PatchrKeysData[3808], PatchrKeysData[997], PatchrKeysData[7955], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6233], PatchrKeysData[3533], PatchrKeysData[14395], PatchrKeysData[2407], PatchrKeysData[1048], PatchrKeysData[2253], PatchrKeysData[11779], PatchrKeysData[4032], PatchrKeysData[3906], PatchrKeysData[8578], PatchrKeysData[2405], PatchrKeysData[8665], PatchrKeysData[8538], PatchrKeysData[14287], PatchrKeysData[12085], PatchrKeysData[10955], PatchrKeysData[3476], PatchrKeysData[9887], PatchrKeysData[7493], PatchrKeysData[14657], PatchrKeysData[2752], PatchrKeysData[13213], PatchrKeysData[14147], PatchrKeysData[6081], PatchrKeysData[2769], PatchrKeysData[14351], PatchrKeysData[9592], PatchrKeysData[2163], PatchrKeysData[3136], PatchrKeysData[345], PatchrKeysData[12225], PatchrKeysData[9225], PatchrKeysData[11307], PatchrKeysData[11531], PatchrKeysData[3879], PatchrKeysData[14843], PatchrKeysData[1762], PatchrKeysData[3042], PatchrKeysData[2278], PatchrKeysData[1163], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[6476], PatchrKeysData[4483], PatchrKeysData[12123], PatchrKeysData[9014], PatchrKeysData[6894], PatchrKeysData[14900], PatchrKeysData[10261], PatchrKeysData[6992], PatchrKeysData[13952], PatchrKeysData[2931], PatchrKeysData[3887], PatchrKeysData[5728], PatchrKeysData[12209], PatchrKeysData[5652], PatchrKeysData[11093], PatchrKeysData[12717], PatchrKeysData[9923], PatchrKeysData[7935], PatchrKeysData[8933], PatchrKeysData[7263], PatchrKeysData[5706], PatchrKeysData[12955], PatchrKeysData[12372], PatchrKeysData[13500], PatchrKeysData[11037], PatchrKeysData[10335], PatchrKeysData[7858], PatchrKeysData[5515], PatchrKeysData[9186], PatchrKeysData[12870], PatchrKeysData[7343], PatchrKeysData[14880], PatchrKeysData[2914], PatchrKeysData[14083], PatchrKeysData[6562], PatchrKeysData[10229], PatchrKeysData[3717], PatchrKeysData[4519], PatchrKeysData[1796], PatchrKeysData[14310], PatchrKeysData[13383], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[11513], PatchrKeysData[13047], PatchrKeysData[6483], PatchrKeysData[5593], PatchrKeysData[10411], PatchrKeysData[8195], PatchrKeysData[3346], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[9221], PatchrKeysData[4228], PatchrKeysData[10670], PatchrKeysData[3703], PatchrKeysData[3436], PatchrKeysData[13035], PatchrKeysData[14859], PatchrKeysData[6437], PatchrKeysData[6271], PatchrKeysData[14530], PatchrKeysData[12429], PatchrKeysData[589], PatchrKeysData[106], PatchrKeysData[6751], PatchrKeysData[11265], PatchrKeysData[14592], PatchrKeysData[9767], PatchrKeysData[8516], PatchrKeysData[13598], PatchrKeysData[12270], PatchrKeysData[4381], PatchrKeysData[13934], PatchrKeysData[10252], PatchrKeysData[1847], PatchrKeysData[1053], PatchrKeysData[9957], PatchrKeysData[5769], PatchrKeysData[9960], PatchrKeysData[9978], PatchrKeysData[12514], PatchrKeysData[3426], PatchrKeysData[13603], PatchrKeysData[4789], PatchrKeysData[3801], PatchrKeysData[506], PatchrKeysData[10112], PatchrKeysData[14255], PatchrKeysData[9243], PatchrKeysData[324], PatchrKeysData[11157], PatchrKeysData[14436], PatchrKeysData[11938], PatchrKeysData[13115], PatchrKeysData[14940], PatchrKeysData[9880], PatchrKeysData[12132], PatchrKeysData[1807], PatchrKeysData[7326], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[14966] = "|qpTfc8LHJksyWsB4j8P4KP/OAyO44Z1kgL35flL6P7CjPCVubu4t7nJKIM4+fC87c71C+ehGEnzcD9XXchIdUAGdFcNGgdBQtBEDKAU0/ZRjrc9LQpBid4WEyR7cqgYjyDtVzdXoaqPoOTdzXCQRRejqjzYojzKy3L3PLBipD+qOAMA9yRG8c26fYXUNGLIdpdWpCzR7NaZxaqKOYEsFx5d8OLWDIb1f6CSH8SVNzekys0VLFklcTcW7H9fg7sM66QI4XSFQav80O1FWKGY9eUrSaiAwJcck7Foon/R6Ibzs39g66ZviEFRUFoPeYnnVIlRD6SrGdYs65VImlWMQ+nw/5xG3OEicrs7sLVZ4jWxTrWE/lqJ\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
