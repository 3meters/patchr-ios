//
// Generated by CocoaPods-Keys
// on 19/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1478], PatchrKeysData[4238], PatchrKeysData[7772], PatchrKeysData[1601], PatchrKeysData[9472], PatchrKeysData[7675], PatchrKeysData[618], PatchrKeysData[3923], PatchrKeysData[8666], PatchrKeysData[9492], PatchrKeysData[2560], PatchrKeysData[5396], PatchrKeysData[6042], PatchrKeysData[3976], PatchrKeysData[9455], PatchrKeysData[8655], PatchrKeysData[5381], PatchrKeysData[671], PatchrKeysData[6883], PatchrKeysData[7575], PatchrKeysData[842], PatchrKeysData[2774], PatchrKeysData[7987], PatchrKeysData[3630], PatchrKeysData[363], PatchrKeysData[6952], PatchrKeysData[6643], PatchrKeysData[8818], PatchrKeysData[5511], PatchrKeysData[8770], PatchrKeysData[6090], PatchrKeysData[7127], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[7002], PatchrKeysData[5806], PatchrKeysData[5197], PatchrKeysData[4998], PatchrKeysData[6843], PatchrKeysData[1361], PatchrKeysData[1552], PatchrKeysData[3978], PatchrKeysData[3906], PatchrKeysData[7959], PatchrKeysData[3779], PatchrKeysData[4958], PatchrKeysData[5844], PatchrKeysData[2223], PatchrKeysData[5222], PatchrKeysData[8702], PatchrKeysData[5972], PatchrKeysData[7608], PatchrKeysData[1304], PatchrKeysData[5132], PatchrKeysData[9137], PatchrKeysData[5014], PatchrKeysData[7732], PatchrKeysData[5681], PatchrKeysData[5622], PatchrKeysData[2290], PatchrKeysData[2454], PatchrKeysData[3354], PatchrKeysData[3594], PatchrKeysData[9246], PatchrKeysData[5774], PatchrKeysData[8813], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3591], PatchrKeysData[8928], PatchrKeysData[8855], PatchrKeysData[1862], PatchrKeysData[6847], PatchrKeysData[1747], PatchrKeysData[4402], PatchrKeysData[4757], PatchrKeysData[2784], PatchrKeysData[7066], PatchrKeysData[7913], PatchrKeysData[5319], PatchrKeysData[4766], PatchrKeysData[1920], PatchrKeysData[471], PatchrKeysData[7483], PatchrKeysData[8895], PatchrKeysData[7344], PatchrKeysData[7582], PatchrKeysData[5479], PatchrKeysData[2662], PatchrKeysData[8204], PatchrKeysData[8078], PatchrKeysData[3785], PatchrKeysData[34], PatchrKeysData[381], PatchrKeysData[3428], PatchrKeysData[4458], PatchrKeysData[4872], PatchrKeysData[3805], PatchrKeysData[2198], PatchrKeysData[6092], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[4131], PatchrKeysData[3154], PatchrKeysData[6054], PatchrKeysData[7532], PatchrKeysData[6691], PatchrKeysData[5172], PatchrKeysData[3717], PatchrKeysData[6041], PatchrKeysData[1654], PatchrKeysData[3749], PatchrKeysData[3839], PatchrKeysData[314], PatchrKeysData[9074], PatchrKeysData[3959], PatchrKeysData[3312], PatchrKeysData[3741], PatchrKeysData[7210], PatchrKeysData[2925], PatchrKeysData[8688], PatchrKeysData[8960], PatchrKeysData[4041], PatchrKeysData[2284], PatchrKeysData[6316], PatchrKeysData[614], PatchrKeysData[4669], PatchrKeysData[5406], PatchrKeysData[5899], PatchrKeysData[7106], PatchrKeysData[2265], PatchrKeysData[1082], PatchrKeysData[2987], PatchrKeysData[1503], PatchrKeysData[4379], PatchrKeysData[723], PatchrKeysData[439], PatchrKeysData[393], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[525], PatchrKeysData[2503], PatchrKeysData[8661], PatchrKeysData[4370], PatchrKeysData[9165], PatchrKeysData[5826], PatchrKeysData[43], PatchrKeysData[8814], PatchrKeysData[5022], PatchrKeysData[4377], PatchrKeysData[8089], PatchrKeysData[3300], PatchrKeysData[2029], PatchrKeysData[9019], PatchrKeysData[168], PatchrKeysData[6236], PatchrKeysData[480], PatchrKeysData[2217], PatchrKeysData[944], PatchrKeysData[6013], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7909], PatchrKeysData[6938], PatchrKeysData[497], PatchrKeysData[6914], PatchrKeysData[8378], PatchrKeysData[6704], PatchrKeysData[5460], PatchrKeysData[5559], PatchrKeysData[6795], PatchrKeysData[6146], PatchrKeysData[2203], PatchrKeysData[5588], PatchrKeysData[7511], PatchrKeysData[2034], PatchrKeysData[5484], PatchrKeysData[6940], PatchrKeysData[6676], PatchrKeysData[6553], PatchrKeysData[3330], PatchrKeysData[7462], PatchrKeysData[6457], PatchrKeysData[9191], PatchrKeysData[2296], PatchrKeysData[9237], PatchrKeysData[560], PatchrKeysData[4761], PatchrKeysData[8077], PatchrKeysData[1209], PatchrKeysData[1343], PatchrKeysData[6105], PatchrKeysData[8729], PatchrKeysData[4580], PatchrKeysData[4431], PatchrKeysData[6992], PatchrKeysData[7711], PatchrKeysData[9526], PatchrKeysData[2023], PatchrKeysData[5970], PatchrKeysData[7133], PatchrKeysData[8673], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[537], PatchrKeysData[2647], PatchrKeysData[6719], PatchrKeysData[1826], PatchrKeysData[489], PatchrKeysData[7870], PatchrKeysData[183], PatchrKeysData[4397], PatchrKeysData[9506], PatchrKeysData[2128], PatchrKeysData[1211], PatchrKeysData[659], PatchrKeysData[4008], PatchrKeysData[2512], PatchrKeysData[915], PatchrKeysData[6869], PatchrKeysData[4245], PatchrKeysData[5617], PatchrKeysData[3256], PatchrKeysData[6972], PatchrKeysData[2076], PatchrKeysData[6609], PatchrKeysData[2604], PatchrKeysData[8218], PatchrKeysData[4404], PatchrKeysData[1741], PatchrKeysData[1832], PatchrKeysData[5420], PatchrKeysData[931], PatchrKeysData[629], PatchrKeysData[6374], PatchrKeysData[701], PatchrKeysData[13], PatchrKeysData[1181], PatchrKeysData[6819], PatchrKeysData[367], PatchrKeysData[8287], PatchrKeysData[7670], PatchrKeysData[9356], PatchrKeysData[1952], PatchrKeysData[2077], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[6493], PatchrKeysData[8787], PatchrKeysData[9078], PatchrKeysData[4142], PatchrKeysData[8713], PatchrKeysData[4624], PatchrKeysData[6817], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[4186], PatchrKeysData[2838], PatchrKeysData[1668], PatchrKeysData[8032], PatchrKeysData[6901], PatchrKeysData[7181], PatchrKeysData[7195], PatchrKeysData[139], PatchrKeysData[519], PatchrKeysData[2846], PatchrKeysData[1850], PatchrKeysData[4880], PatchrKeysData[3566], PatchrKeysData[3227], PatchrKeysData[8054], PatchrKeysData[1097], PatchrKeysData[5147], PatchrKeysData[4674], PatchrKeysData[4564], PatchrKeysData[1999], PatchrKeysData[3980], PatchrKeysData[3097], PatchrKeysData[2935], PatchrKeysData[4576], PatchrKeysData[943], PatchrKeysData[2069], PatchrKeysData[6957], PatchrKeysData[121], PatchrKeysData[2395], PatchrKeysData[7949], PatchrKeysData[3455], PatchrKeysData[6658], PatchrKeysData[1103], PatchrKeysData[8200], PatchrKeysData[5262], PatchrKeysData[240], PatchrKeysData[4474], PatchrKeysData[351], PatchrKeysData[4636], PatchrKeysData[8473], PatchrKeysData[6393], PatchrKeysData[2832], PatchrKeysData[3321], PatchrKeysData[6181], PatchrKeysData[1714], PatchrKeysData[3438], PatchrKeysData[1433], PatchrKeysData[1706], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9602] = "C4dKDuNYAAe2Ulp6T4gqZ7gUoXQYtctjMz1pxYeXpZDUlDLG3FgcWJK1dt/+PleAsVVKv0Rm7b1sZGsUy/a/8dNAxbtlGMExMpbfnJdKm4B7NZWD6UmmzE77wbBqvfyA6I7MC7ViR1l5zk5uqtWaTcWkJ61TrN5KEu+hQTJzOMaaony2+BKhE9gv8cdTl7+88q3IQZv5irxVaAuGtCf3O1YBwy7o/bqyu+WJFiz4svH6OBMPbSBKdIHij8/NX7fqcBXrc+J+mnjDAKJK4hIbU/kSigE/kp7nUagz8uR43PGDB6hjfY8o+3zJmo1dEMfUVM7oRN2a3BO5MI+OcDJNxxxPOfZif+G9H/snROIJCRx3/+ua4gj1T57DGoK/o02i74m2Gf0u4bSROmPoqn6vJJJgwd+YbBH+Fk0j0ULwAeghH3DyH6L+rPKaFFIWATHxz6B+eNWYifJ34zEYZqK74f14AWLTP3SFG1H4F0pmMlDzLiIMoNCR/NPYwEuohpzBDPbEDtU7bNL4kAWL4EHPdkxN5kdu7SwtVB8GcA2YWPymwsC6h18iU8pIVYfhMK7vztz/SypOLhQsEysynPXdyMjYNmGsDL19rslQU3-5U08nSyLjwh3rms6Umr4WaiquAA1Vb7RThYhcU1/Qt4hbySozXPWvSe84vcAWHz6/7LQV46CbngsxjiSFRzH27ksKDAQSD9OZJ6XyE1iEyyq0BteEgyaXSfEQWGI5MdQkOeWNnyj0ls7hd9DVBGQkMAWmod8QDP/oHqW1KgrYv3YbAGb2uQcl/K7QGkbu56xR1fW6r9UxGcslHcgLSQ7yTosCF4IPE5A6DW48lYLibjYQKcpviqZoBufAA3oBhiKrXnfXAgP7oYQAtbKKrN4QxLoJQQQ5PlSlgWvcX7dP9XphPoaQ/RgYefQQxc8VawEr8BkZh1qbCE0YxWKTi53CydY+ril/U7JF4ZmhjuJFChxpzV9HkaDTC+5kvCdplJzX/X0KppTozuIfu7zmq3Ai9ieTdxbgj5NjJY5kXHg749CiRuS4ehSIpQT9AFfub2XlMT4nhMg2U4Rs6SQjcMaXDZRBcCnmLeRrv|\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
