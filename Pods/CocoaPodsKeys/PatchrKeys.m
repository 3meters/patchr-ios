//
// Generated by CocoaPods-Keys
// on 17/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[415], PatchrKeysData[6405], PatchrKeysData[9130], PatchrKeysData[8151], PatchrKeysData[370], PatchrKeysData[8591], PatchrKeysData[8440], PatchrKeysData[578], PatchrKeysData[3313], PatchrKeysData[6659], PatchrKeysData[731], PatchrKeysData[8939], PatchrKeysData[2813], PatchrKeysData[1740], PatchrKeysData[6826], PatchrKeysData[7599], PatchrKeysData[7766], PatchrKeysData[7714], PatchrKeysData[8870], PatchrKeysData[3860], PatchrKeysData[5565], PatchrKeysData[7253], PatchrKeysData[5050], PatchrKeysData[5091], PatchrKeysData[1265], PatchrKeysData[4706], PatchrKeysData[8950], PatchrKeysData[651], PatchrKeysData[4166], PatchrKeysData[3040], PatchrKeysData[4194], PatchrKeysData[5475], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[8277], PatchrKeysData[1623], PatchrKeysData[3274], PatchrKeysData[8736], PatchrKeysData[648], PatchrKeysData[8264], PatchrKeysData[132], PatchrKeysData[6635], PatchrKeysData[8036], PatchrKeysData[2788], PatchrKeysData[44], PatchrKeysData[2637], PatchrKeysData[8740], PatchrKeysData[1804], PatchrKeysData[1772], PatchrKeysData[2581], PatchrKeysData[3552], PatchrKeysData[4554], PatchrKeysData[7805], PatchrKeysData[699], PatchrKeysData[4796], PatchrKeysData[7850], PatchrKeysData[7453], PatchrKeysData[6045], PatchrKeysData[7733], PatchrKeysData[4098], PatchrKeysData[1187], PatchrKeysData[7463], PatchrKeysData[7704], PatchrKeysData[3292], PatchrKeysData[6938], PatchrKeysData[1091], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1177], PatchrKeysData[7984], PatchrKeysData[4984], PatchrKeysData[3324], PatchrKeysData[8639], PatchrKeysData[7646], PatchrKeysData[703], PatchrKeysData[8348], PatchrKeysData[2590], PatchrKeysData[1184], PatchrKeysData[5806], PatchrKeysData[1045], PatchrKeysData[4306], PatchrKeysData[9034], PatchrKeysData[4476], PatchrKeysData[4284], PatchrKeysData[7182], PatchrKeysData[422], PatchrKeysData[8188], PatchrKeysData[456], PatchrKeysData[6497], PatchrKeysData[3544], PatchrKeysData[5159], PatchrKeysData[5353], PatchrKeysData[8123], PatchrKeysData[3430], PatchrKeysData[8986], PatchrKeysData[2715], PatchrKeysData[385], PatchrKeysData[2232], PatchrKeysData[4908], PatchrKeysData[3409], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1314], PatchrKeysData[3522], PatchrKeysData[3855], PatchrKeysData[4745], PatchrKeysData[5312], PatchrKeysData[4906], PatchrKeysData[4902], PatchrKeysData[5877], PatchrKeysData[5461], PatchrKeysData[639], PatchrKeysData[6908], PatchrKeysData[9095], PatchrKeysData[7741], PatchrKeysData[6963], PatchrKeysData[137], PatchrKeysData[2758], PatchrKeysData[1217], PatchrKeysData[5760], PatchrKeysData[1165], PatchrKeysData[7070], PatchrKeysData[3811], PatchrKeysData[8909], PatchrKeysData[3407], PatchrKeysData[7337], PatchrKeysData[4717], PatchrKeysData[2646], PatchrKeysData[4196], PatchrKeysData[5546], PatchrKeysData[2927], PatchrKeysData[3812], PatchrKeysData[805], PatchrKeysData[4901], PatchrKeysData[1763], PatchrKeysData[6637], PatchrKeysData[4946], PatchrKeysData[667], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[2633], PatchrKeysData[6887], PatchrKeysData[1170], PatchrKeysData[3902], PatchrKeysData[3633], PatchrKeysData[5115], PatchrKeysData[1852], PatchrKeysData[1222], PatchrKeysData[2068], PatchrKeysData[1494], PatchrKeysData[9192], PatchrKeysData[7297], PatchrKeysData[1302], PatchrKeysData[1653], PatchrKeysData[2191], PatchrKeysData[4729], PatchrKeysData[6001], PatchrKeysData[5795], PatchrKeysData[8275], PatchrKeysData[7415], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[2413], PatchrKeysData[1558], PatchrKeysData[2501], PatchrKeysData[3071], PatchrKeysData[1695], PatchrKeysData[5048], PatchrKeysData[8835], PatchrKeysData[6831], PatchrKeysData[54], PatchrKeysData[9157], PatchrKeysData[6782], PatchrKeysData[4963], PatchrKeysData[8828], PatchrKeysData[5146], PatchrKeysData[7947], PatchrKeysData[1999], PatchrKeysData[3631], PatchrKeysData[9063], PatchrKeysData[3275], PatchrKeysData[796], PatchrKeysData[2339], PatchrKeysData[7223], PatchrKeysData[4937], PatchrKeysData[4396], PatchrKeysData[6706], PatchrKeysData[1051], PatchrKeysData[8897], PatchrKeysData[6544], PatchrKeysData[6340], PatchrKeysData[2566], PatchrKeysData[5100], PatchrKeysData[5968], PatchrKeysData[3952], PatchrKeysData[3162], PatchrKeysData[2070], PatchrKeysData[4441], PatchrKeysData[7795], PatchrKeysData[4114], PatchrKeysData[3908], PatchrKeysData[2988], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4905], PatchrKeysData[7794], PatchrKeysData[4942], PatchrKeysData[4082], PatchrKeysData[1340], PatchrKeysData[4089], PatchrKeysData[5531], PatchrKeysData[4500], PatchrKeysData[9109], PatchrKeysData[3143], PatchrKeysData[4322], PatchrKeysData[9098], PatchrKeysData[4508], PatchrKeysData[30], PatchrKeysData[407], PatchrKeysData[4468], PatchrKeysData[3663], PatchrKeysData[2136], PatchrKeysData[7329], PatchrKeysData[3204], PatchrKeysData[2024], PatchrKeysData[575], PatchrKeysData[4827], PatchrKeysData[2551], PatchrKeysData[4317], PatchrKeysData[8127], PatchrKeysData[9165], PatchrKeysData[7983], PatchrKeysData[6279], PatchrKeysData[3031], PatchrKeysData[7574], PatchrKeysData[3950], PatchrKeysData[9054], PatchrKeysData[8363], PatchrKeysData[2367], PatchrKeysData[3831], PatchrKeysData[2159], PatchrKeysData[3231], PatchrKeysData[8863], PatchrKeysData[7904], PatchrKeysData[1664], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[4218], PatchrKeysData[6051], PatchrKeysData[7409], PatchrKeysData[4891], PatchrKeysData[2608], PatchrKeysData[5020], PatchrKeysData[3066], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[5224], PatchrKeysData[8462], PatchrKeysData[1932], PatchrKeysData[2314], PatchrKeysData[6645], PatchrKeysData[1121], PatchrKeysData[2755], PatchrKeysData[406], PatchrKeysData[3109], PatchrKeysData[3710], PatchrKeysData[233], PatchrKeysData[4180], PatchrKeysData[1879], PatchrKeysData[1885], PatchrKeysData[3769], PatchrKeysData[2871], PatchrKeysData[3284], PatchrKeysData[2747], PatchrKeysData[4954], PatchrKeysData[8335], PatchrKeysData[8495], PatchrKeysData[4705], PatchrKeysData[368], PatchrKeysData[885], PatchrKeysData[8832], PatchrKeysData[5727], PatchrKeysData[1479], PatchrKeysData[3459], PatchrKeysData[9027], PatchrKeysData[7903], PatchrKeysData[5479], PatchrKeysData[1983], PatchrKeysData[1581], PatchrKeysData[305], PatchrKeysData[8204], PatchrKeysData[6033], PatchrKeysData[4258], PatchrKeysData[5049], PatchrKeysData[3235], PatchrKeysData[1060], PatchrKeysData[2250], PatchrKeysData[4015], PatchrKeysData[7235], PatchrKeysData[1444], PatchrKeysData[3603], PatchrKeysData[2810], PatchrKeysData[121], PatchrKeysData[1370], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9218] = "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_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_JdCuxah7tVHme8ShFiHu3mQFLMotdPWm3VMIN5K/jPB+qQ96EL+TSYRlFSGB8CWnM3qe5Lj0iEyAA227s2HoXyAIQryB7OkGI1PH7Lm4rE\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
