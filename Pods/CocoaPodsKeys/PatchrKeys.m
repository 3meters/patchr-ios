//
// Generated by CocoaPods-Keys
// on 15/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2151], PatchrKeysData[1783], PatchrKeysData[3445], PatchrKeysData[2895], PatchrKeysData[3553], PatchrKeysData[2610], PatchrKeysData[2091], PatchrKeysData[6361], PatchrKeysData[701], PatchrKeysData[4822], PatchrKeysData[6412], PatchrKeysData[4182], PatchrKeysData[5398], PatchrKeysData[3893], PatchrKeysData[4061], PatchrKeysData[4300], PatchrKeysData[4545], PatchrKeysData[5727], PatchrKeysData[3268], PatchrKeysData[1707], PatchrKeysData[4011], PatchrKeysData[2401], PatchrKeysData[5462], PatchrKeysData[4047], PatchrKeysData[3921], PatchrKeysData[360], PatchrKeysData[1495], PatchrKeysData[3239], PatchrKeysData[4487], PatchrKeysData[4929], PatchrKeysData[5481], PatchrKeysData[129], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[13], PatchrKeysData[5324], PatchrKeysData[6301], PatchrKeysData[3442], PatchrKeysData[4160], PatchrKeysData[441], PatchrKeysData[3367], PatchrKeysData[6117], PatchrKeysData[3263], PatchrKeysData[5918], PatchrKeysData[4665], PatchrKeysData[3832], PatchrKeysData[5932], PatchrKeysData[3837], PatchrKeysData[846], PatchrKeysData[4842], PatchrKeysData[440], PatchrKeysData[1713], PatchrKeysData[5963], PatchrKeysData[3307], PatchrKeysData[5538], PatchrKeysData[4716], PatchrKeysData[5446], PatchrKeysData[6341], PatchrKeysData[3381], PatchrKeysData[1462], PatchrKeysData[2114], PatchrKeysData[784], PatchrKeysData[4991], PatchrKeysData[6262], PatchrKeysData[5895], PatchrKeysData[5856], PatchrKeysData[5088], PatchrKeysData[5408], PatchrKeysData[4835], PatchrKeysData[5456], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3985], PatchrKeysData[3106], PatchrKeysData[205], PatchrKeysData[756], PatchrKeysData[4430], PatchrKeysData[866], PatchrKeysData[3429], PatchrKeysData[604], PatchrKeysData[1347], PatchrKeysData[2495], PatchrKeysData[4820], PatchrKeysData[415], PatchrKeysData[2203], PatchrKeysData[2430], PatchrKeysData[1837], PatchrKeysData[5536], PatchrKeysData[4172], PatchrKeysData[6354], PatchrKeysData[5153], PatchrKeysData[3144], PatchrKeysData[5461], PatchrKeysData[745], PatchrKeysData[1164], PatchrKeysData[5365], PatchrKeysData[5479], PatchrKeysData[1893], PatchrKeysData[5695], PatchrKeysData[5600], PatchrKeysData[3786], PatchrKeysData[6261], PatchrKeysData[2420], PatchrKeysData[2481], PatchrKeysData[5815], PatchrKeysData[5516], PatchrKeysData[888], PatchrKeysData[3413], PatchrKeysData[4833], PatchrKeysData[4926], PatchrKeysData[1177], PatchrKeysData[5199], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[6121], PatchrKeysData[1705], PatchrKeysData[6062], PatchrKeysData[2292], PatchrKeysData[5557], PatchrKeysData[3536], PatchrKeysData[967], PatchrKeysData[36], PatchrKeysData[1246], PatchrKeysData[306], PatchrKeysData[2958], PatchrKeysData[6513], PatchrKeysData[4599], PatchrKeysData[1438], PatchrKeysData[6051], PatchrKeysData[2770], PatchrKeysData[3804], PatchrKeysData[3044], PatchrKeysData[117], PatchrKeysData[2539], PatchrKeysData[864], PatchrKeysData[6395], PatchrKeysData[2901], PatchrKeysData[6282], PatchrKeysData[982], PatchrKeysData[1968], PatchrKeysData[4242], PatchrKeysData[6247], PatchrKeysData[887], PatchrKeysData[4278], PatchrKeysData[2025], PatchrKeysData[593], PatchrKeysData[6124], PatchrKeysData[2458], PatchrKeysData[5361], PatchrKeysData[2779], PatchrKeysData[5031], PatchrKeysData[547], PatchrKeysData[1596], PatchrKeysData[4518], PatchrKeysData[4276], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4956], PatchrKeysData[6351], PatchrKeysData[278], PatchrKeysData[2813], PatchrKeysData[196], PatchrKeysData[4416], PatchrKeysData[50], PatchrKeysData[297], PatchrKeysData[4953], PatchrKeysData[4307], PatchrKeysData[5245], PatchrKeysData[5468], PatchrKeysData[5925], PatchrKeysData[1922], PatchrKeysData[1238], PatchrKeysData[5207], PatchrKeysData[6070], PatchrKeysData[5665], PatchrKeysData[3530], PatchrKeysData[503], PatchrKeysData[3803], PatchrKeysData[2032], PatchrKeysData[2607], PatchrKeysData[3570], PatchrKeysData[4837], PatchrKeysData[2170], PatchrKeysData[1806], PatchrKeysData[1790], PatchrKeysData[6264], PatchrKeysData[1342], PatchrKeysData[2630], PatchrKeysData[2490], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6518] = "uDZvmYm6bPZZkec+iNqLXoa36bc4bZoZIftjeLN6wKZAZDA2AF4c8PWohcIzqNI4paon0FyBuo8QC//jjaTqpYamq1sEIeRINbdtdZ8UnLWd9/py1tiv26Um/jj6rEB2M1ImTI/GcCMT+IVixAq5+Fy9O8XAEj/8TCdY7DIfDVQH5qQWc9Q4o5HzQaSS5MV1lRxQ0DrQ6JJvxNrl3CVhkZeIR1YWrH5iUcXVfyQoizq787CNtdIT8uKbccfasgMuyTIEoE5xtoz1UkBmJDN+GeaneNScKg1XLWTDZ0jWp8tSKLpglnaFtybrW3ZGxkZFuXrX9y32iWcgnUP31DAueKVoWLganK1zxDjOqCdU3ZZ0TnxM1ZS2KhFFwpQTxKsxdXq5xQwRwnvp6Q9daxJOC3Mww43TtMxPYHFBPac1amXQpH/c368QMzer64xokLh02UfEFS/28PPjDFeHa/UN4O791bqcg8WiwuSv5IVToSv09G3Xne/utmeb5Jk6QR6giZzh4gRaEPmUOF27kAr3Ot6MTywsQMH53nynmPDp+MjMTk53lDcZVONF2a0Icky8Y8JcKtST/288VboOPk2kIaGHY7j8zQseaPM2Zhu4+nKPOlbPsxbDa+EzzYgCLUf20Ui1wIjgvCNofdPUBvcPCshKeVw1OvqTmyrGWtiKHcPjoBSsY96vcuWMSQWA/5DynIlieafFNCo50+x0iqgZih+apd45rwK73vxwkA5l+tLs4QQUHh0O8rufE0f0cmwZWQflfrGyuhBO4+P9ehJqExfJKpt1LU1BpOrTIJW+v4jkpoAD+x9l8dDnD50fda2oYeLjkff/zDjNR543La7NuWzliR++zgDciHUZBkMlRQGCvoLMZ8lcjyAVAkavwG1puHNATNypEH4bED84hZwYGL598vSw24gwJ4YRZBvZgY+HzCDGiuQUmTGr37Y2y4HF7MkBWO5vgstYnyXsT3p24eEk2bqpj4Je6fthUFk6FdgpgVoXo8J1bAcp4Ggf1Jr03X1JEwtrZh6i/rVjd4AdriXwA8CBCn5W+mOAuG9ez1MRbDVGEcdCkzyd6a6pYIHss/HL26xMk1yUoO8fUIh4t9i+qd5ZyFipauvGvBDP8cSCNzFA1QPBO16XrbV+cExPaPjMm0iRbPJhE2VZNSEk9gTBzPJfBRkwUgN8lWBXrxiG/lrbWeX7IPgbC5CLXnF6yWd36PCrJW+tW//YPZvVpkeNf2+KTI_VeRq4eWdyqYPQSXBN9nDg+fQTIUbuIO/02+x5jKfdQw1Ti0DgvFTck3pYx4JGsnJBSx2YK2IsoPnq0YsEXLj0RyOLX66qWZailcj4swBHHDwIieFg63196MhGGYls7Paa36VgzYMAXSV8HftpwILIa6NBFwhCY7xfA++MEUNNfd4Dk14GX+aJaFwXYPkRKUfhjhVeG08ReQ96+r9irl2mz6cLnw7pANWsG3Q1Wkr9aC5RbnU+A4rtltcfUqisIrMOuHt4d+FJ5vWlUeAfE0Jrl0bDdmQnDjGuh+jwPcwk260m5Ses0NZbN7iF27XSGpQgdXZoCiM6yXecRNrUqy/aJUqsKrIpSfe/aKIcXKSPOcygz8kVl7wFXR4ohBy055X/By2z+wNr5f/BWNgk880mKg48XQgZ0+vx6XMVaGrMUJBq0R6eg7Jc+teAeyqFvlv+mAnvu1N2DeK9l2VFe61sEyTdMiTQeuDs9IN2mTEiEmax9YZAlfa0oqfv7Lb99M4jpzbm+vNKOKOVd7FuZVulzxy1I9ox/v2di02QbfB5NekV0K4wSKZ5Z/Vjb6m4GLXMCV3IA4I3LF1Qrejd8RCRjDOoR1MO8oYVZKfaWhf+j8tPvr3CdtpTYJFmz1gN3S1e8+aT1vb61Qi29R209+SdM+6OF7f2RK/WYi1NX3RbBcp69TlCez1vTOlAllZPgu6rw6b48EZ+H/DbwM+r2oCgYFBPwWTHEO4wYrJtar+h9GU2wYIxlFyl4XsXaxzcJfehfdbC/++zQlWhc4s51sifDTyHw0VBbf2wSXzwgTIi0FzYD1wZjhlbu4gBeS1FzWBpVM4aU8g7LV28L/fd6ri1GG7RCG6iOJnvQW9xAtdObe+PIp8cCymEeyJ5WPI98h3oDjCJ2cVdxLk6YhbYyPZQv7lg/Q5UNJCdlgI5in74vNrw6M0Y3I+ab4Vvf0OcjDc3BOc5J/0MaWvZCvf2HhdK4vNrzk0ND5Zr27h/Ok4fmSOeX8ovh/SpYizEsJV2GX4ASrm0OuGqKkaL2a7FkAq8_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
