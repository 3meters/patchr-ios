//
// Generated by CocoaPods-Keys
// on 27/02/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1496], PatchrKeysData[7344], PatchrKeysData[2648], PatchrKeysData[4915], PatchrKeysData[6983], PatchrKeysData[181], PatchrKeysData[7853], PatchrKeysData[6711], PatchrKeysData[1524], PatchrKeysData[6110], PatchrKeysData[856], PatchrKeysData[4735], PatchrKeysData[4089], PatchrKeysData[4838], PatchrKeysData[7504], PatchrKeysData[6008], PatchrKeysData[2209], PatchrKeysData[6033], PatchrKeysData[5362], PatchrKeysData[7823], PatchrKeysData[8377], PatchrKeysData[2675], PatchrKeysData[4617], PatchrKeysData[6816], PatchrKeysData[8032], PatchrKeysData[260], PatchrKeysData[8393], PatchrKeysData[5485], PatchrKeysData[4947], PatchrKeysData[4439], PatchrKeysData[4490], PatchrKeysData[3182], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3398], PatchrKeysData[6728], PatchrKeysData[3858], PatchrKeysData[4884], PatchrKeysData[2592], PatchrKeysData[7206], PatchrKeysData[6791], PatchrKeysData[7707], PatchrKeysData[4934], PatchrKeysData[7797], PatchrKeysData[3892], PatchrKeysData[3514], PatchrKeysData[7971], PatchrKeysData[7072], PatchrKeysData[7489], PatchrKeysData[7857], PatchrKeysData[3105], PatchrKeysData[2270], PatchrKeysData[8064], PatchrKeysData[635], PatchrKeysData[7050], PatchrKeysData[7646], PatchrKeysData[3726], PatchrKeysData[3823], PatchrKeysData[8019], PatchrKeysData[4580], PatchrKeysData[8367], PatchrKeysData[2453], PatchrKeysData[8354], PatchrKeysData[8282], PatchrKeysData[5258], PatchrKeysData[7221], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6206], PatchrKeysData[6860], PatchrKeysData[1576], PatchrKeysData[6944], PatchrKeysData[325], PatchrKeysData[1506], PatchrKeysData[7817], PatchrKeysData[5023], PatchrKeysData[7932], PatchrKeysData[1628], PatchrKeysData[5811], PatchrKeysData[7868], PatchrKeysData[5930], PatchrKeysData[6434], PatchrKeysData[7166], PatchrKeysData[4359], PatchrKeysData[3144], PatchrKeysData[2211], PatchrKeysData[4941], PatchrKeysData[5039], PatchrKeysData[1166], PatchrKeysData[2683], PatchrKeysData[1292], PatchrKeysData[693], PatchrKeysData[366], PatchrKeysData[5963], PatchrKeysData[93], PatchrKeysData[5095], PatchrKeysData[3376], PatchrKeysData[2216], PatchrKeysData[1473], PatchrKeysData[3045], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1720], PatchrKeysData[6031], PatchrKeysData[2522], PatchrKeysData[2415], PatchrKeysData[4366], PatchrKeysData[6624], PatchrKeysData[5098], PatchrKeysData[706], PatchrKeysData[7976], PatchrKeysData[2954], PatchrKeysData[8166], PatchrKeysData[5154], PatchrKeysData[2799], PatchrKeysData[2494], PatchrKeysData[5589], PatchrKeysData[5660], PatchrKeysData[5992], PatchrKeysData[7441], PatchrKeysData[6761], PatchrKeysData[8341], PatchrKeysData[5349], PatchrKeysData[3616], PatchrKeysData[3197], PatchrKeysData[7737], PatchrKeysData[7511], PatchrKeysData[2410], PatchrKeysData[7786], PatchrKeysData[2581], PatchrKeysData[8165], PatchrKeysData[1338], PatchrKeysData[1685], PatchrKeysData[3526], PatchrKeysData[6595], PatchrKeysData[6152], PatchrKeysData[3747], PatchrKeysData[762], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[2680], PatchrKeysData[6478], PatchrKeysData[2493], PatchrKeysData[7723], PatchrKeysData[3812], PatchrKeysData[6120], PatchrKeysData[1111], PatchrKeysData[7078], PatchrKeysData[5125], PatchrKeysData[6597], PatchrKeysData[4895], PatchrKeysData[7419], PatchrKeysData[8128], PatchrKeysData[4045], PatchrKeysData[1757], PatchrKeysData[2147], PatchrKeysData[2468], PatchrKeysData[2491], PatchrKeysData[5371], PatchrKeysData[4078], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[5031], PatchrKeysData[2097], PatchrKeysData[1034], PatchrKeysData[484], PatchrKeysData[275], PatchrKeysData[4219], PatchrKeysData[199], PatchrKeysData[3314], PatchrKeysData[6395], PatchrKeysData[7820], PatchrKeysData[7942], PatchrKeysData[5866], PatchrKeysData[4327], PatchrKeysData[926], PatchrKeysData[5602], PatchrKeysData[7349], PatchrKeysData[6208], PatchrKeysData[459], PatchrKeysData[337], PatchrKeysData[6525], PatchrKeysData[79], PatchrKeysData[6588], PatchrKeysData[421], PatchrKeysData[1836], PatchrKeysData[3253], PatchrKeysData[3495], PatchrKeysData[1783], PatchrKeysData[888], PatchrKeysData[7876], PatchrKeysData[5733], PatchrKeysData[1828], PatchrKeysData[4991], PatchrKeysData[4353], PatchrKeysData[2892], PatchrKeysData[7485], PatchrKeysData[7862], PatchrKeysData[389], PatchrKeysData[7276], PatchrKeysData[7705], PatchrKeysData[7977], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[6874], PatchrKeysData[5757], PatchrKeysData[3864], PatchrKeysData[4621], PatchrKeysData[2102], PatchrKeysData[7410], PatchrKeysData[4770], PatchrKeysData[3322], PatchrKeysData[7373], PatchrKeysData[5573], PatchrKeysData[1688], PatchrKeysData[1192], PatchrKeysData[2009], PatchrKeysData[1841], PatchrKeysData[881], PatchrKeysData[4354], PatchrKeysData[6096], PatchrKeysData[5908], PatchrKeysData[6492], PatchrKeysData[3299], PatchrKeysData[8330], PatchrKeysData[2676], PatchrKeysData[2241], PatchrKeysData[7760], PatchrKeysData[4779], PatchrKeysData[295], PatchrKeysData[8243], PatchrKeysData[8056], PatchrKeysData[791], PatchrKeysData[5529], PatchrKeysData[1043], PatchrKeysData[6797], PatchrKeysData[7246], PatchrKeysData[7329], PatchrKeysData[6339], PatchrKeysData[3579], PatchrKeysData[4420], PatchrKeysData[5792], PatchrKeysData[2228], PatchrKeysData[629], PatchrKeysData[3418], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[3893], PatchrKeysData[1592], PatchrKeysData[4203], PatchrKeysData[3148], PatchrKeysData[308], PatchrKeysData[6523], PatchrKeysData[2962], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[606], PatchrKeysData[4461], PatchrKeysData[8308], PatchrKeysData[4930], PatchrKeysData[5675], PatchrKeysData[6076], PatchrKeysData[3233], PatchrKeysData[4970], PatchrKeysData[3125], PatchrKeysData[4208], PatchrKeysData[6190], PatchrKeysData[2240], PatchrKeysData[4129], PatchrKeysData[673], PatchrKeysData[5480], PatchrKeysData[2887], PatchrKeysData[8096], PatchrKeysData[2474], PatchrKeysData[5569], PatchrKeysData[4929], PatchrKeysData[4860], PatchrKeysData[4829], PatchrKeysData[1998], PatchrKeysData[6770], PatchrKeysData[3914], PatchrKeysData[4182], PatchrKeysData[3894], PatchrKeysData[3519], PatchrKeysData[3477], PatchrKeysData[2159], PatchrKeysData[3286], PatchrKeysData[2313], PatchrKeysData[4052], PatchrKeysData[7026], PatchrKeysData[7049], PatchrKeysData[1331], PatchrKeysData[5758], PatchrKeysData[2261], PatchrKeysData[7263], PatchrKeysData[4851], PatchrKeysData[7751], PatchrKeysData[2833], PatchrKeysData[4567], PatchrKeysData[5507], PatchrKeysData[8216], PatchrKeysData[1740], PatchrKeysData[3999], PatchrKeysData[1876], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[8450] = "VQHTjt/lpyBxlAVthuI1DPr8jW9SlDUpfl47ZJ2worIkLKyuwYK0n+j750sT5lEzaY4X1cPS8lY+xfKindE95YFAH5tl8fMRL2tXHJC/TeLEgAi9lQy4jfHLus173IY2mPSSf6tBds+uwFPJC+lQCjfQLrmf1x6F+41cmAN4Gx+hu0phCLQFsbfAh0cAMgt3K1+FXGIYq2ZQbSgA2MwEOVhmJ2qMhodzCCXFGz+T6PkaXHyhwfZvy6hCJL+dmtRVnnal3wrBjtNnHrmvoxhS3R7FFuHc5TmJh9BWHTD2ef9MHhkbaFrFsfWJjND2zwz9BiK6S64UjGWcNgJS50BOn4i8Mni0AH8s+BLPRMyhyqVtLl1sQMHD+5p1rcq5kpnZEEJZ/axT7q//cdDdViY/3ZeiSjppAGdxV1La9EcY+r1dglHj1RuHCcWh4yk5j6zpFsApWWzpVJ9eAAJw3POO36UXQylphrw4Lr/k8pkr1Q4BOZEbJcBTQNG5/85CDZU/vUNgzYHM2d1qQ5OwJ0UEwHXTyEN2Y10wFryctHXPhcT5Wcn5cqFJ5iOekmTb+73qekvfmCu3cPNcCkp056/YDuTd5E91mA8MI+qWYvocNWGEEJm8YbtuUcBCHo91F5VGej4aUzyNyUud+r38xne0Z9NRl4Egcwmgh7k65BubysjFIRTzpoDCe6q1gAoUlfuj9A4OSPghuWueBiW+lFSMDfTmisnSZvkDjm1aN6b3im2Xd+XywvYtKvSvIybUOJlE99gthwW7g8VyBtlZZFUNMfhVSw6VnFbpErpYa6W/uORC7QZlBqP5KbmHuV1hJaPtAaPR9i0o+d4Iz1QXFzqTgo/rcRbWpOcik0lK1TVPadXDdjgtsh+vk0jegCyathvGbrIpnDVz718AivnK94qtO2l1lmjCRCkHagoDWw9s1LztHj7+muhubJQkGYtBlgj9v01PxLJxIpzcH9RNrmdT8JqTs6MNddN3FQeu65q/kA9lEPDo8QoM0y+/sjcnQjrPOMW85IpXRSNDny8Sofpl4PFrciIO7On0w+u73YQroAf8YYqYGomkdfJcJzWd+rxeeTmjvtI9LHWTXQnjEFqkZ2+UE8CyGgSQntbc1HfTHkOlahKFamEvPy/8+eNMjFFSr8wJL5Z250R5yyfT3yaLDjGM3NiooYHxd5UYIbDmbjWUUGJW8SoERRPOFZJFgLYO3ajMLYApMwcwUjbHzqQEz104KB9UbwUD6CoGrz9caQgE/eq53lDrksRfgAhFO6NZfLeKqXApI6cI9g+PhpXgR6tcZQQhgIice84d0p0NgaQH4l9bzK0bq5cOGiaapB+zGkixVnniBmvPbJ9o4Ik1UStvZzrcto3isV02qgk95Hc/6A6DexmrmBuuKsyYPpKy8CD0lQ/RBM2ELKSRcNX6Xe+1gSlBqILuVvOVGCNnkBY7X5G5GOgpmuwzZMoczFxsNd/gXQQvGWnneaRUklGyaI73dq6djRSgcz3VaA8yTv+bMFTHYqlz5h6xhB30JpEjw1wMZ2S6jE2nfjHJ9GsyNOj1h+EFSUzHEEXNC+VF4kgYS1puxAhGfvUhawG8v58y7Cbxz5D2vUklKs/35k2PKBwFZz9G8cTKEfwDbk3pR2xylSfv1r6T9s5lNj+/w6wXlx4LTiFIh1nxv9nN9/fLmbt9aadyxBbnqP8PDGK3nAyrq+qi+dNXJB8Ue1ut7+gB+ns5YYX9XIp8eCppu3Jpt/eQvjy0aObT9BFf2StZGwbS5MhweKgY17zzCV/yWGBUsOCk3EM8MXFDkg0m/XQuvdrKe1O2DlBgo+OxD4JcvfbDxYMi8fiJfl6PMVAge7oHYfJsiP4DpJeXRLVaBLmN1QhjK8VFOr5E9V5jLkDQRwZCAQAojI1GY4OaOkFk2mDsdtNXsu8mdmO6SaLLCR0zXkmYr0DI1Tgstppti1GwC+vqiR2ZLXZ8mIhXQtelM44me0VJPgqlQ+gNWNcq3MfHwRiygKhFu5fwS0oYW1GCJOaSY9HvmEJkyfs8o0ZNdXF0hKr2iWAOuroOM7cZGcianLWKDxb03dFkYdCL8snLCKxRSvnvxei33qlVI5mGpte6b8pqooFcs8mQIO70BJCKpbAQZncbZ2my2zoU2y5W7+hWozP78fBI+a3ystca+IxFzZupF3W7Xdx9dn+cDc50in1SYGAHnw5Zx777OHAX90E11daK+E7MSzRqrJ3SrSGU99pyIk3FLJz67AaaLgWY49qVwJEDsz8GYp/+UjFJo2D3R4qNeAxyx9CdYjaZUma/N2KBVbOjG5FDyubl7+gFJ78cSwW9plru3OmCt8E2uJs7Ntch/t1Oc5C4qlHlni2G8wKn+Jau1nZDLoO1sTOraWePsqjnxmu+J3fB3TYKzSciZ67cV2ypAKV3q3QnMjxpT8NHtlNK1q0+rRPEIQ/9B8JcZ2Mt942mRjnAGjbZYo4XQaGdU9ntRmfpWQs3QI-zDGtS3hsHcPgx0R4+0pzW5skhS0cMj+q4LmuN0rbSzmwH7Lo7OZvEBeZUPozJslBLFsEekHsZQeyv8P3vBJ4qLey4Sa9DQyOG2P94fDfrSMoER2qqm4LGgbV1uVQwEz/0D1TzNnzN/S4Fvn4qlYoMUMNf3/7cubxMFaRgVuUxmjYeO4rSwGD0QKixAqZckSRdDufyXGhdndPUZCCjgT2K+um9VpUV5vxSqMYPkIjQQ1MvEKAHOUbUUfNDHTIA6ZTXczaSPP7XsTCxt97Et/O+7eLPie52tSRqs00AVysydG1qtyVdUSNbBQfXGw06PYunMnHzfU96+Cn7Ow6WaeYRNavIJU2UXZOHAUkuWHJlV2hXhp8Im46qnn15uZLnYLoTCellPYc|ThjLgqGVoh5B7+D/dhuuCrlWwbuzzrA9ms2K+7vx+dfw78Wdvm06y5Ygj7xPZ4hI/f9wNaTdZLa4hUhrNMrLlBgcXyfN+jJNCW7BMLgEr8z0l6DLIt73w4rMIFlc29X42SDGop7POZkfA1ezrgDS668NoRHcadQq8WOWKy0c4ETTj0RJiH0ie6pKtfTMmExWgYDNjRl31eR5zWnSM1NXBGGvR8tvYwxr4eofRsytMmAq27ob4nFut+o2PZLlgXPFaPYOipPZ7bj5EsjNg0I1mZ3AlwBAemfj5Lot111uf1ok1zdoTZ46K4lwT5SAex1W054RjsgT0fDzD1VCjFhF+Jp7j83o24/UHEG7eYE39yfcHhqq+6u94+5wj05PkqPj69bD4OAsnC56i94eQZ0XMZNamdXp3M5NUVEFnu8dkNzBmVyXN6ekGxgEso6j49mp2ItpL3m95sFdgofNbUis76Z/sYBQEzesWZfME+hocg63hW3wLlNHTnRv9/0Tqt5Db8siJ9xeRxMHsiCyQg3HW3ofb1y+c4eWyu2bv+tes1OUfN6marMjjRMylMV2n1TY1oWgnOH6eawB+6EJ41hDCzQ03u3/TruvBa6lbJM2YTy4MV3A/b95m6tbtcALA842iWl5HiVK67VT8QZMLQRfAdJyDquQ4Fr2Dmps5mn2LVKhp+j3ioXasKJkXU0agZIDP+aSbvaV4o5WgWM5qwz6TjiZbgaJ4dzVywCsRHXqUD9/RLLysWagWPCFG0+Jv789luMli8AIehn7qrAPTdxF1D0ydRaoxyEMsMgTejozdIb0D35AgVoFiOPXMc2Im2m2BtOEqQ7nki9JF6hqNuiWiaLzzoCawrQeUAuRevrS/lKNJYtL0zwLCcHw15S2A8MyvHmksSBh3havvhFruqKCy9MVTRxOIFCwifj6emE1R79uberok0nslqT4+IEwvL95mhte6JynswamDy+Yy5q1z0SLPQZttyhbK492D/X8BENeclcU2vLnu0hoQqbjf+WwpzbqNSbD0bqjax+Th7qTk29gh30w59jngWIHb+qWt7BOqRC9ShHTmilNIsVFPjPmOEN4xKFCyzAkMqEob02aAlu7KD/XJW9baqO2n0rsjg5zN5Qcy4kF2Hct/exZK/yNbsczXAlj+VwPdPtUb6kg1JTWUu2kLk45Ta0+CKAJysYZivfuC4cd0Ex/98luOwX+r+b9gZ4HY7AWfD3IR2E/Jn/fa6DSY3GpBP2GmJp/9HiQmP6yX1lLM9iovCyti0KLFKTlYVF0GY1P3rbozAsGt0176jPV8HWfvX6rVgu52YT8/Qjun/6UbFIJ1AiiQbshr8DN71lF5tzgq8SeVfHHv24xH8dliGuGa4+TuJ0cJ/0BMGBDoFZmwCKrGg8KkX0ZhYt3OzX9dpErh4MY0cyVXsDjmeFWn6rc1htYWF4TlIbIaxCwxzYHJYrgtuLCf961l5OE0F5OpTr2/3LX9+v34YIASF2mipnhKBFaOJaCtmW4sZqICEV60H712j/IK7BAhMP8KvFUUmHq5eaclYyFjMRnhj7YZJTnBGyPX9m5O5FSZiqRz9qq0LDPUXdqHPqOR50BsU98FzQTZnP1ZNg0w1Kr028dPeW82bWhyy8rna9vfgS7M9wKK55Yt9UbYipzLtDBehJANFKx99ca8gXymhb401CGdVbPljXDXs0PTLGpdQFsHcWDz77/mK20CqAZd6Xyh_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_JSmrC6MwbtUM0zdjP9yP/s4SkdRJ1d1nCkYTiLymHDSPcCNjRTFNdy7LW+JSI4uh9RW6RcSP/qKQsLkGT1dKtQCTKOLWIrdLpCKjAJ1Ltx5yVF4ALrE8lA8DL+/dg66d1Z9UWiR6hcjhRqTq3ORVYf7bUNtstdXZVqjN7o//IQ9C113LIwU1hEx1mbTLctFHACaE6xt/y8G5GLyEsuGKAx5FkgqAZeMk6BfiJwROMeusaWdS+0PQt8UkrLXQVRKumrp+EL607ULPYCdr4GnMvs+pgqCqv888WZ2YNVZxVKyROuflSnbPUhAiac16Tnz4KSrCfD8eElnPU5btg8CLj/OSI0pXzAGHx/ZDFNMIlWt-dmU6e8EX55jmJbUzVuIq3S3miMHQQuKahQcxYKWjYdcG/j5d9gMaw7eqY2oesg4H/TpvpcdJMXEXEtrfy367B9bAQFjwbi5ZkBV+AdOCpCr/So7JXw48v/H0YvBW82+jpVcOpq7CI4UAS0Rnx+RIbK1ynUFS/elXJ5NcxfRP4s5QewpiamRhRFVFa2uekdx1ha4hdsVtRxmIy9RaoRPdo9bVDqQZz2RBmmq4sEhYf4BRpp-SGUMORhzDGRuzWpUMxOqmlmmWlALrQZILAZYa1085Oa7aiqXEkhsDwW36jeMXX57jo0gm29X7mTW74QznXCXzV+2cyQ/nr/VNiNmlBPyrz53giF3WTCZm7v8gZOUbMKVROhBAEZ3VyPFbK43htjS4c+2UyEv9goDgFnazbSRFTMMII0vqSaOD2Oc0yXFb1uIzXtG8tFgaeFKnoHsE9Nbk4yaYARGeB6f5De7w6YGH/p3OIX3/8g+qyDi+QVC1KZkZcUZFCRW2WlkE3z3Zon652ykgbJDVz5cBFn23hFidlw6w1JMnaPi+ugOa5LSkYLvFVdjYvy8Rgj4vb3DNjm8Gly1NpCj83C1yiDdLaZ3L0d4aqVgVJ0OtuYL+43GnSCJe2/T6e7utUt+UBWt41N3Jte0coFY02y1f/BFIeMzfwK/p711UyxAxKI4liiOdKQcoPcIF37EgwGYs51JMfDtEeL\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
