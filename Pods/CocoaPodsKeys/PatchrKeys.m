//
// Generated by CocoaPods-Keys
// on 20/01/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[6976], PatchrKeysData[4052], PatchrKeysData[5742], PatchrKeysData[7787], PatchrKeysData[5896], PatchrKeysData[12902], PatchrKeysData[9525], PatchrKeysData[9410], PatchrKeysData[1042], PatchrKeysData[13359], PatchrKeysData[9319], PatchrKeysData[12326], PatchrKeysData[10088], PatchrKeysData[6488], PatchrKeysData[2064], PatchrKeysData[4753], PatchrKeysData[10848], PatchrKeysData[14762], PatchrKeysData[4758], PatchrKeysData[6735], PatchrKeysData[11547], PatchrKeysData[3643], PatchrKeysData[10053], PatchrKeysData[8452], PatchrKeysData[3585], PatchrKeysData[8753], PatchrKeysData[7805], PatchrKeysData[7807], PatchrKeysData[4834], PatchrKeysData[3118], PatchrKeysData[307], PatchrKeysData[13557], PatchrKeysData[801], PatchrKeysData[14667], PatchrKeysData[9038], PatchrKeysData[11994], PatchrKeysData[764], PatchrKeysData[9418], PatchrKeysData[6435], PatchrKeysData[12379], PatchrKeysData[10508], PatchrKeysData[10766], PatchrKeysData[12333], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[8222], PatchrKeysData[1365], PatchrKeysData[10762], PatchrKeysData[13710], PatchrKeysData[9399], PatchrKeysData[12829], PatchrKeysData[12625], PatchrKeysData[7109], PatchrKeysData[412], PatchrKeysData[5990], PatchrKeysData[13923], PatchrKeysData[1763], PatchrKeysData[597], PatchrKeysData[495], PatchrKeysData[7423], PatchrKeysData[9495], PatchrKeysData[11093], PatchrKeysData[4179], PatchrKeysData[14326], PatchrKeysData[2287], PatchrKeysData[11771], PatchrKeysData[2882], PatchrKeysData[8612], PatchrKeysData[3039], PatchrKeysData[6773], PatchrKeysData[7073], PatchrKeysData[14891], PatchrKeysData[11483], PatchrKeysData[1388], PatchrKeysData[6487], PatchrKeysData[11782], PatchrKeysData[13173], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[13852], PatchrKeysData[8108], PatchrKeysData[10633], PatchrKeysData[10461], PatchrKeysData[11682], PatchrKeysData[11156], PatchrKeysData[12254], PatchrKeysData[14301], PatchrKeysData[11350], PatchrKeysData[9985], PatchrKeysData[1787], PatchrKeysData[10268], PatchrKeysData[7216], PatchrKeysData[11951], PatchrKeysData[915], PatchrKeysData[1347], PatchrKeysData[4687], PatchrKeysData[9629], PatchrKeysData[1000], PatchrKeysData[13083], PatchrKeysData[1892], PatchrKeysData[944], PatchrKeysData[13874], PatchrKeysData[3747], PatchrKeysData[3446], PatchrKeysData[6051], PatchrKeysData[2501], PatchrKeysData[1582], PatchrKeysData[13803], PatchrKeysData[6535], PatchrKeysData[11592], PatchrKeysData[9984], PatchrKeysData[12762], PatchrKeysData[9253], PatchrKeysData[12590], PatchrKeysData[6482], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[8188], PatchrKeysData[8273], PatchrKeysData[11791], PatchrKeysData[1762], PatchrKeysData[13212], PatchrKeysData[3197], PatchrKeysData[3914], PatchrKeysData[1252], PatchrKeysData[11071], PatchrKeysData[10466], PatchrKeysData[11959], PatchrKeysData[1628], PatchrKeysData[9084], PatchrKeysData[8402], PatchrKeysData[11708], PatchrKeysData[11199], PatchrKeysData[6425], PatchrKeysData[10504], PatchrKeysData[14177], PatchrKeysData[7979], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6634], PatchrKeysData[13963], PatchrKeysData[122], PatchrKeysData[9355], PatchrKeysData[9321], PatchrKeysData[1856], PatchrKeysData[12296], PatchrKeysData[7783], PatchrKeysData[1184], PatchrKeysData[10222], PatchrKeysData[805], PatchrKeysData[12265], PatchrKeysData[2604], PatchrKeysData[58], PatchrKeysData[11611], PatchrKeysData[2273], PatchrKeysData[12960], PatchrKeysData[5526], PatchrKeysData[8937], PatchrKeysData[11048], PatchrKeysData[13454], PatchrKeysData[11618], PatchrKeysData[3084], PatchrKeysData[12739], PatchrKeysData[11280], PatchrKeysData[950], PatchrKeysData[3870], PatchrKeysData[12642], PatchrKeysData[6995], PatchrKeysData[7915], PatchrKeysData[2447], PatchrKeysData[14642], PatchrKeysData[1075], PatchrKeysData[14417], PatchrKeysData[4220], PatchrKeysData[5197], PatchrKeysData[7864], PatchrKeysData[5717], PatchrKeysData[6491], PatchrKeysData[13019], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[4829], PatchrKeysData[10990], PatchrKeysData[13956], PatchrKeysData[7143], PatchrKeysData[3826], PatchrKeysData[12509], PatchrKeysData[10930], PatchrKeysData[1021], PatchrKeysData[5626], PatchrKeysData[1823], PatchrKeysData[11229], PatchrKeysData[7262], PatchrKeysData[5543], PatchrKeysData[7831], PatchrKeysData[1123], PatchrKeysData[2446], PatchrKeysData[8491], PatchrKeysData[5132], PatchrKeysData[4032], PatchrKeysData[13616], PatchrKeysData[1479], PatchrKeysData[3008], PatchrKeysData[9456], PatchrKeysData[6025], PatchrKeysData[6707], PatchrKeysData[133], PatchrKeysData[12915], PatchrKeysData[13684], PatchrKeysData[8299], PatchrKeysData[9391], PatchrKeysData[4779], PatchrKeysData[13427], PatchrKeysData[517], PatchrKeysData[5120], PatchrKeysData[11397], PatchrKeysData[9869], PatchrKeysData[34], PatchrKeysData[8005], PatchrKeysData[14256], PatchrKeysData[6315], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[12353], PatchrKeysData[11288], PatchrKeysData[5442], PatchrKeysData[10555], PatchrKeysData[761], PatchrKeysData[12637], PatchrKeysData[7422], PatchrKeysData[5927], PatchrKeysData[6291], PatchrKeysData[14366], PatchrKeysData[5832], PatchrKeysData[3729], PatchrKeysData[8109], PatchrKeysData[12479], PatchrKeysData[6019], PatchrKeysData[12486], PatchrKeysData[520], PatchrKeysData[1114], PatchrKeysData[832], PatchrKeysData[3603], PatchrKeysData[4850], PatchrKeysData[2035], PatchrKeysData[7009], PatchrKeysData[6550], PatchrKeysData[11386], PatchrKeysData[4516], PatchrKeysData[2152], PatchrKeysData[10387], PatchrKeysData[8500], PatchrKeysData[9387], PatchrKeysData[921], PatchrKeysData[6219], PatchrKeysData[940], PatchrKeysData[10650], PatchrKeysData[8170], PatchrKeysData[7208], PatchrKeysData[10747], PatchrKeysData[9204], PatchrKeysData[6939], PatchrKeysData[5523], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[13645], PatchrKeysData[9325], PatchrKeysData[6541], PatchrKeysData[8313], PatchrKeysData[10282], PatchrKeysData[3875], PatchrKeysData[8446], PatchrKeysData[5913], PatchrKeysData[6064], PatchrKeysData[12250], PatchrKeysData[895], PatchrKeysData[8077], PatchrKeysData[12785], PatchrKeysData[78], PatchrKeysData[10347], PatchrKeysData[9363], PatchrKeysData[5741], PatchrKeysData[13440], PatchrKeysData[14714], PatchrKeysData[9126], PatchrKeysData[11853], PatchrKeysData[3326], PatchrKeysData[13580], PatchrKeysData[11506], PatchrKeysData[13728], PatchrKeysData[13156], PatchrKeysData[2860], PatchrKeysData[3956], PatchrKeysData[13410], PatchrKeysData[6921], PatchrKeysData[7581], PatchrKeysData[9205], PatchrKeysData[3439], PatchrKeysData[11073], PatchrKeysData[10415], PatchrKeysData[12410], PatchrKeysData[1796], PatchrKeysData[7500], PatchrKeysData[4704], PatchrKeysData[3546], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[13857], PatchrKeysData[5802], PatchrKeysData[3393], PatchrKeysData[14201], PatchrKeysData[6439], PatchrKeysData[7516], PatchrKeysData[1313], PatchrKeysData[3441], PatchrKeysData[981], PatchrKeysData[11527], PatchrKeysData[12273], PatchrKeysData[8860], PatchrKeysData[14350], PatchrKeysData[12802], PatchrKeysData[6711], PatchrKeysData[364], PatchrKeysData[8940], PatchrKeysData[11981], PatchrKeysData[12768], PatchrKeysData[7436], PatchrKeysData[8361], PatchrKeysData[3004], PatchrKeysData[673], PatchrKeysData[5267], PatchrKeysData[12830], PatchrKeysData[5114], PatchrKeysData[796], PatchrKeysData[7194], PatchrKeysData[10578], PatchrKeysData[13865], PatchrKeysData[6948], PatchrKeysData[5508], PatchrKeysData[3311], PatchrKeysData[691], PatchrKeysData[852], PatchrKeysData[1523], PatchrKeysData[9433], PatchrKeysData[2671], PatchrKeysData[5045], PatchrKeysData[1304], PatchrKeysData[2927], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[7292], PatchrKeysData[3281], PatchrKeysData[2730], PatchrKeysData[4958], PatchrKeysData[8351], PatchrKeysData[6249], PatchrKeysData[2910], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[2176], PatchrKeysData[7988], PatchrKeysData[7117], PatchrKeysData[560], PatchrKeysData[8563], PatchrKeysData[11360], PatchrKeysData[14668], PatchrKeysData[9951], PatchrKeysData[2073], PatchrKeysData[3159], PatchrKeysData[14825], PatchrKeysData[4160], PatchrKeysData[8311], PatchrKeysData[12147], PatchrKeysData[10321], PatchrKeysData[4749], PatchrKeysData[9185], PatchrKeysData[1072], PatchrKeysData[3644], PatchrKeysData[5594], PatchrKeysData[7323], PatchrKeysData[10308], PatchrKeysData[14562], PatchrKeysData[6665], PatchrKeysData[13796], PatchrKeysData[12105], PatchrKeysData[13347], PatchrKeysData[8053], PatchrKeysData[2857], PatchrKeysData[13925], PatchrKeysData[12052], PatchrKeysData[11824], PatchrKeysData[12462], PatchrKeysData[8097], PatchrKeysData[8140], PatchrKeysData[5711], PatchrKeysData[13980], PatchrKeysData[2624], PatchrKeysData[13817], PatchrKeysData[3740], PatchrKeysData[8337], PatchrKeysData[13638], PatchrKeysData[849], PatchrKeysData[4550], PatchrKeysData[2051], PatchrKeysData[10402], PatchrKeysData[6217], PatchrKeysData[13518], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[14966] = "H/SFM4oAZ+jN4prolR4zCiSuPLTrvOFPJ2oogd0g7kxHlLn9/lJ2ZYB61ekaU4A37IlQYkNhUsI/XTc66HZA5i4Oax+ZwsBrYrPvqMusQyzI8WvQ/oXXT/oJWANYQi135BODVGMy2LsNGjny0WspkFBEKNOh5kClP+LFsExsQTEbX25vGRmJtKq2bS0HJcvwWXBDBsClvZ66CUfsJyUgD6VgWYfQA1jWkTlaARDSdyhk1/XXCJ/Bjuush9kzAMGD7dK+BRtpoS/Jq+POhmuh5K66+fqcI8XJSMK8a4vDcgjR2qrVhgDWcr4mmDb2YTuut7qEQRDFTvH96tX8XwqhMJy3KzEuw80DD7lmIXhbcjAfLdhHZpr5xBWB3NRxspXfTQrd+WIRi8X5+1YGQpSyF1MUksK64N22PydPnCZeJ7UKm8SR+9IuBRfaO+/TxhOx9AvqOQbMZEB3o38nmf6RrwWVLv4uLlQ8YbZLYlf1ASBDgEM9Eg1KNVnoUzaVxopgQARwdlMPc0vdpcvXJnksRf/Gr6A+Ulj5QUN70GZie5cupDp966vNM0IwOPmEIypwS2Dt5skGRoX+DxWDav6K940aLoMB/3TDsalh3V/BXjo+S675paaGtta1EZMn+lPNg1X0hF+0Ro/bqf9dK82Sc3wj9OnUTfoyA9d7HXQBXjsG9eo+qUWzULOY9iLZQ2E+qQg0CXW3ratMmiW/iI+CqiSl73m0D0RASIinYWav+b9Qlesp2R7MTcDcHlzhWwYVzjICVW1iWOkZNALvB9PcjVAqM/wLl4hmyQKCzyW98dVwipUgrmQA75H61m42+r9zYd4VciLgNhlmC0Ea3adlrphR7r+s2XxfMdL3l7b2hKhw0xiX55F4DrmyB0fG0OD083O6O4U59uD0H8qT2tV4LtnX7Hm2cLWCaD6AGC7FGkYHnZ+0b4MngCvzetW65bpWqqhmSk5+VJS7YQL9nUd7Z_rSx1R+2oV8RmFfOINq-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|\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
