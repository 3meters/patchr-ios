//
// Generated by CocoaPods-Keys
// on 10/09/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3665], PatchrKeysData[2283], PatchrKeysData[3916], PatchrKeysData[6199], PatchrKeysData[5946], PatchrKeysData[384], PatchrKeysData[7052], PatchrKeysData[4887], PatchrKeysData[5090], PatchrKeysData[4130], PatchrKeysData[6548], PatchrKeysData[1343], PatchrKeysData[7716], PatchrKeysData[4706], PatchrKeysData[3094], PatchrKeysData[6292], PatchrKeysData[2592], PatchrKeysData[866], PatchrKeysData[4954], PatchrKeysData[5176], PatchrKeysData[3250], PatchrKeysData[4642], PatchrKeysData[2655], PatchrKeysData[455], PatchrKeysData[6759], PatchrKeysData[799], PatchrKeysData[7284], PatchrKeysData[1028], PatchrKeysData[4122], PatchrKeysData[5644], PatchrKeysData[4526], PatchrKeysData[961], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6769], PatchrKeysData[5885], PatchrKeysData[1024], PatchrKeysData[4575], PatchrKeysData[3674], PatchrKeysData[7863], PatchrKeysData[5354], PatchrKeysData[5089], PatchrKeysData[5964], PatchrKeysData[6826], PatchrKeysData[1576], PatchrKeysData[5108], PatchrKeysData[6094], PatchrKeysData[5477], PatchrKeysData[4182], PatchrKeysData[8023], PatchrKeysData[1173], PatchrKeysData[4227], PatchrKeysData[6491], PatchrKeysData[329], PatchrKeysData[7116], PatchrKeysData[6248], PatchrKeysData[85], PatchrKeysData[3691], PatchrKeysData[2654], PatchrKeysData[1515], PatchrKeysData[2436], PatchrKeysData[2011], PatchrKeysData[756], PatchrKeysData[6339], PatchrKeysData[3692], PatchrKeysData[4804], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6923], PatchrKeysData[2858], PatchrKeysData[364], PatchrKeysData[2355], PatchrKeysData[7250], PatchrKeysData[4309], PatchrKeysData[5218], PatchrKeysData[2561], PatchrKeysData[7783], PatchrKeysData[1830], PatchrKeysData[1665], PatchrKeysData[5730], PatchrKeysData[3994], PatchrKeysData[1221], PatchrKeysData[4097], PatchrKeysData[1210], PatchrKeysData[3079], PatchrKeysData[152], PatchrKeysData[2829], PatchrKeysData[4224], PatchrKeysData[7958], PatchrKeysData[1832], PatchrKeysData[3809], PatchrKeysData[3992], PatchrKeysData[1005], PatchrKeysData[5285], PatchrKeysData[6513], PatchrKeysData[5181], PatchrKeysData[4688], PatchrKeysData[6408], PatchrKeysData[7041], PatchrKeysData[1227], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[7772], PatchrKeysData[6206], PatchrKeysData[795], PatchrKeysData[201], PatchrKeysData[4494], PatchrKeysData[6417], PatchrKeysData[7722], PatchrKeysData[3052], PatchrKeysData[4851], PatchrKeysData[669], PatchrKeysData[5006], PatchrKeysData[3120], PatchrKeysData[3037], PatchrKeysData[7105], PatchrKeysData[2280], PatchrKeysData[1630], PatchrKeysData[1611], PatchrKeysData[4322], PatchrKeysData[7713], PatchrKeysData[940], PatchrKeysData[5304], PatchrKeysData[7869], PatchrKeysData[2137], PatchrKeysData[7726], PatchrKeysData[5454], PatchrKeysData[1336], PatchrKeysData[5551], PatchrKeysData[5151], PatchrKeysData[1066], PatchrKeysData[3375], PatchrKeysData[2362], PatchrKeysData[7514], PatchrKeysData[6073], PatchrKeysData[808], PatchrKeysData[2886], PatchrKeysData[7525], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[5170], PatchrKeysData[3213], PatchrKeysData[2862], PatchrKeysData[1280], PatchrKeysData[2008], PatchrKeysData[4662], PatchrKeysData[2587], PatchrKeysData[1293], PatchrKeysData[7633], PatchrKeysData[6893], PatchrKeysData[2516], PatchrKeysData[7245], PatchrKeysData[7562], PatchrKeysData[1201], PatchrKeysData[1288], PatchrKeysData[3639], PatchrKeysData[2213], PatchrKeysData[4438], PatchrKeysData[3332], PatchrKeysData[1755], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[5394], PatchrKeysData[1578], PatchrKeysData[2472], PatchrKeysData[6554], PatchrKeysData[3374], PatchrKeysData[3137], PatchrKeysData[7021], PatchrKeysData[6883], PatchrKeysData[3455], PatchrKeysData[4814], PatchrKeysData[4766], PatchrKeysData[6945], PatchrKeysData[3067], PatchrKeysData[3956], PatchrKeysData[6212], PatchrKeysData[6516], PatchrKeysData[236], PatchrKeysData[2863], PatchrKeysData[4161], PatchrKeysData[4755], PatchrKeysData[7418], PatchrKeysData[2846], PatchrKeysData[4626], PatchrKeysData[716], PatchrKeysData[4519], PatchrKeysData[5202], PatchrKeysData[2984], PatchrKeysData[3758], PatchrKeysData[3477], PatchrKeysData[1739], PatchrKeysData[6698], PatchrKeysData[529], PatchrKeysData[2514], PatchrKeysData[3887], PatchrKeysData[5187], PatchrKeysData[3470], PatchrKeysData[7515], PatchrKeysData[3266], PatchrKeysData[6702], PatchrKeysData[7666], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5952], PatchrKeysData[1018], PatchrKeysData[4550], PatchrKeysData[6011], PatchrKeysData[774], PatchrKeysData[3156], PatchrKeysData[1640], PatchrKeysData[4323], PatchrKeysData[7256], PatchrKeysData[4459], PatchrKeysData[3634], PatchrKeysData[3909], PatchrKeysData[7778], PatchrKeysData[2444], PatchrKeysData[4596], PatchrKeysData[1613], PatchrKeysData[2469], PatchrKeysData[2056], PatchrKeysData[3197], PatchrKeysData[6622], PatchrKeysData[3323], PatchrKeysData[5593], PatchrKeysData[4683], PatchrKeysData[1689], PatchrKeysData[6762], PatchrKeysData[5636], PatchrKeysData[353], PatchrKeysData[4674], PatchrKeysData[288], PatchrKeysData[3028], PatchrKeysData[3819], PatchrKeysData[5808], PatchrKeysData[135], PatchrKeysData[4822], PatchrKeysData[6103], PatchrKeysData[1222], PatchrKeysData[8037], PatchrKeysData[5067], PatchrKeysData[1817], PatchrKeysData[6524], PatchrKeysData[3616], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[4501], PatchrKeysData[2377], PatchrKeysData[3550], PatchrKeysData[7008], PatchrKeysData[5859], PatchrKeysData[190], PatchrKeysData[6983], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[5172], PatchrKeysData[4830], PatchrKeysData[2125], PatchrKeysData[1864], PatchrKeysData[7112], PatchrKeysData[2366], PatchrKeysData[6921], PatchrKeysData[427], PatchrKeysData[5405], PatchrKeysData[4799], PatchrKeysData[2889], PatchrKeysData[7962], PatchrKeysData[7498], PatchrKeysData[7507], PatchrKeysData[7765], PatchrKeysData[5684], PatchrKeysData[3066], PatchrKeysData[4989], PatchrKeysData[3415], PatchrKeysData[993], PatchrKeysData[43], PatchrKeysData[7072], PatchrKeysData[1094], PatchrKeysData[3683], PatchrKeysData[3933], PatchrKeysData[421], PatchrKeysData[6699], PatchrKeysData[4831], PatchrKeysData[3402], PatchrKeysData[5325], PatchrKeysData[7226], PatchrKeysData[192], PatchrKeysData[8040], PatchrKeysData[7205], PatchrKeysData[2624], PatchrKeysData[247], PatchrKeysData[7981], PatchrKeysData[7433], PatchrKeysData[1392], PatchrKeysData[2486], PatchrKeysData[1464], PatchrKeysData[6273], PatchrKeysData[4506], PatchrKeysData[4882], PatchrKeysData[2656], PatchrKeysData[1179], PatchrKeysData[4597], PatchrKeysData[3412], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[8066] = "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_I+VRY8hApFs/XJe0BJESLzeR0GgBwdvxaV+KqVxdZARotmy13rnwugZn/G/kP27GcZUnMaHaeiPuCDxI/r4O9tHlVo5rJVYc/zlxlBWGgYbvLD66pSKe9WWEYiVTVpvGC6HmK9elWGvhUf1W+59H298HuvGwecmfol2uGq7nMsOPQltUg1uiuoOaPZX1dzU+aL2uOIwweWiDTu1+jdmPG8sqckZUR38HfS79Ilynvzrz4LYqS8XaZEOA82JYrneO50miJe2VsvSOvtTYABT/WJxo3rcmAW2joKNTHo/AH1clLfuNf11nf6FeJ2afslY6IKwZ1eWaItdMvX8vO550ZihmgFryqfMleikcOlx74ceGDtVVMEJk+OWupKtSBAhJFrizxcE84Cxv94cilL3yh4vUG/6zE7mLCk7slC5sIMX/n3jNQ/o/O6c0pKTb2gw57o3mg0WMdHdVPKmMdiAuVtYlL5KoZRe2iadk1yekxCgoq1jDSPfgjfDg4QPns9UxcNiGhopxlgesPjE5M6sD1eWzc/KA0j8Nx1AmBy00Ck641ZkEjc8AohaIYrw15mm2AJxTWDTlJTbnwDBlk3vcIjh4ePpj9hshi3pEEws6XhP6dROeBlDVnzOlTuPb4zECbbRoPLD/lFcYGoTvzGG5grpa2xbTdwpbZwtyX1Nw4dgMs9DcHWPqykVapyTyWWXqMYZY8w9Vn6iMev2Wv0pDbmS1AgumbazOyvtPZFWCxhz35cE0irr0R5motmWJGaV3i0vos6PtQ72eefZyu8Bh1smJNJiXtId/NOwStmHlv5pd8UeDIDk4wQU2CYD1bKoQtXZjDEClCLQQ6gmYIID7Mg1EDI67iu7kkyt7Z/1zhlbwAJ9h7Pb5YSlIguP9CALVEkk+JTcrfDXPv8k9Qja+MvnWmB/C9gfZPPRApPwLjGRFNFTRwicR9Us5uT+YFaOaMm7ui99oLaCaL2Euz1c3jNlsvM1Xq/QADvwIiFd3yqyqyZc/gYNG6ZCv4ARp+yV3E8nWFd+E56uYNRW08ocoWLmeRUy+5I9U9rT2eGB52001j9gd4Tgr9jvJjpHlgwl44O1Rp-nMZ+sZ5F+wajkCcdfEd61nqsij+rOtbzZJRU4aFL++7gD/6jgJ4oFJzeapUQzYHCV0PFxtnlCc4c7kqYHaZWtbcc8NVUhrbMkBcf5BIVj/KKG/0HkpIyC95m4vTyuRpESH2AUI+mBjmCPeuW6qeCxO_fM9BJZea+76ZqdeNCjIwGNtwD2jfMIL8me0Qk6j1VIlP+5egEBFwr3cFHx67/KhX+DeIxI+cG779X27Ik2MIju9UxgRnbimQAvYALi8gr3s+79sK5cM3pMEltl9YtHIUnYraJ9T7X4mUQIEFLsfAw0Dige4Oe/hX0i69FeAMHHOXQDST9VRi67Yqspemt9GHwP7vkgkY2uipNdLHjVXC/3PN8rX1O98s68Hgdsw0W4FMv38Zu6Z3PlWmAU7Xw4cU84adaN2WhGjLbbnQx2s+grXsAYxqfHBhOXxW83WJCFs0zijbS21g0Uqa1MGUMsVqMMwiqDlTB+305Yie7Ad8wB1yKdqdFQz8FH+Ay+Z8YN4yABavc2AN16WlFY67AnVDbFPpDCp7c/YzSPzsPNMpeb4HnSVHi6ZN8E3733emnDJ1VkKSH+JIw+XPoql/8zuIo+L9Q4rt-g04QMmv79rDm-WP4Soj8EvcUtdLyMDcPWROTDd1BXEl8Iw5WZ1A0vB8cVReco03jKUD1d4LHW9UHScPQqSk6/wCdCilyvZCMpJ9z+wFjIotBQqfEBlZm3NeegRf9MTrIXU8VcU/t984nU4vnTat9ac4knPgbAHbDdOpnkTDX5DPLDENSe9i/Vp02SUUFGLSMKDq35IaniBLiyjd9jFJ3ee7YZFNwrgCQzdpXJNkdlmB87K6aVTp2fbbA9iszUxeeOiYoDTBbdSWd+lDV8D21aQcsBM4JDlHQRKcazGLAoZPw8FRMtGo1K031g/gT4Lz+PiGKEfdvqYn6ugmSAof42bujouio9g\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
