//
// Generated by CocoaPods-Keys
// on 08/08/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[61], PatchrKeysData[2409], PatchrKeysData[3373], PatchrKeysData[426], PatchrKeysData[1939], PatchrKeysData[3454], PatchrKeysData[4745], PatchrKeysData[3941], PatchrKeysData[2489], PatchrKeysData[3218], PatchrKeysData[1218], PatchrKeysData[2057], PatchrKeysData[3289], PatchrKeysData[4378], PatchrKeysData[2407], PatchrKeysData[539], PatchrKeysData[2986], PatchrKeysData[1200], PatchrKeysData[3608], PatchrKeysData[2012], PatchrKeysData[2379], PatchrKeysData[4907], PatchrKeysData[3407], PatchrKeysData[1551], PatchrKeysData[2187], PatchrKeysData[807], PatchrKeysData[162], PatchrKeysData[4700], PatchrKeysData[1062], PatchrKeysData[4365], PatchrKeysData[661], PatchrKeysData[282], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3264], PatchrKeysData[1795], PatchrKeysData[4460], PatchrKeysData[4027], PatchrKeysData[2749], PatchrKeysData[4290], PatchrKeysData[3618], PatchrKeysData[197], PatchrKeysData[2186], PatchrKeysData[497], PatchrKeysData[2234], PatchrKeysData[2695], PatchrKeysData[3212], PatchrKeysData[3527], PatchrKeysData[3240], PatchrKeysData[452], PatchrKeysData[1365], PatchrKeysData[2725], PatchrKeysData[4548], PatchrKeysData[1373], PatchrKeysData[1232], PatchrKeysData[5115], PatchrKeysData[3831], PatchrKeysData[4350], PatchrKeysData[1857], PatchrKeysData[3906], PatchrKeysData[631], PatchrKeysData[4620], PatchrKeysData[3073], PatchrKeysData[2948], PatchrKeysData[600], PatchrKeysData[552], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2913], PatchrKeysData[362], PatchrKeysData[3516], PatchrKeysData[1453], PatchrKeysData[1567], PatchrKeysData[3368], PatchrKeysData[345], PatchrKeysData[2055], PatchrKeysData[3215], PatchrKeysData[950], PatchrKeysData[4675], PatchrKeysData[3506], PatchrKeysData[583], PatchrKeysData[5032], PatchrKeysData[2165], PatchrKeysData[4492], PatchrKeysData[2416], PatchrKeysData[5152], PatchrKeysData[3523], PatchrKeysData[3586], PatchrKeysData[1875], PatchrKeysData[5183], PatchrKeysData[4609], PatchrKeysData[105], PatchrKeysData[4058], PatchrKeysData[385], PatchrKeysData[1127], PatchrKeysData[368], PatchrKeysData[781], PatchrKeysData[357], PatchrKeysData[4270], PatchrKeysData[4956], PatchrKeysData[3244], PatchrKeysData[5177], PatchrKeysData[1402], PatchrKeysData[2932], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3056], PatchrKeysData[1390], PatchrKeysData[2775], PatchrKeysData[1993], PatchrKeysData[1965], PatchrKeysData[1032], PatchrKeysData[3495], PatchrKeysData[2640], PatchrKeysData[3851], PatchrKeysData[1691], PatchrKeysData[3171], PatchrKeysData[3519], PatchrKeysData[1933], PatchrKeysData[3539], PatchrKeysData[2024], PatchrKeysData[1469], PatchrKeysData[463], PatchrKeysData[3534], PatchrKeysData[185], PatchrKeysData[4810], PatchrKeysData[3613], PatchrKeysData[5020], PatchrKeysData[1909], PatchrKeysData[1652], PatchrKeysData[3879], PatchrKeysData[3439], PatchrKeysData[4909], PatchrKeysData[741], PatchrKeysData[4671], PatchrKeysData[5163], PatchrKeysData[499], PatchrKeysData[618], PatchrKeysData[4075], PatchrKeysData[2224], PatchrKeysData[383], PatchrKeysData[274], PatchrKeysData[788], PatchrKeysData[628], PatchrKeysData[3889], PatchrKeysData[1199], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[2690], PatchrKeysData[1852], PatchrKeysData[164], PatchrKeysData[2650], PatchrKeysData[1190], PatchrKeysData[5293], PatchrKeysData[2433], PatchrKeysData[4948], PatchrKeysData[2730], PatchrKeysData[3665], PatchrKeysData[935], PatchrKeysData[4695], PatchrKeysData[126], PatchrKeysData[2363], PatchrKeysData[3220], PatchrKeysData[3139], PatchrKeysData[4672], PatchrKeysData[4068], PatchrKeysData[3261], PatchrKeysData[591], PatchrKeysData[4214], PatchrKeysData[896], PatchrKeysData[743], PatchrKeysData[2823], PatchrKeysData[961], PatchrKeysData[3612], PatchrKeysData[1097], PatchrKeysData[4338], PatchrKeysData[3124], PatchrKeysData[861], PatchrKeysData[2996], PatchrKeysData[5415], PatchrKeysData[467], PatchrKeysData[2773], PatchrKeysData[3198], PatchrKeysData[3313], PatchrKeysData[3987], PatchrKeysData[1203], PatchrKeysData[5499], PatchrKeysData[3496], PatchrKeysData[2366], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[5554] = "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_d2LEXrLZubjLiMylFf4kZMNR0Dt3ESDXpnOgfHsk0v073MneuQaE+FA3Z1B1C3yZoQ2HkgBAe1as/eP_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
