//
// Generated by CocoaPods-Keys
// on 17/01/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[8238], PatchrKeysData[1664], PatchrKeysData[4048], PatchrKeysData[4208], PatchrKeysData[13152], PatchrKeysData[2426], PatchrKeysData[12064], PatchrKeysData[836], PatchrKeysData[6979], PatchrKeysData[2658], PatchrKeysData[6973], PatchrKeysData[2919], PatchrKeysData[5232], PatchrKeysData[6525], PatchrKeysData[2360], PatchrKeysData[1560], PatchrKeysData[5243], PatchrKeysData[4404], PatchrKeysData[6374], PatchrKeysData[5217], PatchrKeysData[6209], PatchrKeysData[3428], PatchrKeysData[12419], PatchrKeysData[5254], PatchrKeysData[9032], PatchrKeysData[2279], PatchrKeysData[3300], PatchrKeysData[8471], PatchrKeysData[12894], PatchrKeysData[5615], PatchrKeysData[9049], PatchrKeysData[5448], PatchrKeysData[8305], PatchrKeysData[5045], PatchrKeysData[11724], PatchrKeysData[4581], PatchrKeysData[4525], PatchrKeysData[10248], PatchrKeysData[10991], PatchrKeysData[3143], PatchrKeysData[1852], PatchrKeysData[9924], PatchrKeysData[6913], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2198], PatchrKeysData[5783], PatchrKeysData[12703], PatchrKeysData[11005], PatchrKeysData[3808], PatchrKeysData[12507], PatchrKeysData[11074], PatchrKeysData[6308], PatchrKeysData[1983], PatchrKeysData[5054], PatchrKeysData[11713], PatchrKeysData[5826], PatchrKeysData[3296], PatchrKeysData[7877], PatchrKeysData[4786], PatchrKeysData[2520], PatchrKeysData[6379], PatchrKeysData[3237], PatchrKeysData[3705], PatchrKeysData[6968], PatchrKeysData[9377], PatchrKeysData[1982], PatchrKeysData[2000], PatchrKeysData[4321], PatchrKeysData[11693], PatchrKeysData[11518], PatchrKeysData[12411], PatchrKeysData[6165], PatchrKeysData[8065], PatchrKeysData[9523], PatchrKeysData[3782], PatchrKeysData[13305], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[11090], PatchrKeysData[7965], PatchrKeysData[1920], PatchrKeysData[6485], PatchrKeysData[9664], PatchrKeysData[1372], PatchrKeysData[12622], PatchrKeysData[7693], PatchrKeysData[12881], PatchrKeysData[9794], PatchrKeysData[10612], PatchrKeysData[8325], PatchrKeysData[10592], PatchrKeysData[12024], PatchrKeysData[1033], PatchrKeysData[6874], PatchrKeysData[4127], PatchrKeysData[7652], PatchrKeysData[7948], PatchrKeysData[5478], PatchrKeysData[3636], PatchrKeysData[9296], PatchrKeysData[12961], PatchrKeysData[8722], PatchrKeysData[2509], PatchrKeysData[7067], PatchrKeysData[10497], PatchrKeysData[12339], PatchrKeysData[738], PatchrKeysData[6047], PatchrKeysData[2708], PatchrKeysData[7955], PatchrKeysData[10820], PatchrKeysData[4362], PatchrKeysData[8120], PatchrKeysData[6888], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[7389], PatchrKeysData[2747], PatchrKeysData[11808], PatchrKeysData[2587], PatchrKeysData[4182], PatchrKeysData[9747], PatchrKeysData[1648], PatchrKeysData[9763], PatchrKeysData[2390], PatchrKeysData[8031], PatchrKeysData[7160], PatchrKeysData[1861], PatchrKeysData[7087], PatchrKeysData[10951], PatchrKeysData[8799], PatchrKeysData[12346], PatchrKeysData[12515], PatchrKeysData[13227], PatchrKeysData[2901], PatchrKeysData[6402], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6423], PatchrKeysData[9743], PatchrKeysData[5578], PatchrKeysData[2820], PatchrKeysData[11491], PatchrKeysData[11680], PatchrKeysData[8853], PatchrKeysData[1073], PatchrKeysData[2851], PatchrKeysData[6663], PatchrKeysData[9125], PatchrKeysData[10229], PatchrKeysData[7020], PatchrKeysData[10908], PatchrKeysData[3398], PatchrKeysData[5192], PatchrKeysData[2049], PatchrKeysData[2435], PatchrKeysData[6254], PatchrKeysData[4244], PatchrKeysData[6111], PatchrKeysData[1786], PatchrKeysData[8663], PatchrKeysData[618], PatchrKeysData[6084], PatchrKeysData[402], PatchrKeysData[12307], PatchrKeysData[9816], PatchrKeysData[9082], PatchrKeysData[6990], PatchrKeysData[12751], PatchrKeysData[2543], PatchrKeysData[1001], PatchrKeysData[11086], PatchrKeysData[810], PatchrKeysData[2908], PatchrKeysData[1632], PatchrKeysData[1876], PatchrKeysData[10068], PatchrKeysData[8057], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[2601], PatchrKeysData[3137], PatchrKeysData[11801], PatchrKeysData[12074], PatchrKeysData[8804], PatchrKeysData[5997], PatchrKeysData[9874], PatchrKeysData[3562], PatchrKeysData[527], PatchrKeysData[132], PatchrKeysData[7097], PatchrKeysData[1245], PatchrKeysData[10717], PatchrKeysData[10040], PatchrKeysData[13349], PatchrKeysData[11201], PatchrKeysData[2762], PatchrKeysData[12140], PatchrKeysData[1794], PatchrKeysData[12923], PatchrKeysData[2870], PatchrKeysData[4543], PatchrKeysData[275], PatchrKeysData[1711], PatchrKeysData[5082], PatchrKeysData[3574], PatchrKeysData[10445], PatchrKeysData[1306], PatchrKeysData[8673], PatchrKeysData[6397], PatchrKeysData[7909], PatchrKeysData[10219], PatchrKeysData[12184], PatchrKeysData[4936], PatchrKeysData[3361], PatchrKeysData[7276], PatchrKeysData[7251], PatchrKeysData[597], PatchrKeysData[4133], PatchrKeysData[6680], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3698], PatchrKeysData[3466], PatchrKeysData[5056], PatchrKeysData[12323], PatchrKeysData[8157], PatchrKeysData[9286], PatchrKeysData[5452], PatchrKeysData[5979], PatchrKeysData[6931], PatchrKeysData[7024], PatchrKeysData[10311], PatchrKeysData[1354], PatchrKeysData[3697], PatchrKeysData[8880], PatchrKeysData[864], PatchrKeysData[3191], PatchrKeysData[6177], PatchrKeysData[1268], PatchrKeysData[10689], PatchrKeysData[3826], PatchrKeysData[4497], PatchrKeysData[5491], PatchrKeysData[4113], PatchrKeysData[10270], PatchrKeysData[5065], PatchrKeysData[4298], PatchrKeysData[8304], PatchrKeysData[9098], PatchrKeysData[2021], PatchrKeysData[2423], PatchrKeysData[12596], PatchrKeysData[3431], PatchrKeysData[2568], PatchrKeysData[9948], PatchrKeysData[2875], PatchrKeysData[5025], PatchrKeysData[10058], PatchrKeysData[9233], PatchrKeysData[8364], PatchrKeysData[3438], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6000], PatchrKeysData[9116], PatchrKeysData[7432], PatchrKeysData[9947], PatchrKeysData[3357], PatchrKeysData[11421], PatchrKeysData[11371], PatchrKeysData[13269], PatchrKeysData[9085], PatchrKeysData[9104], PatchrKeysData[6362], PatchrKeysData[7860], PatchrKeysData[2698], PatchrKeysData[3455], PatchrKeysData[10778], PatchrKeysData[1475], PatchrKeysData[10010], PatchrKeysData[7003], PatchrKeysData[3380], PatchrKeysData[13143], PatchrKeysData[11471], PatchrKeysData[2034], PatchrKeysData[3539], PatchrKeysData[11185], PatchrKeysData[1990], PatchrKeysData[635], PatchrKeysData[11445], PatchrKeysData[1351], PatchrKeysData[8060], PatchrKeysData[12137], PatchrKeysData[10328], PatchrKeysData[2361], PatchrKeysData[4370], PatchrKeysData[5706], PatchrKeysData[1894], PatchrKeysData[6317], PatchrKeysData[9064], PatchrKeysData[12790], PatchrKeysData[9990], PatchrKeysData[10615], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[2804], PatchrKeysData[13078], PatchrKeysData[6357], PatchrKeysData[1743], PatchrKeysData[8457], PatchrKeysData[12162], PatchrKeysData[12943], PatchrKeysData[10225], PatchrKeysData[9571], PatchrKeysData[1772], PatchrKeysData[11451], PatchrKeysData[10837], PatchrKeysData[3254], PatchrKeysData[6010], PatchrKeysData[4690], PatchrKeysData[8755], PatchrKeysData[2706], PatchrKeysData[2835], PatchrKeysData[11655], PatchrKeysData[12060], PatchrKeysData[6244], PatchrKeysData[8577], PatchrKeysData[10130], PatchrKeysData[2264], PatchrKeysData[10424], PatchrKeysData[7973], PatchrKeysData[7468], PatchrKeysData[2262], PatchrKeysData[4710], PatchrKeysData[6834], PatchrKeysData[4700], PatchrKeysData[7769], PatchrKeysData[10238], PatchrKeysData[10446], PatchrKeysData[8863], PatchrKeysData[6724], PatchrKeysData[11748], PatchrKeysData[9806], PatchrKeysData[995], PatchrKeysData[6396], PatchrKeysData[1249], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[3833], PatchrKeysData[4399], PatchrKeysData[13376], PatchrKeysData[8], PatchrKeysData[9354], PatchrKeysData[3487], PatchrKeysData[8319], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[9140], PatchrKeysData[11022], PatchrKeysData[3114], PatchrKeysData[2075], PatchrKeysData[13062], PatchrKeysData[7595], PatchrKeysData[1875], PatchrKeysData[349], PatchrKeysData[9795], PatchrKeysData[9863], PatchrKeysData[12268], PatchrKeysData[7543], PatchrKeysData[3680], PatchrKeysData[4488], PatchrKeysData[2193], PatchrKeysData[10910], PatchrKeysData[9093], PatchrKeysData[12431], PatchrKeysData[3266], PatchrKeysData[62], PatchrKeysData[7817], PatchrKeysData[8449], PatchrKeysData[12621], PatchrKeysData[12675], PatchrKeysData[4226], PatchrKeysData[12278], PatchrKeysData[7064], PatchrKeysData[4691], PatchrKeysData[4451], PatchrKeysData[3572], PatchrKeysData[3082], PatchrKeysData[6215], PatchrKeysData[3033], PatchrKeysData[5605], PatchrKeysData[5234], PatchrKeysData[5949], PatchrKeysData[12740], PatchrKeysData[6538], PatchrKeysData[5607], PatchrKeysData[13033], PatchrKeysData[8727], PatchrKeysData[10486], PatchrKeysData[9187], PatchrKeysData[5567], PatchrKeysData[10285], PatchrKeysData[353], PatchrKeysData[7017], PatchrKeysData[6547], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[13418] = "|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\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
