//
// Generated by CocoaPods-Keys
// on 20/08/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4772], PatchrKeysData[25], PatchrKeysData[4991], PatchrKeysData[895], PatchrKeysData[2007], PatchrKeysData[2565], PatchrKeysData[897], PatchrKeysData[1949], PatchrKeysData[441], PatchrKeysData[2230], PatchrKeysData[1705], PatchrKeysData[4569], PatchrKeysData[4123], PatchrKeysData[3576], PatchrKeysData[1214], PatchrKeysData[3083], PatchrKeysData[107], PatchrKeysData[5517], PatchrKeysData[4670], PatchrKeysData[3545], PatchrKeysData[1593], PatchrKeysData[1069], PatchrKeysData[4362], PatchrKeysData[3146], PatchrKeysData[1218], PatchrKeysData[4927], PatchrKeysData[384], PatchrKeysData[4181], PatchrKeysData[5350], PatchrKeysData[2778], PatchrKeysData[3143], PatchrKeysData[86], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2959], PatchrKeysData[734], PatchrKeysData[2734], PatchrKeysData[3547], PatchrKeysData[961], PatchrKeysData[2823], PatchrKeysData[5147], PatchrKeysData[5421], PatchrKeysData[4262], PatchrKeysData[84], PatchrKeysData[2653], PatchrKeysData[2564], PatchrKeysData[2266], PatchrKeysData[4224], PatchrKeysData[2673], PatchrKeysData[2592], PatchrKeysData[1257], PatchrKeysData[4689], PatchrKeysData[2661], PatchrKeysData[4173], PatchrKeysData[5133], PatchrKeysData[2242], PatchrKeysData[3220], PatchrKeysData[5212], PatchrKeysData[1169], PatchrKeysData[5129], PatchrKeysData[129], PatchrKeysData[3591], PatchrKeysData[1014], PatchrKeysData[5033], PatchrKeysData[3005], PatchrKeysData[2930], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2128], PatchrKeysData[563], PatchrKeysData[4365], PatchrKeysData[2721], PatchrKeysData[2251], PatchrKeysData[4334], PatchrKeysData[68], PatchrKeysData[2729], PatchrKeysData[2287], PatchrKeysData[4101], PatchrKeysData[4239], PatchrKeysData[3777], PatchrKeysData[159], PatchrKeysData[5534], PatchrKeysData[2595], PatchrKeysData[3680], PatchrKeysData[3273], PatchrKeysData[5020], PatchrKeysData[4757], PatchrKeysData[2459], PatchrKeysData[2480], PatchrKeysData[2711], PatchrKeysData[724], PatchrKeysData[5061], PatchrKeysData[4026], PatchrKeysData[1567], PatchrKeysData[3284], PatchrKeysData[3014], PatchrKeysData[5107], PatchrKeysData[5152], PatchrKeysData[2431], PatchrKeysData[3224], PatchrKeysData[1216], PatchrKeysData[588], PatchrKeysData[2918], PatchrKeysData[1490], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1406], PatchrKeysData[1660], PatchrKeysData[2641], PatchrKeysData[3457], PatchrKeysData[4936], PatchrKeysData[4993], PatchrKeysData[1483], PatchrKeysData[2928], PatchrKeysData[4650], PatchrKeysData[762], PatchrKeysData[4891], PatchrKeysData[3636], PatchrKeysData[5087], PatchrKeysData[1609], PatchrKeysData[752], PatchrKeysData[5273], PatchrKeysData[4910], PatchrKeysData[2502], PatchrKeysData[2104], PatchrKeysData[2254], PatchrKeysData[2972], PatchrKeysData[2531], PatchrKeysData[1071], PatchrKeysData[3551], PatchrKeysData[2907], PatchrKeysData[2752], PatchrKeysData[526], PatchrKeysData[1967], PatchrKeysData[2509], PatchrKeysData[5386], PatchrKeysData[3593], PatchrKeysData[4153], PatchrKeysData[1605], PatchrKeysData[3861], PatchrKeysData[3280], PatchrKeysData[478], PatchrKeysData[2452], PatchrKeysData[30], PatchrKeysData[5382], PatchrKeysData[3351], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[3671], PatchrKeysData[94], PatchrKeysData[2076], PatchrKeysData[3910], PatchrKeysData[4011], PatchrKeysData[3414], PatchrKeysData[5363], PatchrKeysData[3661], PatchrKeysData[238], PatchrKeysData[4759], PatchrKeysData[5418], PatchrKeysData[1073], PatchrKeysData[1426], PatchrKeysData[5537], PatchrKeysData[5227], PatchrKeysData[355], PatchrKeysData[4790], PatchrKeysData[937], PatchrKeysData[2121], PatchrKeysData[1514], PatchrKeysData[3821], PatchrKeysData[651], PatchrKeysData[4605], PatchrKeysData[523], PatchrKeysData[1775], PatchrKeysData[2134], PatchrKeysData[2487], PatchrKeysData[5268], PatchrKeysData[2766], PatchrKeysData[4435], PatchrKeysData[4031], PatchrKeysData[465], PatchrKeysData[3406], PatchrKeysData[2837], PatchrKeysData[452], PatchrKeysData[4946], PatchrKeysData[5376], PatchrKeysData[534], PatchrKeysData[1026], PatchrKeysData[5207], PatchrKeysData[3843], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[5554] = "T3IKyuewWAJkqmRt4CDm1Q3PV1wZi1xAsvRUEMqw3w9TZnE5gaDdFueWvo18RcIRqA0z9KhLqCoKT/XuqZupb41aBWMf3LetFsnh9pQdXsR7e9Clt2jFDwPCYYPGbByhl4myOZrGiTjJEicSoW6dB4nmbp86Y8pdOjld0a9qUl4Q3dv2wAH5PF4z6NEiMAnoSdcCE539jOBQlSAtca4aN0yWP2qDwBjCdIkIPrto5rKJa+_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_JKn2oiEcwQp6lSA3QpFwevTa5COepf9RK0RqdZCjdNaWoPZf21F0LSnd9YoAbuH2a8itjki8vN5RRBtDZdtjtoL8yyFT36luYOCrlgi++v3jPcWj/IGc9tvVljU/aI1hyyp3oBW0lMm6lOuLTK4s/YTlnwJENjX3F4wgOLYwKk1kKio2ubX/50JaXmde/K9YEVGNOHhOeQDt9BINO0T94F1VMPoIS0J0Y+FfHLRwUeJ3hIDkUbsNMe79vmL0eiK1j1oSarbqvKwiRLdbbj3ym+rg7SxLYMfq68JZUoEJZLYP6ge3WiPFG5rF714jubD3tfQwRoWU1jNc5CNG40ztB68oJZwXBj20jl+d5WRW3lrmKPHaN/oAs8U2OXjbLpZUSoWCpN4GFeNWtKRbDW2WsxMTnI2Ss4lzw/FZZ6Y4aPrimF/7aWE924nRLScWnQS+ufT6ZxcS3lwrJydqwIatSXf7HTqpsamU5GDNEPHk9u1EVfFdPfE4GuLaqB2MnvGpd7e2Ho8X5pu9sDOUBt24+xM+7FIPa+mQ+3/F936q9rhr8iEndaHo5vatW2IW+BS97Cd6g2zcg9cjCmy01o8NHvMjDc9DESY75U7OTk51vEz/YiCOmt+mHPptf0lGoYqQoNPxxRHwxh2TdZXRN+1dYnP4ggef6UdtVkB+0TJ63lTQohNqaLGiK19ObmsPUO+3NpqtCvBd403T0e8CvT0M8+jCEo5X5y3CJUw4Ooc045YJSTDCwsNYOdA1WpQbo47KKTEdjyhumXaz1tRa57IUPmSrKWr/9f+fjbUkCGqM7cckFCo8ul6PTHyUjLwxhoa637S/HO560O2PN9-LaC1xBKlKDowcMdlUP9Rv4EkL9uRoC9V9KwpvcQqV9+I8b4bJt9MB73jfFkZzG17hAY/XiDigi9PclgF2Sr5WyronyfDQkH6x37WLbeFh9L5rGQBYXb03SxMvMUXebjIt5r2vy2PCGkRljd6NdHB6ShB9Vh9Wcnzpl3SrBPHu3VZft1ir5SWX5IT5IQAaLoquCW5yQkgkA/MIRvhRByOQ+csallQh0MRZBWSrGOhc3tU2JxHJZF+HL+SzTEye2iYUqcfB76Xh6688vrCWEjaSl+PVgYapoI0D6h4ZVUi89nmPxg-fk0hIA2mD0GHmo1e2PJ9ZMSHHcpmOqJpS0POn33T1mTm6bdgGm3isRQPtLv29uM2Pgm5SJb695ZN8SqFfz8bv4laiPaoh+9qnyZyLUttHts4xmIiogCHJfpnG2cKiqzgvKapfETvbdjTxsesFcl0jF47zGWdrKdYiyhqihIYII6xQs+nP1tEnrzzwbiHP78yul12OxI+a9YlwNzIqMk4WSXfH6GX76H1ZFY5+vxmXhWVmHllZDwUAZIpP5Yv4zYSB9u/QuXUmeQHvNmLCOXRtfmnC3BKr2Az4JltejNS0VJlhvjqEYD7gZyJ5mKhMOPtPVxoQJNMMCmbiEgTKDFxeoI9cVP1kVMd1dM7anw87tTpBoJLDA5zpeyMDHj2MyCUkAillJkiFN71lihHKiEwCzDoZpSO0i/q6c9Ns4Kbdkc+s/CRjao43w3u0WofJlxZAE3I0uo4nL0sbu/zo25R3aIF-PRfC9MvqQfpqdQWQ=\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
