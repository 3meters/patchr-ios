//
// Generated by CocoaPods-Keys
// on 26/01/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[2806], PatchrKeysData[3857], PatchrKeysData[9888], PatchrKeysData[5352], PatchrKeysData[9919], PatchrKeysData[12229], PatchrKeysData[9879], PatchrKeysData[6048], PatchrKeysData[7428], PatchrKeysData[1311], PatchrKeysData[1298], PatchrKeysData[11696], PatchrKeysData[10760], PatchrKeysData[11959], PatchrKeysData[6716], PatchrKeysData[5235], PatchrKeysData[7258], PatchrKeysData[217], PatchrKeysData[7298], PatchrKeysData[3255], PatchrKeysData[8878], PatchrKeysData[6675], PatchrKeysData[1886], PatchrKeysData[10995], PatchrKeysData[7770], PatchrKeysData[5508], PatchrKeysData[4759], PatchrKeysData[7319], PatchrKeysData[10809], PatchrKeysData[7869], PatchrKeysData[8206], PatchrKeysData[326], PatchrKeysData[8653], PatchrKeysData[628], PatchrKeysData[11072], PatchrKeysData[11504], PatchrKeysData[11152], PatchrKeysData[10265], PatchrKeysData[6346], PatchrKeysData[2342], PatchrKeysData[11430], PatchrKeysData[9647], PatchrKeysData[8223], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5578], PatchrKeysData[7521], PatchrKeysData[9896], PatchrKeysData[8465], PatchrKeysData[9606], PatchrKeysData[10387], PatchrKeysData[395], PatchrKeysData[148], PatchrKeysData[11736], PatchrKeysData[4920], PatchrKeysData[4232], PatchrKeysData[1689], PatchrKeysData[737], PatchrKeysData[10246], PatchrKeysData[10455], PatchrKeysData[9826], PatchrKeysData[2874], PatchrKeysData[1571], PatchrKeysData[4104], PatchrKeysData[11293], PatchrKeysData[3906], PatchrKeysData[9230], PatchrKeysData[4266], PatchrKeysData[11402], PatchrKeysData[6462], PatchrKeysData[1513], PatchrKeysData[8927], PatchrKeysData[5473], PatchrKeysData[7403], PatchrKeysData[6887], PatchrKeysData[820], PatchrKeysData[8195], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[10028], PatchrKeysData[2184], PatchrKeysData[40], PatchrKeysData[5087], PatchrKeysData[9969], PatchrKeysData[3367], PatchrKeysData[7194], PatchrKeysData[8893], PatchrKeysData[3334], PatchrKeysData[7236], PatchrKeysData[8445], PatchrKeysData[11445], PatchrKeysData[10713], PatchrKeysData[10749], PatchrKeysData[12189], PatchrKeysData[7341], PatchrKeysData[2846], PatchrKeysData[6437], PatchrKeysData[1113], PatchrKeysData[2945], PatchrKeysData[82], PatchrKeysData[5806], PatchrKeysData[10939], PatchrKeysData[3123], PatchrKeysData[8348], PatchrKeysData[6546], PatchrKeysData[6746], PatchrKeysData[4016], PatchrKeysData[11763], PatchrKeysData[4749], PatchrKeysData[1338], PatchrKeysData[2307], PatchrKeysData[3670], PatchrKeysData[10629], PatchrKeysData[3481], PatchrKeysData[3529], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[10715], PatchrKeysData[3893], PatchrKeysData[11600], PatchrKeysData[6212], PatchrKeysData[2281], PatchrKeysData[8444], PatchrKeysData[10901], PatchrKeysData[10090], PatchrKeysData[8109], PatchrKeysData[338], PatchrKeysData[7681], PatchrKeysData[7458], PatchrKeysData[8101], PatchrKeysData[1220], PatchrKeysData[7221], PatchrKeysData[3805], PatchrKeysData[10889], PatchrKeysData[4422], PatchrKeysData[916], PatchrKeysData[5405], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[8092], PatchrKeysData[10680], PatchrKeysData[9765], PatchrKeysData[4198], PatchrKeysData[1868], PatchrKeysData[6940], PatchrKeysData[9483], PatchrKeysData[7332], PatchrKeysData[9621], PatchrKeysData[4965], PatchrKeysData[1863], PatchrKeysData[740], PatchrKeysData[9603], PatchrKeysData[4986], PatchrKeysData[2730], PatchrKeysData[2609], PatchrKeysData[8180], PatchrKeysData[9708], PatchrKeysData[6283], PatchrKeysData[2787], PatchrKeysData[4436], PatchrKeysData[3753], PatchrKeysData[4109], PatchrKeysData[6617], PatchrKeysData[3871], PatchrKeysData[9097], PatchrKeysData[5189], PatchrKeysData[2803], PatchrKeysData[4625], PatchrKeysData[6819], PatchrKeysData[11860], PatchrKeysData[2618], PatchrKeysData[1376], PatchrKeysData[1752], PatchrKeysData[5576], PatchrKeysData[5560], PatchrKeysData[9917], PatchrKeysData[2306], PatchrKeysData[2309], PatchrKeysData[1328], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6070], PatchrKeysData[2575], PatchrKeysData[1687], PatchrKeysData[7364], PatchrKeysData[640], PatchrKeysData[8660], PatchrKeysData[4341], PatchrKeysData[10262], PatchrKeysData[10459], PatchrKeysData[9345], PatchrKeysData[1326], PatchrKeysData[6387], PatchrKeysData[10372], PatchrKeysData[8724], PatchrKeysData[5694], PatchrKeysData[8838], PatchrKeysData[8480], PatchrKeysData[6311], PatchrKeysData[7807], PatchrKeysData[6624], PatchrKeysData[7578], PatchrKeysData[3609], PatchrKeysData[5098], PatchrKeysData[2551], PatchrKeysData[6501], PatchrKeysData[1543], PatchrKeysData[5182], PatchrKeysData[8271], PatchrKeysData[3731], PatchrKeysData[6851], PatchrKeysData[7289], PatchrKeysData[11127], PatchrKeysData[2694], PatchrKeysData[7921], PatchrKeysData[664], PatchrKeysData[1176], PatchrKeysData[4149], PatchrKeysData[10332], PatchrKeysData[2510], PatchrKeysData[6458], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[9866], PatchrKeysData[2639], PatchrKeysData[2168], PatchrKeysData[2923], PatchrKeysData[11296], PatchrKeysData[3258], PatchrKeysData[8002], PatchrKeysData[5633], PatchrKeysData[5238], PatchrKeysData[2737], PatchrKeysData[7980], PatchrKeysData[8026], PatchrKeysData[4530], PatchrKeysData[1039], PatchrKeysData[7406], PatchrKeysData[11240], PatchrKeysData[3270], PatchrKeysData[8162], PatchrKeysData[10681], PatchrKeysData[10383], PatchrKeysData[6321], PatchrKeysData[3219], PatchrKeysData[3788], PatchrKeysData[365], PatchrKeysData[3669], PatchrKeysData[2931], PatchrKeysData[9923], PatchrKeysData[7686], PatchrKeysData[7006], PatchrKeysData[8166], PatchrKeysData[11849], PatchrKeysData[11852], PatchrKeysData[10548], PatchrKeysData[1964], PatchrKeysData[7571], PatchrKeysData[9515], PatchrKeysData[2047], PatchrKeysData[11090], PatchrKeysData[3584], PatchrKeysData[1098], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[987], PatchrKeysData[12120], PatchrKeysData[4326], PatchrKeysData[9178], PatchrKeysData[9745], PatchrKeysData[3227], PatchrKeysData[6946], PatchrKeysData[4949], PatchrKeysData[10370], PatchrKeysData[289], PatchrKeysData[3354], PatchrKeysData[5159], PatchrKeysData[4762], PatchrKeysData[8028], PatchrKeysData[604], PatchrKeysData[11450], PatchrKeysData[470], PatchrKeysData[5450], PatchrKeysData[8006], PatchrKeysData[9142], PatchrKeysData[3391], PatchrKeysData[3849], PatchrKeysData[11641], PatchrKeysData[11270], PatchrKeysData[7522], PatchrKeysData[5820], PatchrKeysData[5426], PatchrKeysData[11109], PatchrKeysData[11804], PatchrKeysData[9540], PatchrKeysData[2667], PatchrKeysData[9170], PatchrKeysData[10878], PatchrKeysData[2901], PatchrKeysData[8469], PatchrKeysData[6862], PatchrKeysData[9406], PatchrKeysData[1896], PatchrKeysData[6714], PatchrKeysData[3909], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[9033], PatchrKeysData[4848], PatchrKeysData[3523], PatchrKeysData[11265], PatchrKeysData[10041], PatchrKeysData[4570], PatchrKeysData[11531], PatchrKeysData[9897], PatchrKeysData[6878], PatchrKeysData[3580], PatchrKeysData[9256], PatchrKeysData[6119], PatchrKeysData[4928], PatchrKeysData[8229], PatchrKeysData[11411], PatchrKeysData[11718], PatchrKeysData[2636], PatchrKeysData[5503], PatchrKeysData[9114], PatchrKeysData[5114], PatchrKeysData[4787], PatchrKeysData[1535], PatchrKeysData[11461], PatchrKeysData[3264], PatchrKeysData[1453], PatchrKeysData[551], PatchrKeysData[2517], PatchrKeysData[5757], PatchrKeysData[11346], PatchrKeysData[4518], PatchrKeysData[5968], PatchrKeysData[6570], PatchrKeysData[493], PatchrKeysData[1578], PatchrKeysData[3829], PatchrKeysData[2970], PatchrKeysData[8666], PatchrKeysData[1340], PatchrKeysData[1238], PatchrKeysData[11088], PatchrKeysData[12106], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[12296], PatchrKeysData[4747], PatchrKeysData[9127], PatchrKeysData[2244], PatchrKeysData[8553], PatchrKeysData[3602], PatchrKeysData[3434], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[4617], PatchrKeysData[697], PatchrKeysData[6698], PatchrKeysData[8088], PatchrKeysData[10237], PatchrKeysData[6727], PatchrKeysData[911], PatchrKeysData[3057], PatchrKeysData[7467], PatchrKeysData[7215], PatchrKeysData[6057], PatchrKeysData[1651], PatchrKeysData[5617], PatchrKeysData[9149], PatchrKeysData[8365], PatchrKeysData[8427], PatchrKeysData[7828], PatchrKeysData[813], PatchrKeysData[6749], PatchrKeysData[10530], PatchrKeysData[3084], PatchrKeysData[8339], PatchrKeysData[2014], PatchrKeysData[59], PatchrKeysData[7824], PatchrKeysData[3533], PatchrKeysData[8032], PatchrKeysData[12232], PatchrKeysData[6179], PatchrKeysData[10278], PatchrKeysData[3202], PatchrKeysData[1382], PatchrKeysData[5116], PatchrKeysData[11209], PatchrKeysData[11659], PatchrKeysData[4657], PatchrKeysData[7837], PatchrKeysData[772], PatchrKeysData[7570], PatchrKeysData[11729], PatchrKeysData[10243], PatchrKeysData[3091], PatchrKeysData[11642], PatchrKeysData[8462], PatchrKeysData[6004], PatchrKeysData[588], PatchrKeysData[2037], PatchrKeysData[6121], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[12386] = "|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_RIFn9Gi8J53cqN/HpNjeAtpXlsE3ezlANureJPbrDyDwIT5EZA0Z2BQ0s98B+PRWkwZIp2gW7Cn5jO/VVnEmNXm03aErTsFMdpOkRaw+osWM5D0Q/3JlCbCQRsn4yJ/mVoSmocAV6FNlqRsvih8UJvGvR1eKxC+HgMic/ckWm/vnnaUIVFd1JtNe6qZ1NJVwW8U9vuFxMB1p0fZzg9WpIh4WFVGgmMvDiovF13S7oDUiKBv7UP/SQbZ3iWdnL7i3zErDCBem4vJhwhrqBqL8Wv7ga3mE2XmHKjlGZr+bwS1ompcKtsb3B3VJ81BZHCNPAHTxM0ITvYJBilIsGgGLcNt+YvHlxoMuKcABg9clYlDfvjT+BSclOXw3a9wNZGne0PKfbq6/mar0erfdquR93kYKCPVtI6xqLG5l1BolyFlc11/jNptZlZhh1FHt/dtkCMnrLFn7drrWNf28gaeDxr46rFzGqBrhqv3YCQoLzoiUQuVxub52uWi3mECx5yu9hXHzg/hZ1Lzq0YP8e7QjQn7+ieeL6siuVTRAsZPmJ9x1AQYJsOYoskk16TBUBtO2UlIDmRbHeWCNLJPFHxD4ucR4bhhalOO+rF/NF1vSmPgrRxVnoYGaH12N/SHyQGPH+vA61ip9t+tuYbdfdcpY3HodKHYuWJ8zrz7TymTqTgBntVredsDDmbX8sudWXNEj1f/oUkPSYoaBaKLspYyY4o1knp9jIcpTBi/debIayQ6MJwFWg5ZLOBykqKniIAMh6vJ0XuhrlBnCO0/2EtletF4A/tCQWJymSK830NcrMcfItUT1/Yp+WlJqf/o1Y4qppeFbAh8x3oH9WLd3C3jF09fp/7M9Dpvzdumlff8qfgBDxGBd5S/AkG0OtNqoAKG+wHYOKKWwa063+js+ZZR9AL7zUfF4t0j9+n9HM+1MfroQban0+CA6LnSeNzc49pNm+MepzCbHE1E0Ufrfe8oDoEkAEcXp585EuokSvJ1iGaIFDYo/v8scBeiLyN6+Q4IXDAwnULl5ebbQZjhm2iXL+cHZkj5Ve4Z6ySc9Zmb8wfu34Ar2bZTEjtq0vWzl39n8CIsj8bFcCd2/MnmszHVsns7nec5ngy\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
