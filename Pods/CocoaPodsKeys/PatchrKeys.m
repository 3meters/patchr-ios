//
// Generated by CocoaPods-Keys
// on 04/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4630], PatchrKeysData[3224], PatchrKeysData[3373], PatchrKeysData[3741], PatchrKeysData[3492], PatchrKeysData[1014], PatchrKeysData[2138], PatchrKeysData[970], PatchrKeysData[3721], PatchrKeysData[318], PatchrKeysData[2465], PatchrKeysData[3951], PatchrKeysData[4737], PatchrKeysData[3380], PatchrKeysData[4895], PatchrKeysData[3559], PatchrKeysData[1632], PatchrKeysData[5845], PatchrKeysData[4565], PatchrKeysData[4809], PatchrKeysData[73], PatchrKeysData[3304], PatchrKeysData[1974], PatchrKeysData[4974], PatchrKeysData[5403], PatchrKeysData[2693], PatchrKeysData[329], PatchrKeysData[5648], PatchrKeysData[636], PatchrKeysData[4417], PatchrKeysData[3010], PatchrKeysData[5], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[756], PatchrKeysData[3788], PatchrKeysData[3021], PatchrKeysData[4337], PatchrKeysData[3750], PatchrKeysData[2897], PatchrKeysData[1880], PatchrKeysData[1343], PatchrKeysData[3491], PatchrKeysData[3474], PatchrKeysData[1661], PatchrKeysData[482], PatchrKeysData[5938], PatchrKeysData[5929], PatchrKeysData[1719], PatchrKeysData[4836], PatchrKeysData[4999], PatchrKeysData[3268], PatchrKeysData[4083], PatchrKeysData[2548], PatchrKeysData[2221], PatchrKeysData[2963], PatchrKeysData[1143], PatchrKeysData[5290], PatchrKeysData[2197], PatchrKeysData[2532], PatchrKeysData[4791], PatchrKeysData[4181], PatchrKeysData[753], PatchrKeysData[2497], PatchrKeysData[4692], PatchrKeysData[5866], PatchrKeysData[5304], PatchrKeysData[5415], PatchrKeysData[3973], PatchrKeysData[4569], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[4698], PatchrKeysData[4126], PatchrKeysData[5689], PatchrKeysData[2989], PatchrKeysData[750], PatchrKeysData[5204], PatchrKeysData[4837], PatchrKeysData[1553], PatchrKeysData[3014], PatchrKeysData[2619], PatchrKeysData[4153], PatchrKeysData[3716], PatchrKeysData[801], PatchrKeysData[1857], PatchrKeysData[4681], PatchrKeysData[2829], PatchrKeysData[5724], PatchrKeysData[3525], PatchrKeysData[1134], PatchrKeysData[3620], PatchrKeysData[954], PatchrKeysData[5711], PatchrKeysData[5371], PatchrKeysData[5278], PatchrKeysData[2907], PatchrKeysData[3468], PatchrKeysData[875], PatchrKeysData[1253], PatchrKeysData[4743], PatchrKeysData[3898], PatchrKeysData[4351], PatchrKeysData[2965], PatchrKeysData[1524], PatchrKeysData[5677], PatchrKeysData[5852], PatchrKeysData[3190], PatchrKeysData[2006], PatchrKeysData[5320], PatchrKeysData[5387], PatchrKeysData[1048], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[1317], PatchrKeysData[3520], PatchrKeysData[1202], PatchrKeysData[4331], PatchrKeysData[4888], PatchrKeysData[2452], PatchrKeysData[2587], PatchrKeysData[1530], PatchrKeysData[5306], PatchrKeysData[42], PatchrKeysData[2493], PatchrKeysData[33], PatchrKeysData[4123], PatchrKeysData[4934], PatchrKeysData[2739], PatchrKeysData[3642], PatchrKeysData[4400], PatchrKeysData[5173], PatchrKeysData[2994], PatchrKeysData[3345], PatchrKeysData[5391], PatchrKeysData[2337], PatchrKeysData[1933], PatchrKeysData[5780], PatchrKeysData[1840], PatchrKeysData[4908], PatchrKeysData[1283], PatchrKeysData[1577], PatchrKeysData[735], PatchrKeysData[4584], PatchrKeysData[968], PatchrKeysData[5584], PatchrKeysData[4863], PatchrKeysData[3928], PatchrKeysData[1544], PatchrKeysData[3873], PatchrKeysData[5036], PatchrKeysData[278], PatchrKeysData[2528], PatchrKeysData[925], PatchrKeysData[26], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1834], PatchrKeysData[5605], PatchrKeysData[74], PatchrKeysData[4146], PatchrKeysData[3435], PatchrKeysData[5885], PatchrKeysData[615], PatchrKeysData[3154], PatchrKeysData[3479], PatchrKeysData[30], PatchrKeysData[5470], PatchrKeysData[347], PatchrKeysData[2997], PatchrKeysData[5906], PatchrKeysData[3768], PatchrKeysData[5452], PatchrKeysData[373], PatchrKeysData[5164], PatchrKeysData[5280], PatchrKeysData[32], PatchrKeysData[4990], PatchrKeysData[2366], PatchrKeysData[1575], PatchrKeysData[75], PatchrKeysData[5752], PatchrKeysData[238], PatchrKeysData[1265], PatchrKeysData[2383], PatchrKeysData[1533], PatchrKeysData[2808], PatchrKeysData[3555], PatchrKeysData[3923], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6038] = "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_4RIxLcCvPpkBI4WDvSRD5VWlXtYhFV5Ai2yONxwCk2pLvr4ub4l23SeMSsA5q7F+lKd79nHZ2awIiQQoHbgKRcZa3/DcZSYrZNxpxtmnkNaJW0E9RwJ0LStcnGJWSt/T8M/4VqxdHmwKRSUH/3YeR/+jM1hXXFp8BCsRRqmWaMyn7KlvaRHgwJjVyDc6neWrfSD4StH/ZLf6moKYjjkVT8PDce4FfJoFhND54LNKl1v5LbL2wYGlyufKBRdvsCPaUp0kkWgV/wQQFYmBflTXUmfa1tAoLW1UgOmZxDQ4aDdgHa49sfqhRQ/pdu0ba+7S15TaBvbdzB69qCwnJdQsOYYQz2TF8eCVvcSiWaodbQLb+Y+Q+WLFB7DpRI+uEI/socSLcSD9PSq5UmmLAi7MD41jreAUQsM2IxadML999gOwNu06hNBM1C7EkUuObeijfONJFrkj8c79kDM3du0dBo/RWtzsR9fzvE5gls6GaqjMDKogxIwVwe4icYmtXpKFsbo4Jpkw1zKFlLXOLymlKjGYUEBHD7laZuxdmIN6jrGDljhQRwq9fkmIorM9kaWD24zFqshm9mJ22EgCxPNjYzkGo1fI9JODHQ1cXdY+hsCy75K07IUDKPHk3kxvnFze5Hf9GwMpKL4Y+UhFVa6BcjbAkr56HtB/BrhOr/4dn0qmf6qZey3ODt37LJCvSfmGKSOuhzn/DEaQ/3DVXK76MvqDcDBIJsORzux3aea0gmxyU7ZUDMesiKK6eN5eoJdzKNdWeLcYFfB+aA1gvanzpex+cjt3kjvxjtY/x+PaLYjiDQ2wAks+0ROFrIYD6nEUaYT2EsFSouGfs5l8LoPS6t29TGJlk4QQLav7bfV/Ul2hdThjSRuCm+YJlRl8vTysC+C1DLrt7LSGfc9lp6woaesx4tz/pSPB98kaKqZP2QVpwNdDlpxG43VLWXPpHj-xPYAF71K3OufJ2p_0ojpTV0Q4ak6+xeQOTT1r5RWFo5+SNrniXvZjuveJydrNRGpDYxYnjKeBiEgm7JrEAOWTKMlCyDX9d6wPshKiwmwnzuMORkV3HOzLwaUQC8y0l6GWA+8PYSL/i9jID2BXn+3DR7a5AB0vxN9DbpgOPnw6Moj0pPNuNr5sd8lNIel1UIZNqVR6R+QeHVnXp2MTDZmBl0ZZ2taanXbnu1TEvYRu8T2wHxHEfUc8G8rffb6uv96f49rWA26PwtiCSgt7Auk8bd2USftxRJ2w+194kj8r8WrL16lZ5h4xQ+9T1cYdVx4VmiZgUp6z1UXcPR08/l6YQMf67T2gcMf/Zd4vdvo94DR3mrcMG2UuoAICoMukmyG0lgfKqqhkgXMPZNoulnnHnX7FpY/HudGUNQbtGPFNxEoZSn9O9+biHuYVu4BrxOiVq9677KBe8S1P00qQKQfrhP6jkwtf7ILJOJNDMAB63IfbmIbghQr8skTxBCIgIhL6QWZVSCsxWbJxWs+m5TmvCcGriGF0sRpOQAmixaXDZ4oP63YpAbp0xgNkt7tafw4A5utd36cExCquV5Wr+0vm8FX2dhRDRhBg9f/dib1nCBP/4527S1atjgdjxhp/8-dMMVvmzId1NNc4LHA6R5D9awF6zEz8C/UasjOv7zz/90QKzEcNy9PgM5wlh6W2J+YE5+D/Y3FU/KLU/rG7V6fQ8do/xb7CAw+jRF5Svw==\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
