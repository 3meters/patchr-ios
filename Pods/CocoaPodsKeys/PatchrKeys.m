//
// Generated by CocoaPods-Keys
// on 01/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5590], PatchrKeysData[837], PatchrKeysData[4290], PatchrKeysData[4279], PatchrKeysData[4080], PatchrKeysData[6669], PatchrKeysData[6943], PatchrKeysData[434], PatchrKeysData[5714], PatchrKeysData[2741], PatchrKeysData[1110], PatchrKeysData[5360], PatchrKeysData[6728], PatchrKeysData[1496], PatchrKeysData[2500], PatchrKeysData[5928], PatchrKeysData[7257], PatchrKeysData[5326], PatchrKeysData[1844], PatchrKeysData[8020], PatchrKeysData[4872], PatchrKeysData[2625], PatchrKeysData[3432], PatchrKeysData[3890], PatchrKeysData[143], PatchrKeysData[1591], PatchrKeysData[242], PatchrKeysData[8228], PatchrKeysData[7061], PatchrKeysData[1954], PatchrKeysData[2215], PatchrKeysData[2730], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[7562], PatchrKeysData[8159], PatchrKeysData[1921], PatchrKeysData[2193], PatchrKeysData[8224], PatchrKeysData[7882], PatchrKeysData[4907], PatchrKeysData[4951], PatchrKeysData[7195], PatchrKeysData[8333], PatchrKeysData[4674], PatchrKeysData[2732], PatchrKeysData[4135], PatchrKeysData[17], PatchrKeysData[3400], PatchrKeysData[4324], PatchrKeysData[5973], PatchrKeysData[4632], PatchrKeysData[366], PatchrKeysData[3486], PatchrKeysData[6033], PatchrKeysData[5200], PatchrKeysData[6447], PatchrKeysData[6285], PatchrKeysData[4733], PatchrKeysData[6342], PatchrKeysData[5799], PatchrKeysData[4793], PatchrKeysData[2395], PatchrKeysData[6531], PatchrKeysData[7646], PatchrKeysData[2216], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2739], PatchrKeysData[2460], PatchrKeysData[6826], PatchrKeysData[2705], PatchrKeysData[1428], PatchrKeysData[4347], PatchrKeysData[4299], PatchrKeysData[5140], PatchrKeysData[596], PatchrKeysData[700], PatchrKeysData[4817], PatchrKeysData[22], PatchrKeysData[3542], PatchrKeysData[2755], PatchrKeysData[5327], PatchrKeysData[1348], PatchrKeysData[6400], PatchrKeysData[4372], PatchrKeysData[3501], PatchrKeysData[7073], PatchrKeysData[4704], PatchrKeysData[6920], PatchrKeysData[7905], PatchrKeysData[477], PatchrKeysData[7998], PatchrKeysData[2381], PatchrKeysData[3571], PatchrKeysData[3726], PatchrKeysData[3172], PatchrKeysData[1280], PatchrKeysData[3424], PatchrKeysData[142], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[7187], PatchrKeysData[5937], PatchrKeysData[2643], PatchrKeysData[2582], PatchrKeysData[5601], PatchrKeysData[5911], PatchrKeysData[3952], PatchrKeysData[3550], PatchrKeysData[1778], PatchrKeysData[4652], PatchrKeysData[1688], PatchrKeysData[4709], PatchrKeysData[7598], PatchrKeysData[751], PatchrKeysData[6176], PatchrKeysData[4150], PatchrKeysData[7503], PatchrKeysData[1383], PatchrKeysData[330], PatchrKeysData[4431], PatchrKeysData[1899], PatchrKeysData[6741], PatchrKeysData[6204], PatchrKeysData[7718], PatchrKeysData[448], PatchrKeysData[744], PatchrKeysData[6079], PatchrKeysData[7707], PatchrKeysData[7576], PatchrKeysData[4980], PatchrKeysData[7704], PatchrKeysData[5555], PatchrKeysData[8323], PatchrKeysData[311], PatchrKeysData[7746], PatchrKeysData[4788], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[5165], PatchrKeysData[6972], PatchrKeysData[324], PatchrKeysData[6055], PatchrKeysData[7934], PatchrKeysData[3151], PatchrKeysData[4269], PatchrKeysData[7933], PatchrKeysData[8223], PatchrKeysData[4624], PatchrKeysData[5397], PatchrKeysData[3216], PatchrKeysData[97], PatchrKeysData[5828], PatchrKeysData[3951], PatchrKeysData[5242], PatchrKeysData[1474], PatchrKeysData[491], PatchrKeysData[2530], PatchrKeysData[6221], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7833], PatchrKeysData[7069], PatchrKeysData[3294], PatchrKeysData[1727], PatchrKeysData[6875], PatchrKeysData[3335], PatchrKeysData[3767], PatchrKeysData[7306], PatchrKeysData[6309], PatchrKeysData[1389], PatchrKeysData[7926], PatchrKeysData[4778], PatchrKeysData[2650], PatchrKeysData[2559], PatchrKeysData[5664], PatchrKeysData[3476], PatchrKeysData[4171], PatchrKeysData[1735], PatchrKeysData[8210], PatchrKeysData[4987], PatchrKeysData[7802], PatchrKeysData[7239], PatchrKeysData[7091], PatchrKeysData[7666], PatchrKeysData[1627], PatchrKeysData[1401], PatchrKeysData[2109], PatchrKeysData[4047], PatchrKeysData[1917], PatchrKeysData[7566], PatchrKeysData[6886], PatchrKeysData[7368], PatchrKeysData[3497], PatchrKeysData[7227], PatchrKeysData[7363], PatchrKeysData[3281], PatchrKeysData[7072], PatchrKeysData[6372], PatchrKeysData[5958], PatchrKeysData[8414], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[6061], PatchrKeysData[7271], PatchrKeysData[6810], PatchrKeysData[1841], PatchrKeysData[7908], PatchrKeysData[7804], PatchrKeysData[1178], PatchrKeysData[6900], PatchrKeysData[5061], PatchrKeysData[1658], PatchrKeysData[5325], PatchrKeysData[336], PatchrKeysData[8153], PatchrKeysData[406], PatchrKeysData[5039], PatchrKeysData[7367], PatchrKeysData[7693], PatchrKeysData[3859], PatchrKeysData[4586], PatchrKeysData[6726], PatchrKeysData[5558], PatchrKeysData[6104], PatchrKeysData[5955], PatchrKeysData[4550], PatchrKeysData[5536], PatchrKeysData[2888], PatchrKeysData[5374], PatchrKeysData[2364], PatchrKeysData[7967], PatchrKeysData[2886], PatchrKeysData[5643], PatchrKeysData[7407], PatchrKeysData[7226], PatchrKeysData[6565], PatchrKeysData[1565], PatchrKeysData[7553], PatchrKeysData[8350], PatchrKeysData[4851], PatchrKeysData[4197], PatchrKeysData[7547], PatchrKeysData[515], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[1254], PatchrKeysData[7608], PatchrKeysData[188], PatchrKeysData[671], PatchrKeysData[6879], PatchrKeysData[860], PatchrKeysData[2483], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[3900], PatchrKeysData[3915], PatchrKeysData[4714], PatchrKeysData[909], PatchrKeysData[1912], PatchrKeysData[278], PatchrKeysData[824], PatchrKeysData[6456], PatchrKeysData[4422], PatchrKeysData[4699], PatchrKeysData[8442], PatchrKeysData[6023], PatchrKeysData[2057], PatchrKeysData[4411], PatchrKeysData[148], PatchrKeysData[204], PatchrKeysData[3881], PatchrKeysData[1007], PatchrKeysData[866], PatchrKeysData[47], PatchrKeysData[4133], PatchrKeysData[4049], PatchrKeysData[6715], PatchrKeysData[3271], PatchrKeysData[6935], PatchrKeysData[7626], PatchrKeysData[4302], PatchrKeysData[4035], PatchrKeysData[412], PatchrKeysData[435], PatchrKeysData[1088], PatchrKeysData[3285], PatchrKeysData[1061], PatchrKeysData[8242], PatchrKeysData[2194], PatchrKeysData[7793], PatchrKeysData[5954], PatchrKeysData[3646], PatchrKeysData[5501], PatchrKeysData[2351], PatchrKeysData[4715], PatchrKeysData[5368], PatchrKeysData[8085], PatchrKeysData[7349], PatchrKeysData[6183], PatchrKeysData[4511], PatchrKeysData[2213], PatchrKeysData[8445], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[8450] = "AGq/6ahbEEbDORHq671eyecwFZa7O0up7du/5EVplZ11vpLaz9O8UghuDVH1IdJD8GVKgv25SiH/WuAiuQh4iU+inu1P9z/mL2a23i7im9EHsNkRYCCMriP8L3uUuIPzTAHkYgMnqdNr+Cd3ywMc0ScRmMsIvsfKGfPSrISyG/CHgp+2mmVy2fi1DGXdrbQsxAEQEXNR5lY4|\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
