//
// Generated by CocoaPods-Keys
// on 28/11/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[2792], PatchrKeysData[2570], PatchrKeysData[1229], PatchrKeysData[5800], PatchrKeysData[1142], PatchrKeysData[240], PatchrKeysData[938], PatchrKeysData[4172], PatchrKeysData[5981], PatchrKeysData[1681], PatchrKeysData[8881], PatchrKeysData[4559], PatchrKeysData[478], PatchrKeysData[1949], PatchrKeysData[4579], PatchrKeysData[7570], PatchrKeysData[4529], PatchrKeysData[6064], PatchrKeysData[1041], PatchrKeysData[6633], PatchrKeysData[9869], PatchrKeysData[8589], PatchrKeysData[4817], PatchrKeysData[7902], PatchrKeysData[6350], PatchrKeysData[8493], PatchrKeysData[3811], PatchrKeysData[886], PatchrKeysData[3457], PatchrKeysData[9005], PatchrKeysData[9782], PatchrKeysData[7489], PatchrKeysData[1955], PatchrKeysData[4690], PatchrKeysData[3862], PatchrKeysData[5492], PatchrKeysData[8916], PatchrKeysData[6274], PatchrKeysData[5708], PatchrKeysData[9460], PatchrKeysData[5204], PatchrKeysData[3451], PatchrKeysData[9549], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6897], PatchrKeysData[460], PatchrKeysData[5910], PatchrKeysData[2593], PatchrKeysData[6508], PatchrKeysData[10190], PatchrKeysData[3452], PatchrKeysData[3866], PatchrKeysData[9262], PatchrKeysData[2950], PatchrKeysData[5429], PatchrKeysData[3354], PatchrKeysData[7604], PatchrKeysData[6522], PatchrKeysData[3650], PatchrKeysData[3396], PatchrKeysData[5642], PatchrKeysData[9467], PatchrKeysData[231], PatchrKeysData[5006], PatchrKeysData[2731], PatchrKeysData[7672], PatchrKeysData[8351], PatchrKeysData[9490], PatchrKeysData[9542], PatchrKeysData[3164], PatchrKeysData[7647], PatchrKeysData[4230], PatchrKeysData[6923], PatchrKeysData[4345], PatchrKeysData[3765], PatchrKeysData[1050], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[15], PatchrKeysData[1085], PatchrKeysData[573], PatchrKeysData[9734], PatchrKeysData[9824], PatchrKeysData[9755], PatchrKeysData[7596], PatchrKeysData[9058], PatchrKeysData[5522], PatchrKeysData[2245], PatchrKeysData[1107], PatchrKeysData[6651], PatchrKeysData[1391], PatchrKeysData[2702], PatchrKeysData[844], PatchrKeysData[6881], PatchrKeysData[6735], PatchrKeysData[6366], PatchrKeysData[7732], PatchrKeysData[5872], PatchrKeysData[774], PatchrKeysData[3079], PatchrKeysData[6778], PatchrKeysData[5841], PatchrKeysData[5242], PatchrKeysData[2739], PatchrKeysData[6899], PatchrKeysData[4896], PatchrKeysData[8577], PatchrKeysData[2528], PatchrKeysData[6667], PatchrKeysData[7911], PatchrKeysData[6213], PatchrKeysData[8766], PatchrKeysData[8827], PatchrKeysData[4126], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[7409], PatchrKeysData[6784], PatchrKeysData[4530], PatchrKeysData[2393], PatchrKeysData[9888], PatchrKeysData[7390], PatchrKeysData[7171], PatchrKeysData[4117], PatchrKeysData[3736], PatchrKeysData[2872], PatchrKeysData[1611], PatchrKeysData[8954], PatchrKeysData[9096], PatchrKeysData[8422], PatchrKeysData[3299], PatchrKeysData[805], PatchrKeysData[4365], PatchrKeysData[8504], PatchrKeysData[7703], PatchrKeysData[3828], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[2173], PatchrKeysData[7538], PatchrKeysData[5528], PatchrKeysData[8605], PatchrKeysData[1598], PatchrKeysData[7877], PatchrKeysData[4288], PatchrKeysData[2009], PatchrKeysData[776], PatchrKeysData[3367], PatchrKeysData[6160], PatchrKeysData[4479], PatchrKeysData[2050], PatchrKeysData[6640], PatchrKeysData[9689], PatchrKeysData[2663], PatchrKeysData[7329], PatchrKeysData[6886], PatchrKeysData[4641], PatchrKeysData[188], PatchrKeysData[3046], PatchrKeysData[6117], PatchrKeysData[1446], PatchrKeysData[2959], PatchrKeysData[6823], PatchrKeysData[256], PatchrKeysData[5238], PatchrKeysData[10138], PatchrKeysData[8776], PatchrKeysData[5187], PatchrKeysData[9582], PatchrKeysData[5370], PatchrKeysData[7345], PatchrKeysData[5181], PatchrKeysData[5765], PatchrKeysData[6031], PatchrKeysData[3234], PatchrKeysData[2066], PatchrKeysData[2590], PatchrKeysData[10225], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1655], PatchrKeysData[2740], PatchrKeysData[1449], PatchrKeysData[386], PatchrKeysData[6666], PatchrKeysData[8207], PatchrKeysData[5102], PatchrKeysData[593], PatchrKeysData[3643], PatchrKeysData[5747], PatchrKeysData[4738], PatchrKeysData[5130], PatchrKeysData[4381], PatchrKeysData[8434], PatchrKeysData[11], PatchrKeysData[9667], PatchrKeysData[10295], PatchrKeysData[8647], PatchrKeysData[1495], PatchrKeysData[4412], PatchrKeysData[6771], PatchrKeysData[961], PatchrKeysData[3739], PatchrKeysData[7035], PatchrKeysData[6358], PatchrKeysData[9183], PatchrKeysData[1503], PatchrKeysData[3204], PatchrKeysData[3738], PatchrKeysData[2377], PatchrKeysData[8298], PatchrKeysData[1313], PatchrKeysData[2657], PatchrKeysData[9539], PatchrKeysData[6193], PatchrKeysData[3351], PatchrKeysData[8724], PatchrKeysData[6833], PatchrKeysData[1897], PatchrKeysData[3620], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7827], PatchrKeysData[9022], PatchrKeysData[9389], PatchrKeysData[4019], PatchrKeysData[3328], PatchrKeysData[1469], PatchrKeysData[4758], PatchrKeysData[8823], PatchrKeysData[5514], PatchrKeysData[8283], PatchrKeysData[5087], PatchrKeysData[3572], PatchrKeysData[31], PatchrKeysData[1717], PatchrKeysData[5239], PatchrKeysData[10279], PatchrKeysData[7308], PatchrKeysData[5049], PatchrKeysData[1123], PatchrKeysData[2669], PatchrKeysData[5146], PatchrKeysData[5861], PatchrKeysData[5526], PatchrKeysData[6119], PatchrKeysData[2565], PatchrKeysData[5094], PatchrKeysData[782], PatchrKeysData[2115], PatchrKeysData[4476], PatchrKeysData[1373], PatchrKeysData[9775], PatchrKeysData[1152], PatchrKeysData[1903], PatchrKeysData[4309], PatchrKeysData[2768], PatchrKeysData[3216], PatchrKeysData[8936], PatchrKeysData[4237], PatchrKeysData[8010], PatchrKeysData[10042], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6941], PatchrKeysData[468], PatchrKeysData[1087], PatchrKeysData[6547], PatchrKeysData[4407], PatchrKeysData[7397], PatchrKeysData[9432], PatchrKeysData[3019], PatchrKeysData[2188], PatchrKeysData[6003], PatchrKeysData[7756], PatchrKeysData[5125], PatchrKeysData[9520], PatchrKeysData[3767], PatchrKeysData[1782], PatchrKeysData[1875], PatchrKeysData[9020], PatchrKeysData[2857], PatchrKeysData[10164], PatchrKeysData[3995], PatchrKeysData[4229], PatchrKeysData[3210], PatchrKeysData[2642], PatchrKeysData[3054], PatchrKeysData[8879], PatchrKeysData[4151], PatchrKeysData[5737], PatchrKeysData[2333], PatchrKeysData[157], PatchrKeysData[5740], PatchrKeysData[1378], PatchrKeysData[2798], PatchrKeysData[7671], PatchrKeysData[5490], PatchrKeysData[3516], PatchrKeysData[6583], PatchrKeysData[2577], PatchrKeysData[3097], PatchrKeysData[7246], PatchrKeysData[5046], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[651], PatchrKeysData[7017], PatchrKeysData[2826], PatchrKeysData[5913], PatchrKeysData[481], PatchrKeysData[758], PatchrKeysData[5880], PatchrKeysData[2362], PatchrKeysData[724], PatchrKeysData[2912], PatchrKeysData[5468], PatchrKeysData[8397], PatchrKeysData[4638], PatchrKeysData[993], PatchrKeysData[3826], PatchrKeysData[1397], PatchrKeysData[7929], PatchrKeysData[9872], PatchrKeysData[4348], PatchrKeysData[7091], PatchrKeysData[5741], PatchrKeysData[7744], PatchrKeysData[5047], PatchrKeysData[1583], PatchrKeysData[8471], PatchrKeysData[1767], PatchrKeysData[1840], PatchrKeysData[5214], PatchrKeysData[80], PatchrKeysData[10262], PatchrKeysData[741], PatchrKeysData[462], PatchrKeysData[5643], PatchrKeysData[2158], PatchrKeysData[8909], PatchrKeysData[1762], PatchrKeysData[2087], PatchrKeysData[1067], PatchrKeysData[10277], PatchrKeysData[4251], PatchrKeysData[3130], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[3036], PatchrKeysData[7843], PatchrKeysData[3838], PatchrKeysData[4179], PatchrKeysData[9792], PatchrKeysData[6834], PatchrKeysData[10202], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[10398] = "3HoBn0RFEkuld7ge+WSN++bNiMbhgS7xnjqgGDiqNSFXJY1EZsCicMFsZdGhnXZ2l1/o9pg9Iq8YWFbDVznLmfxBWRHpk+tKxK4jXdx/cEhswZ/FlgFCSe7wQDAou0Rr2NfLBYvMAyx+3wKBzsqXMg8Pfed0deZSgTSMB/zzCsOzP6PPGhCdEhXquBnhWngoVAtf5rMoSDa4nLoFwie/mVQawBmPZfCSbB39L0/7mLINdnx2p5+ElJ9RvVLmF+LmvxzWRzdP2gNWiiU+bPGSAk1w7cEYze5DiYT2lzVNDE+KWOrcbOybMaiYEU3E/v4OMbkJTpdr030IsmA3L/Nny8z0Vs8EAQ7QCxtGPzMXMStI5GtA+aI/8Gxl8zEoUJHlP+ZwF6C4XngGge3HpJgn8d7q57J2g4RBMbZR5ZlHUtgVz/WACbZf2kHrH8jsUS5aZGPq7h4mcJBs2jk7IadjfMsCyQQvdgcCclA+W083dmIxwNYqw5bFbRhKWuiuvzmsZbIDq6pvHiIydxa/pNXdglnLSafsqtc2zdDdc8DBSAWnn+ZUS49sTFeKF4YcycIis37Id2Zs5NV7ODy7yXRAnWqGkkpTCbwPBrn+E77cgdl5HH5CFkWatbScT0Uf5XqiFEVrpYyE54TkhdeVTyeMb6/Bs4wXcxnT7EU9M2nDVIjuQ+TBIQ6CshNieSspamkl+Eh2V3gdI/FDw/Nx209K_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_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\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
