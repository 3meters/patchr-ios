//
// Generated by CocoaPods-Keys
// on 31/07/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[6414], PatchrKeysData[8441], PatchrKeysData[3464], PatchrKeysData[56], PatchrKeysData[10216], PatchrKeysData[1185], PatchrKeysData[8852], PatchrKeysData[1281], PatchrKeysData[6056], PatchrKeysData[6788], PatchrKeysData[1259], PatchrKeysData[6243], PatchrKeysData[1188], PatchrKeysData[606], PatchrKeysData[4485], PatchrKeysData[5802], PatchrKeysData[6367], PatchrKeysData[4069], PatchrKeysData[10121], PatchrKeysData[9139], PatchrKeysData[7717], PatchrKeysData[6993], PatchrKeysData[3843], PatchrKeysData[2973], PatchrKeysData[3408], PatchrKeysData[2439], PatchrKeysData[7536], PatchrKeysData[10453], PatchrKeysData[3416], PatchrKeysData[310], PatchrKeysData[1867], PatchrKeysData[2673], PatchrKeysData[10008], PatchrKeysData[8931], PatchrKeysData[6830], PatchrKeysData[5625], PatchrKeysData[1512], PatchrKeysData[6560], PatchrKeysData[3812], PatchrKeysData[1618], PatchrKeysData[10083], PatchrKeysData[10610], PatchrKeysData[882], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4818], PatchrKeysData[4612], PatchrKeysData[7566], PatchrKeysData[4166], PatchrKeysData[1200], PatchrKeysData[7911], PatchrKeysData[10787], PatchrKeysData[3532], PatchrKeysData[4367], PatchrKeysData[6633], PatchrKeysData[8019], PatchrKeysData[5486], PatchrKeysData[136], PatchrKeysData[8914], PatchrKeysData[8839], PatchrKeysData[9639], PatchrKeysData[5988], PatchrKeysData[822], PatchrKeysData[3179], PatchrKeysData[6255], PatchrKeysData[3198], PatchrKeysData[1167], PatchrKeysData[10953], PatchrKeysData[1431], PatchrKeysData[4593], PatchrKeysData[1370], PatchrKeysData[5343], PatchrKeysData[7097], PatchrKeysData[7315], PatchrKeysData[10700], PatchrKeysData[2556], PatchrKeysData[7031], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[1501], PatchrKeysData[4697], PatchrKeysData[2990], PatchrKeysData[8507], PatchrKeysData[5443], PatchrKeysData[10454], PatchrKeysData[10710], PatchrKeysData[6505], PatchrKeysData[6232], PatchrKeysData[6714], PatchrKeysData[8404], PatchrKeysData[3757], PatchrKeysData[1374], PatchrKeysData[8729], PatchrKeysData[2381], PatchrKeysData[8103], PatchrKeysData[6876], PatchrKeysData[3895], PatchrKeysData[4299], PatchrKeysData[8717], PatchrKeysData[3748], PatchrKeysData[2819], PatchrKeysData[1545], PatchrKeysData[9100], PatchrKeysData[6401], PatchrKeysData[3762], PatchrKeysData[7750], PatchrKeysData[7530], PatchrKeysData[8358], PatchrKeysData[3620], PatchrKeysData[10942], PatchrKeysData[9438], PatchrKeysData[1926], PatchrKeysData[3925], PatchrKeysData[1786], PatchrKeysData[616], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[2003], PatchrKeysData[3424], PatchrKeysData[5743], PatchrKeysData[4255], PatchrKeysData[8509], PatchrKeysData[9663], PatchrKeysData[2053], PatchrKeysData[1037], PatchrKeysData[1168], PatchrKeysData[6080], PatchrKeysData[6587], PatchrKeysData[5597], PatchrKeysData[6789], PatchrKeysData[8898], PatchrKeysData[8497], PatchrKeysData[7213], PatchrKeysData[445], PatchrKeysData[2265], PatchrKeysData[5283], PatchrKeysData[4362], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[5868], PatchrKeysData[339], PatchrKeysData[3913], PatchrKeysData[6223], PatchrKeysData[6664], PatchrKeysData[8510], PatchrKeysData[220], PatchrKeysData[10171], PatchrKeysData[705], PatchrKeysData[10777], PatchrKeysData[7100], PatchrKeysData[1850], PatchrKeysData[3917], PatchrKeysData[1515], PatchrKeysData[4231], PatchrKeysData[10801], PatchrKeysData[3755], PatchrKeysData[8636], PatchrKeysData[8503], PatchrKeysData[1065], PatchrKeysData[4314], PatchrKeysData[683], PatchrKeysData[6043], PatchrKeysData[292], PatchrKeysData[3944], PatchrKeysData[9660], PatchrKeysData[2350], PatchrKeysData[2520], PatchrKeysData[6742], PatchrKeysData[7094], PatchrKeysData[4726], PatchrKeysData[2627], PatchrKeysData[116], PatchrKeysData[3952], PatchrKeysData[3936], PatchrKeysData[4476], PatchrKeysData[296], PatchrKeysData[4907], PatchrKeysData[2128], PatchrKeysData[10434], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[10551], PatchrKeysData[6476], PatchrKeysData[8118], PatchrKeysData[1225], PatchrKeysData[2420], PatchrKeysData[1835], PatchrKeysData[5322], PatchrKeysData[6186], PatchrKeysData[2965], PatchrKeysData[5112], PatchrKeysData[4329], PatchrKeysData[5232], PatchrKeysData[10126], PatchrKeysData[8646], PatchrKeysData[9852], PatchrKeysData[1838], PatchrKeysData[6626], PatchrKeysData[6798], PatchrKeysData[2684], PatchrKeysData[1601], PatchrKeysData[8582], PatchrKeysData[4052], PatchrKeysData[7392], PatchrKeysData[6501], PatchrKeysData[2699], PatchrKeysData[10319], PatchrKeysData[6764], PatchrKeysData[9684], PatchrKeysData[2499], PatchrKeysData[8420], PatchrKeysData[2012], PatchrKeysData[10184], PatchrKeysData[3499], PatchrKeysData[8518], PatchrKeysData[3897], PatchrKeysData[7968], PatchrKeysData[249], PatchrKeysData[6718], PatchrKeysData[6009], PatchrKeysData[370], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[10841], PatchrKeysData[8989], PatchrKeysData[7489], PatchrKeysData[8654], PatchrKeysData[1504], PatchrKeysData[8162], PatchrKeysData[1671], PatchrKeysData[10865], PatchrKeysData[8880], PatchrKeysData[3193], PatchrKeysData[3823], PatchrKeysData[7557], PatchrKeysData[3339], PatchrKeysData[2345], PatchrKeysData[2247], PatchrKeysData[6196], PatchrKeysData[240], PatchrKeysData[5270], PatchrKeysData[10354], PatchrKeysData[2908], PatchrKeysData[5767], PatchrKeysData[8737], PatchrKeysData[7899], PatchrKeysData[137], PatchrKeysData[3103], PatchrKeysData[3581], PatchrKeysData[308], PatchrKeysData[3360], PatchrKeysData[10789], PatchrKeysData[45], PatchrKeysData[719], PatchrKeysData[7691], PatchrKeysData[8771], PatchrKeysData[1875], PatchrKeysData[9612], PatchrKeysData[1483], PatchrKeysData[6533], PatchrKeysData[8744], PatchrKeysData[3842], PatchrKeysData[7500], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3875], PatchrKeysData[8734], PatchrKeysData[8131], PatchrKeysData[10461], PatchrKeysData[8710], PatchrKeysData[8253], PatchrKeysData[9763], PatchrKeysData[6557], PatchrKeysData[7147], PatchrKeysData[744], PatchrKeysData[3480], PatchrKeysData[8014], PatchrKeysData[7088], PatchrKeysData[7068], PatchrKeysData[9099], PatchrKeysData[868], PatchrKeysData[8620], PatchrKeysData[1734], PatchrKeysData[7064], PatchrKeysData[770], PatchrKeysData[3381], PatchrKeysData[4624], PatchrKeysData[355], PatchrKeysData[1634], PatchrKeysData[848], PatchrKeysData[5393], PatchrKeysData[2599], PatchrKeysData[6382], PatchrKeysData[4528], PatchrKeysData[3927], PatchrKeysData[9292], PatchrKeysData[9364], PatchrKeysData[4761], PatchrKeysData[1348], PatchrKeysData[7225], PatchrKeysData[674], PatchrKeysData[7163], PatchrKeysData[5799], PatchrKeysData[7481], PatchrKeysData[381], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[8020], PatchrKeysData[526], PatchrKeysData[8009], PatchrKeysData[5482], PatchrKeysData[9320], PatchrKeysData[9102], PatchrKeysData[9046], PatchrKeysData[3903], PatchrKeysData[4971], PatchrKeysData[3866], PatchrKeysData[1883], PatchrKeysData[7150], PatchrKeysData[6099], PatchrKeysData[1928], PatchrKeysData[3624], PatchrKeysData[1582], PatchrKeysData[10031], PatchrKeysData[3813], PatchrKeysData[2642], PatchrKeysData[1320], PatchrKeysData[1763], PatchrKeysData[1120], PatchrKeysData[6331], PatchrKeysData[1350], PatchrKeysData[4154], PatchrKeysData[342], PatchrKeysData[10717], PatchrKeysData[2137], PatchrKeysData[8891], PatchrKeysData[8684], PatchrKeysData[2006], PatchrKeysData[2999], PatchrKeysData[3994], PatchrKeysData[3102], PatchrKeysData[2322], PatchrKeysData[2738], PatchrKeysData[2430], PatchrKeysData[10988], PatchrKeysData[10536], PatchrKeysData[3327], PatchrKeysData[11], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[11070] = "\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
