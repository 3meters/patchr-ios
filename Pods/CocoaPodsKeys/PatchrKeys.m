//
// Generated by CocoaPods-Keys
// on 02/04/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1035], PatchrKeysData[3522], PatchrKeysData[4737], PatchrKeysData[6808], PatchrKeysData[1025], PatchrKeysData[333], PatchrKeysData[1649], PatchrKeysData[3653], PatchrKeysData[2407], PatchrKeysData[5416], PatchrKeysData[6168], PatchrKeysData[4394], PatchrKeysData[1975], PatchrKeysData[3534], PatchrKeysData[94], PatchrKeysData[3193], PatchrKeysData[2039], PatchrKeysData[260], PatchrKeysData[4514], PatchrKeysData[5438], PatchrKeysData[4267], PatchrKeysData[2696], PatchrKeysData[1761], PatchrKeysData[2032], PatchrKeysData[1808], PatchrKeysData[3353], PatchrKeysData[3321], PatchrKeysData[3326], PatchrKeysData[3527], PatchrKeysData[1797], PatchrKeysData[2509], PatchrKeysData[19], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1762], PatchrKeysData[836], PatchrKeysData[3173], PatchrKeysData[2921], PatchrKeysData[6273], PatchrKeysData[4238], PatchrKeysData[2990], PatchrKeysData[2374], PatchrKeysData[4840], PatchrKeysData[833], PatchrKeysData[6442], PatchrKeysData[2515], PatchrKeysData[1447], PatchrKeysData[3798], PatchrKeysData[2211], PatchrKeysData[5923], PatchrKeysData[5022], PatchrKeysData[5231], PatchrKeysData[1408], PatchrKeysData[854], PatchrKeysData[5774], PatchrKeysData[2731], PatchrKeysData[5615], PatchrKeysData[701], PatchrKeysData[915], PatchrKeysData[3295], PatchrKeysData[3333], PatchrKeysData[4544], PatchrKeysData[6769], PatchrKeysData[773], PatchrKeysData[2257], PatchrKeysData[1660], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[4471], PatchrKeysData[4012], PatchrKeysData[5236], PatchrKeysData[4752], PatchrKeysData[3995], PatchrKeysData[3894], PatchrKeysData[3974], PatchrKeysData[4618], PatchrKeysData[4273], PatchrKeysData[4225], PatchrKeysData[4632], PatchrKeysData[2308], PatchrKeysData[2199], PatchrKeysData[781], PatchrKeysData[5118], PatchrKeysData[3785], PatchrKeysData[6523], PatchrKeysData[6824], PatchrKeysData[3147], PatchrKeysData[4996], PatchrKeysData[4846], PatchrKeysData[2618], PatchrKeysData[1480], PatchrKeysData[2167], PatchrKeysData[100], PatchrKeysData[1773], PatchrKeysData[2868], PatchrKeysData[4526], PatchrKeysData[2137], PatchrKeysData[4821], PatchrKeysData[1826], PatchrKeysData[214], PatchrKeysData[6323], PatchrKeysData[2115], PatchrKeysData[3577], PatchrKeysData[4739], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[5466], PatchrKeysData[3947], PatchrKeysData[1863], PatchrKeysData[526], PatchrKeysData[6495], PatchrKeysData[3389], PatchrKeysData[3998], PatchrKeysData[1922], PatchrKeysData[6100], PatchrKeysData[4968], PatchrKeysData[255], PatchrKeysData[5582], PatchrKeysData[4760], PatchrKeysData[930], PatchrKeysData[6925], PatchrKeysData[3885], PatchrKeysData[783], PatchrKeysData[6498], PatchrKeysData[3563], PatchrKeysData[2406], PatchrKeysData[4663], PatchrKeysData[4254], PatchrKeysData[3453], PatchrKeysData[3374], PatchrKeysData[6208], PatchrKeysData[5008], PatchrKeysData[6458], PatchrKeysData[528], PatchrKeysData[3248], PatchrKeysData[3505], PatchrKeysData[2484], PatchrKeysData[5985], PatchrKeysData[4964], PatchrKeysData[6044], PatchrKeysData[133], PatchrKeysData[2699], PatchrKeysData[2504], PatchrKeysData[1198], PatchrKeysData[4558], PatchrKeysData[2859], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4247], PatchrKeysData[1291], PatchrKeysData[2899], PatchrKeysData[2307], PatchrKeysData[83], PatchrKeysData[6412], PatchrKeysData[6513], PatchrKeysData[4842], PatchrKeysData[37], PatchrKeysData[4570], PatchrKeysData[5469], PatchrKeysData[1191], PatchrKeysData[1674], PatchrKeysData[6248], PatchrKeysData[4361], PatchrKeysData[1907], PatchrKeysData[5426], PatchrKeysData[6976], PatchrKeysData[2070], PatchrKeysData[4571], PatchrKeysData[6841], PatchrKeysData[3607], PatchrKeysData[4800], PatchrKeysData[4826], PatchrKeysData[4258], PatchrKeysData[6570], PatchrKeysData[1166], PatchrKeysData[4276], PatchrKeysData[932], PatchrKeysData[4782], PatchrKeysData[6360], PatchrKeysData[2913], PatchrKeysData[3470], PatchrKeysData[1117], PatchrKeysData[3940], PatchrKeysData[1235], PatchrKeysData[6511], PatchrKeysData[6286], PatchrKeysData[533], PatchrKeysData[4527], PatchrKeysData[6960], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[7002] = "6m18H3Pi91JkqAK4q/J1PJNNwXtOp4atZ1Sbu_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_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
