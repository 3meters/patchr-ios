//
// Generated by CocoaPods-Keys
// on 09/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4966], PatchrKeysData[8937], PatchrKeysData[8848], PatchrKeysData[6389], PatchrKeysData[8331], PatchrKeysData[4989], PatchrKeysData[3678], PatchrKeysData[8063], PatchrKeysData[2562], PatchrKeysData[808], PatchrKeysData[6097], PatchrKeysData[4525], PatchrKeysData[5174], PatchrKeysData[23], PatchrKeysData[1386], PatchrKeysData[9506], PatchrKeysData[5219], PatchrKeysData[9318], PatchrKeysData[8397], PatchrKeysData[2281], PatchrKeysData[2124], PatchrKeysData[4082], PatchrKeysData[7562], PatchrKeysData[7291], PatchrKeysData[2974], PatchrKeysData[4375], PatchrKeysData[2727], PatchrKeysData[7920], PatchrKeysData[6932], PatchrKeysData[1066], PatchrKeysData[4214], PatchrKeysData[2093], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1846], PatchrKeysData[4028], PatchrKeysData[6170], PatchrKeysData[4864], PatchrKeysData[9118], PatchrKeysData[8293], PatchrKeysData[3556], PatchrKeysData[3103], PatchrKeysData[4262], PatchrKeysData[1742], PatchrKeysData[1495], PatchrKeysData[8265], PatchrKeysData[2776], PatchrKeysData[2595], PatchrKeysData[2358], PatchrKeysData[9295], PatchrKeysData[2802], PatchrKeysData[884], PatchrKeysData[4747], PatchrKeysData[2501], PatchrKeysData[1629], PatchrKeysData[4307], PatchrKeysData[2104], PatchrKeysData[5045], PatchrKeysData[8568], PatchrKeysData[7280], PatchrKeysData[5466], PatchrKeysData[1466], PatchrKeysData[6026], PatchrKeysData[4437], PatchrKeysData[869], PatchrKeysData[8742], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2376], PatchrKeysData[1703], PatchrKeysData[5670], PatchrKeysData[4112], PatchrKeysData[8713], PatchrKeysData[1684], PatchrKeysData[5398], PatchrKeysData[5813], PatchrKeysData[6278], PatchrKeysData[7009], PatchrKeysData[6642], PatchrKeysData[6119], PatchrKeysData[5612], PatchrKeysData[379], PatchrKeysData[538], PatchrKeysData[3056], PatchrKeysData[4238], PatchrKeysData[2264], PatchrKeysData[3324], PatchrKeysData[7264], PatchrKeysData[7474], PatchrKeysData[4926], PatchrKeysData[3638], PatchrKeysData[5459], PatchrKeysData[4963], PatchrKeysData[4853], PatchrKeysData[2318], PatchrKeysData[8846], PatchrKeysData[6308], PatchrKeysData[3342], PatchrKeysData[2175], PatchrKeysData[442], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[4153], PatchrKeysData[8601], PatchrKeysData[4421], PatchrKeysData[5248], PatchrKeysData[7319], PatchrKeysData[818], PatchrKeysData[3615], PatchrKeysData[4818], PatchrKeysData[2025], PatchrKeysData[7780], PatchrKeysData[9494], PatchrKeysData[5703], PatchrKeysData[3315], PatchrKeysData[4556], PatchrKeysData[7663], PatchrKeysData[2446], PatchrKeysData[4090], PatchrKeysData[8875], PatchrKeysData[1837], PatchrKeysData[7013], PatchrKeysData[7643], PatchrKeysData[1485], PatchrKeysData[4806], PatchrKeysData[7666], PatchrKeysData[1247], PatchrKeysData[6511], PatchrKeysData[9213], PatchrKeysData[2396], PatchrKeysData[8017], PatchrKeysData[5367], PatchrKeysData[2364], PatchrKeysData[3321], PatchrKeysData[2024], PatchrKeysData[909], PatchrKeysData[7511], PatchrKeysData[5653], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[5623], PatchrKeysData[9417], PatchrKeysData[7608], PatchrKeysData[6547], PatchrKeysData[2474], PatchrKeysData[8920], PatchrKeysData[6106], PatchrKeysData[4198], PatchrKeysData[2270], PatchrKeysData[371], PatchrKeysData[4376], PatchrKeysData[3936], PatchrKeysData[3495], PatchrKeysData[5287], PatchrKeysData[5829], PatchrKeysData[439], PatchrKeysData[4233], PatchrKeysData[117], PatchrKeysData[1851], PatchrKeysData[3160], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1504], PatchrKeysData[717], PatchrKeysData[1990], PatchrKeysData[8991], PatchrKeysData[9409], PatchrKeysData[3357], PatchrKeysData[228], PatchrKeysData[6193], PatchrKeysData[8690], PatchrKeysData[3182], PatchrKeysData[6131], PatchrKeysData[446], PatchrKeysData[1350], PatchrKeysData[5688], PatchrKeysData[2063], PatchrKeysData[509], PatchrKeysData[6011], PatchrKeysData[8936], PatchrKeysData[2708], PatchrKeysData[963], PatchrKeysData[4018], PatchrKeysData[1560], PatchrKeysData[8856], PatchrKeysData[7095], PatchrKeysData[929], PatchrKeysData[888], PatchrKeysData[1525], PatchrKeysData[4736], PatchrKeysData[903], PatchrKeysData[1873], PatchrKeysData[324], PatchrKeysData[5593], PatchrKeysData[8198], PatchrKeysData[5516], PatchrKeysData[8581], PatchrKeysData[8156], PatchrKeysData[4650], PatchrKeysData[3386], PatchrKeysData[5770], PatchrKeysData[6916], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[1198], PatchrKeysData[4272], PatchrKeysData[4394], PatchrKeysData[4474], PatchrKeysData[6129], PatchrKeysData[8945], PatchrKeysData[4400], PatchrKeysData[5853], PatchrKeysData[8854], PatchrKeysData[9166], PatchrKeysData[4998], PatchrKeysData[6662], PatchrKeysData[9053], PatchrKeysData[1420], PatchrKeysData[5790], PatchrKeysData[1730], PatchrKeysData[5601], PatchrKeysData[3000], PatchrKeysData[1087], PatchrKeysData[4447], PatchrKeysData[357], PatchrKeysData[5283], PatchrKeysData[3382], PatchrKeysData[8445], PatchrKeysData[3091], PatchrKeysData[1717], PatchrKeysData[890], PatchrKeysData[6708], PatchrKeysData[694], PatchrKeysData[8301], PatchrKeysData[796], PatchrKeysData[1346], PatchrKeysData[3684], PatchrKeysData[8720], PatchrKeysData[8055], PatchrKeysData[1059], PatchrKeysData[6513], PatchrKeysData[8966], PatchrKeysData[6714], PatchrKeysData[1409], PatchrKeysData[1654], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[5629], PatchrKeysData[3916], PatchrKeysData[8963], PatchrKeysData[7842], PatchrKeysData[539], PatchrKeysData[1696], PatchrKeysData[6166], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[447], PatchrKeysData[2078], PatchrKeysData[1940], PatchrKeysData[4101], PatchrKeysData[2955], PatchrKeysData[9216], PatchrKeysData[8072], PatchrKeysData[7216], PatchrKeysData[4283], PatchrKeysData[5328], PatchrKeysData[1168], PatchrKeysData[5218], PatchrKeysData[7304], PatchrKeysData[7348], PatchrKeysData[7188], PatchrKeysData[6559], PatchrKeysData[7869], PatchrKeysData[4651], PatchrKeysData[3041], PatchrKeysData[8929], PatchrKeysData[4427], PatchrKeysData[8129], PatchrKeysData[6993], PatchrKeysData[4212], PatchrKeysData[2684], PatchrKeysData[9390], PatchrKeysData[2638], PatchrKeysData[6868], PatchrKeysData[4982], PatchrKeysData[7583], PatchrKeysData[8533], PatchrKeysData[4266], PatchrKeysData[6116], PatchrKeysData[2243], PatchrKeysData[2200], PatchrKeysData[6055], PatchrKeysData[4211], PatchrKeysData[3988], PatchrKeysData[4014], PatchrKeysData[8667], PatchrKeysData[7022], PatchrKeysData[7622], PatchrKeysData[3260], PatchrKeysData[6009], PatchrKeysData[4220], PatchrKeysData[5939], PatchrKeysData[2397], PatchrKeysData[106], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9602] = "XUF0y+9aO979L5zsAIqgInMdqGqG/rvh+gJsgjH/mdbTNFxWJDNclw3lE3p4hInq4D0XcpwHPaFYyI97P85G245NhUFkHR/O0V4JEI5Lvg1X+HoxRMuPm3u5PFugmuqwB0oxXsm7L4fM+dmTrCpUzWCTH1Yq/cgaRP17Ibj3b5XveGW2wlDsjbGIoderlT117POpFplX0RtHt2Cz9ZVUF7fhq+dAswY+t0u9Y9sX6JhQoR846+GvfyPIAyAqWTN+M6IAFPLGzOtUd/VlozOp3jjizNqRTnSOpzABhrzG5jtaJ+0PMNY17bb0DBVjURY8BeUADz+IVtnUrcL2E4d7hQA2gxBpxwMqKqGAqiC8MCPfiMfMsAvPkmrWOoB9fLB22W8ppjQi0DmFjL8urbN02NZXlIHPQc3X46Uq+H8vgMpzgzemZpmc8kmUTSdOdWP8BmH12wBbjRCqN85pTAWxYiik5DTMB2iQ/DwXPc88WeiVE2xet1Hu8uZ2X8Bq24QXRTmdSC1AyNlO6hDkRaoSv295e14s3CA2dMuReNYcaFGJNySuqMEok992QHutkCudJNGCKZB/bjfqsgrRSG6Uuz0rncaNBG5PsPBOX6fJ1cHZzuZ4q9RmQf5ivF2DrfL+jpKn/BL90fjFoV1ggDIz8fnueSyc8Hip3zArZtuq7mcWgiZ29YGtrAVPyyQ3NN0PtcuOT7tlGVvL7e5LflhRQlQS6GbMOrAtWSfJ8+G5mIsEX/pay7s/IY+7QeZfTIT3MnH31EmTW2huQeTRAnErQCyv7ShzlcyUeBAX4UEVfNpAlkxTMD456HD8noIUEzroCZCKcoCzAm9eDmyLa9G4tNQBX+1q24BBPwizyc4nNHDW4EUsw32z8288v0lJm7tRQCCAMeBUMpk8b07AzWzRFfd/QW9nVNC0lhZgzd7k2Y1sxzb7U4KTG1k+VQMiN0mlUnPWM3pXFQnSQ8uQ8IuLVJ2/DTplRQr63yddkhVMSu8EwvuMcSAReWqCCdbjoRDbW23wYStzX1sY8+RP97OigEoRz0gW9C/CCS7a3GCjf+clUC/XpBLYuDcjWtffNdS6t0FUJP4+bSKlSC5m1hrARZPFVdJ50LxQ0rkxYgU+nSICwBpw6L89mELR2YefWwD7cEbIbdBGT7I/eq894S2knvYt9wDZVRHNK4hZhpUjDD7S6XkyhLCzbnH/qqIZE26HsCGzR5Ytnkr71l2aAjP8O+70mmmdodOc+s8a9HgSfUqqr7dfy7MKasvoJHeaCgNYdT91y//bB6qsp9Xyg0ZRPjyt2K+DbS5rGWF9E9bZvKpCWVqPA06UB5XEn4uwa5Z248kdaqcumABiP34tQGn80Z0e8rHcNAsvVPHjOfQKOU9n+NMXnkIPoEUIXIJNoMR+gcWXPsjIM8HZfgwio9xU6IO0Gp8xaUEO5bROXtNCaUXxr8m3NbTpJhUKu284RiYFCOfUJxMUkcpBabVjFu362Q5c7WuYtnEL+vI7jaQqhpfLPj0bieGyXz59Vc/uemNbiiviZ6ji3QVjz5P8bvw5/nqDtE8XiI/yK31LsKxyL0Bu5+LYhUDm1U5omC6rVw5Vxp/fE7+3ZGI9wNZJLI0HVQnyv+G+HaEQr2ACDlmC9tPM3B1HJAQX1J3OobMg/IIXnunr/pFB5uVYZoAGXd5K3EbEuPpiJrN+s1n57Yn22PJC6/81jP+9n2n7hH/YYR4MH2LIOhHpNG6QuJeb333CflsfElvNhOG1F3wEhvcLXnZUHieKq8Lx2NY9ls8GE5QXi6f/8Q+vFfXNBKhCAhHNw3+wpHJJvFYTsOGo3qqKDyPJe-dVecafSe5FnBMCwstHUBGgvRJB1JJ7Lx62FQ8OnGg0o8ywBCtKL5D6HRqHFwXIM9Tk0jWXs7D92OeFbLp6Ah22dLrRuogbAIn2vEbd4RlfGPgFTN8hwzyuVYVI+ltHs4kTu4U+wx9E46JBmXkSXDnY62NmShvIRVZPMOTbA9+33DowqXKPYbo1SXEN2-eYg8+X+bscur40zH0ID5xexaslPKx+CFUfB6Ce/T8oQpnCSEs3CP9yiVIXcqtBJyTd71EELGnooema7Aa4mEr5bOR0pnn4SW054eEhgcIs0sw+YjdCaMaGKmrhdpl0n4OPNhLaERKedtUVq8++k41dFcxLCOFgMUXEfg4T0TLLZysPav9viS8xMRUbW1Nnycl3CgX/btk2kqqf4lMygrnkFT/f25qKC2vlTnK+QzjzQmhR7LfY//FpgSM3SSyoB9NifBtLjhgLBW1B2l1nwv/nJ2YLQEcdBdINGkfcgtzpLgyVyfzOX38NcZLeTonwj65+03vBWNnC/R8HNvCqbI3f/IyjmuyM9nuz3qOZIsSS7rimlvK8e7zw3XPNvJTh0u1y+0qnThZZQIA41yvQoqIg2a5K/tSYxbDz9gcGr4G0ItJP1Bj6HYSsrq8y5kmsxDIcUYxdMZHSOCpKLvPrinPNY91Bh1TSwmxu8VQCuKkHeriJ9M/b9fqLeFqNuhdMNryPEzQThgQrebzyFv8RciCr5+5xrPlle2YmO4bCQ+JIKJbP67zaMMWth2U7JSqre7yua9vcS5EqDBLNF2uheB7aH4tOzqMcNtmM6LcfWgJwkbmYfR13yS6TbUsnVDMJ0V4/gIHmIn4RfdZQ92HKbCpBNPlTqkcXYPMqJI1tZMCI0juvAADXKJjEyWIinmyfLtdPChzs/j4KnkquOzMyc/audIzBxe1BLGYmiIbL3MwMLECN4x3w3k5yMDyEpc5S23Imoi3DXh8L3VlHi+Q+I32+cGiP5dTPndii4DRUidbmpyq/U2wfzLCynxsfmOSNoKPbahzDoQKQXsrA7KXbf7aInxi8AT8J6CzyJ9pdWqusLsfLWAZGl78+AgaZalg9qDSjBmiwgndI5yLiJQ7KOMcaJtArnX2GaqN5PSNT/PH/BkonLN3B8g3xyCTH5+Mnj+48Ttw0BNHNfJGMuQGkiKC2+FGFWw5wgQUcnGTxUP9EQOxbZYx48Kkpz5bgoVisiI1BgnIV13d0R4hdaKWnojrhvWlf/eaZQ6MzG5TZeebEoJ1lyIh1SAI5BCGQisiGE01vQt6nd3v4uWvqOJnMszTW+hvnK6Nrzy48qoNLWZU7zjIoAcD3pyVju/V2/AdcPHD9A86p7SOKK4wogOVQlJCojBSdhW2vqsfkXVJtNg31alNb/l1wdtLcWClqbYvESbtFKYtweP6Clix9lZd1aCJzVBu5t1luziSddPEM0MZNC9DDgMcfHfObNJdGcxwtTCLM41bY9RDdi/nBV4zV7E493Gx7Of2pONLGHf9PWjCU4vIC8rjJPU+r479gWgmFhgpM5mIiI7K/9m900cxzp3/RvBxYyB3oBZde4AoYxd1H4wjB/vbTD59fNBCR9pvy3T6+fDg9V0QU3Ighf7KxFt4BY9BoMOQI1UmPksFXOK/TAWzZYD2yNJLgT+eU1lj2/8J/bXfl8hopq+ooqsgYKoLfJvgsSYc7S6lrHPS6WaRCsOSC9bC28rmkzzIS1rZdC5d91GBErr6YmHSnfqdMzqYvGTAQ6NnxsLevRN56eZDkOi1sNsO1Z129uMa6ZtrVahkj7B6JzD6dEO9VPuU3s8HaSzQl6uGZRUFS69JTxNA2pBGq/dOeAL8XxZTLln19juxPxjoQR3kvJJ1umVJl4aZeuUytQrqbmxld7HVpbYiBBFcYKnwwMnOSYmYA6F6gRQ2GAqaCTk2mL9LUGr2nJKQLdKGFcEdpVmQ1NPYV/avEi1AU1rTSiksIGf1cvrBv1ol14zWLauHRkCkRvMf1trmCPwXGwbMrq/x8XLmoz2odM1vu0sL9pZI86Wd6SZWDPqqcJnlatAtHFnyXndRlobSstmVQ9SoZ6pvTa5YLDMCPu3S68V6eDSZWCaxX1pF9kpNwLyzayIIAfZ4tWogZ513u0BJa7wXYEB1jJZXxzUzA9K5RSU+1+QigXoPLosJ7LR/NFucNY1iwi93LXl9Faa0NBxdyIeshx1EOPKnaizpfLKMMCwvrVKCnRj8fjvyDbWFUlWuOhJ0xoQlHVr6fInoa1x4Be60DMzZ8qeCs4dT8pQUwcg7Ir7oq74gzM3dWzlm5TmiJw7qzO+BrLeHRr7+p5+ZOFjz5CCzHMn7Fj8HLnrKIrDDWt4rmlR1KZs2EYnOAKZcyHSPd5+0yvWJx3MNl3vghBXFIvGqirqaxf5AKNg/8u/RraSeVNiAFCZeOLY5ym6N3e9LB2smOUU27li1qwiaEEWJg1VDrM26BvD/42ylwOFoWxY69OprI90O2uYg1kKZI1u1D+y0tAzIalNjgD/abahkaZp+ETFadbJHfz/B3HLnteWNEaKsfBcqDfkyxcpx+vKRLBenzmf3UrPmnlU4Ofcbq+jkdQYaZfE63uaRnLbNgqvnpRQRE6+/CdPVguR7sWwPHaXm1M5_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_vEn0yWU/Pqe4ZkNOdSrE6q01u4Raj6WWDfZcx+v1Q++EzvE7j+EfIuUI71FLwQL3RYAr1sXkrtar5Za0le1nlE83UriWIzFV0kU2nMABcDT8rhDnH/rn8fxAE24U+cv5GpHiWRMO8xdcaB8SqmdBx4/3wIt43FRXKUUJCxuC+RWLgkuCtIKRvOVqin99wg66taEKD0K7OYIoVnKauNxvNH25LAneMNqngeBw8lZF0sTHbFY0zT35Lf38b288yabC58tt/5x2bMtqFkvNipyXCL3CJQnN1+b5EDs49qyu1ZklqbKXbNn7luladk09kqyBINEod1HQsYZcc0SB7eOEaeTrqJGOLYhtqBzNat9tq4Rtwb638lzQ1HqhryHEbl1nEbvsaRvIUovbaFu+cMdqMhODgd2/mWcARr/VwRDnvte3TwRYEOC0m/Oe0mBHDudt9EYxl4lipu3PHeu4fcTNBgUE+ba77fJeJ+ccgyFGuUGp9ABj7/bIudscdqI588E3VJXP0L+DjLLcR1/dNTA6SNVbBeLqozQItHEnKjii8rS94tIlcuKchXG8J3BBxcp3m5Dpa7Un/ihQGAeeOfQouQ1qYZodSwh3fjjqHyQXi1djwxzWSVVGmEHm5t6ePwC1/G02ozHvUd53NGEr6MiaFv+K1wp5CpjPBukucHmhlV5iNz5WSoJbjpDu5lhYapBuQoVQMlX7N8XMWaMD21x4SDtUbF/fRa0HwqjwuUsJo\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
