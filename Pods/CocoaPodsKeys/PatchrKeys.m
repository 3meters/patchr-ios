//
// Generated by CocoaPods-Keys
// on 29/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1469], PatchrKeysData[8409], PatchrKeysData[8796], PatchrKeysData[6363], PatchrKeysData[326], PatchrKeysData[3927], PatchrKeysData[803], PatchrKeysData[5858], PatchrKeysData[4551], PatchrKeysData[873], PatchrKeysData[4619], PatchrKeysData[2720], PatchrKeysData[1746], PatchrKeysData[7805], PatchrKeysData[3901], PatchrKeysData[8738], PatchrKeysData[1840], PatchrKeysData[9134], PatchrKeysData[7374], PatchrKeysData[2870], PatchrKeysData[8692], PatchrKeysData[7350], PatchrKeysData[3449], PatchrKeysData[7360], PatchrKeysData[8491], PatchrKeysData[7284], PatchrKeysData[102], PatchrKeysData[1218], PatchrKeysData[520], PatchrKeysData[8736], PatchrKeysData[5977], PatchrKeysData[8147], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2097], PatchrKeysData[8281], PatchrKeysData[928], PatchrKeysData[136], PatchrKeysData[3907], PatchrKeysData[1733], PatchrKeysData[6360], PatchrKeysData[952], PatchrKeysData[8576], PatchrKeysData[516], PatchrKeysData[5499], PatchrKeysData[4574], PatchrKeysData[5130], PatchrKeysData[746], PatchrKeysData[6563], PatchrKeysData[7418], PatchrKeysData[773], PatchrKeysData[6310], PatchrKeysData[1198], PatchrKeysData[100], PatchrKeysData[4999], PatchrKeysData[1717], PatchrKeysData[1459], PatchrKeysData[1311], PatchrKeysData[150], PatchrKeysData[480], PatchrKeysData[6507], PatchrKeysData[3000], PatchrKeysData[2255], PatchrKeysData[6205], PatchrKeysData[6748], PatchrKeysData[144], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[7045], PatchrKeysData[887], PatchrKeysData[7837], PatchrKeysData[1013], PatchrKeysData[4579], PatchrKeysData[2655], PatchrKeysData[2705], PatchrKeysData[2445], PatchrKeysData[466], PatchrKeysData[850], PatchrKeysData[6746], PatchrKeysData[6713], PatchrKeysData[3294], PatchrKeysData[1569], PatchrKeysData[2872], PatchrKeysData[6454], PatchrKeysData[5408], PatchrKeysData[6976], PatchrKeysData[2642], PatchrKeysData[3269], PatchrKeysData[4893], PatchrKeysData[1124], PatchrKeysData[8671], PatchrKeysData[6533], PatchrKeysData[5153], PatchrKeysData[7997], PatchrKeysData[1337], PatchrKeysData[3418], PatchrKeysData[3295], PatchrKeysData[5429], PatchrKeysData[2988], PatchrKeysData[5803], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[5571], PatchrKeysData[5710], PatchrKeysData[3021], PatchrKeysData[5022], PatchrKeysData[4470], PatchrKeysData[6719], PatchrKeysData[233], PatchrKeysData[8963], PatchrKeysData[4276], PatchrKeysData[575], PatchrKeysData[4889], PatchrKeysData[4123], PatchrKeysData[8493], PatchrKeysData[9198], PatchrKeysData[5175], PatchrKeysData[3528], PatchrKeysData[7692], PatchrKeysData[2044], PatchrKeysData[1398], PatchrKeysData[1220], PatchrKeysData[2975], PatchrKeysData[6666], PatchrKeysData[9164], PatchrKeysData[4584], PatchrKeysData[4837], PatchrKeysData[3986], PatchrKeysData[3826], PatchrKeysData[8279], PatchrKeysData[2382], PatchrKeysData[7817], PatchrKeysData[577], PatchrKeysData[6669], PatchrKeysData[6203], PatchrKeysData[4242], PatchrKeysData[8398], PatchrKeysData[1208], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[7903], PatchrKeysData[1697], PatchrKeysData[4895], PatchrKeysData[1988], PatchrKeysData[2924], PatchrKeysData[4779], PatchrKeysData[4682], PatchrKeysData[37], PatchrKeysData[4058], PatchrKeysData[4948], PatchrKeysData[8753], PatchrKeysData[3647], PatchrKeysData[2366], PatchrKeysData[8605], PatchrKeysData[6080], PatchrKeysData[1886], PatchrKeysData[4964], PatchrKeysData[2092], PatchrKeysData[7437], PatchrKeysData[440], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7328], PatchrKeysData[5873], PatchrKeysData[1584], PatchrKeysData[6393], PatchrKeysData[1094], PatchrKeysData[7239], PatchrKeysData[2578], PatchrKeysData[6984], PatchrKeysData[9016], PatchrKeysData[3598], PatchrKeysData[112], PatchrKeysData[9021], PatchrKeysData[3517], PatchrKeysData[8584], PatchrKeysData[8009], PatchrKeysData[797], PatchrKeysData[6123], PatchrKeysData[4907], PatchrKeysData[8776], PatchrKeysData[8146], PatchrKeysData[5666], PatchrKeysData[4081], PatchrKeysData[2478], PatchrKeysData[7803], PatchrKeysData[6931], PatchrKeysData[2795], PatchrKeysData[932], PatchrKeysData[3186], PatchrKeysData[7854], PatchrKeysData[5599], PatchrKeysData[9153], PatchrKeysData[458], PatchrKeysData[5799], PatchrKeysData[4749], PatchrKeysData[1207], PatchrKeysData[4187], PatchrKeysData[7578], PatchrKeysData[532], PatchrKeysData[4367], PatchrKeysData[4843], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4228], PatchrKeysData[1012], PatchrKeysData[2553], PatchrKeysData[2486], PatchrKeysData[5067], PatchrKeysData[5227], PatchrKeysData[5243], PatchrKeysData[8162], PatchrKeysData[1632], PatchrKeysData[1772], PatchrKeysData[6779], PatchrKeysData[4808], PatchrKeysData[8820], PatchrKeysData[5573], PatchrKeysData[8256], PatchrKeysData[3415], PatchrKeysData[3518], PatchrKeysData[5095], PatchrKeysData[4872], PatchrKeysData[8381], PatchrKeysData[1516], PatchrKeysData[7708], PatchrKeysData[4285], PatchrKeysData[6960], PatchrKeysData[9189], PatchrKeysData[3176], PatchrKeysData[7314], PatchrKeysData[8092], PatchrKeysData[5581], PatchrKeysData[5391], PatchrKeysData[3523], PatchrKeysData[4650], PatchrKeysData[8707], PatchrKeysData[4916], PatchrKeysData[3205], PatchrKeysData[3022], PatchrKeysData[7144], PatchrKeysData[6967], PatchrKeysData[3102], PatchrKeysData[2737], PatchrKeysData[662], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[7822], PatchrKeysData[2098], PatchrKeysData[2205], PatchrKeysData[3380], PatchrKeysData[3538], PatchrKeysData[7942], PatchrKeysData[8077], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[1022], PatchrKeysData[5196], PatchrKeysData[3902], PatchrKeysData[6894], PatchrKeysData[4083], PatchrKeysData[2482], PatchrKeysData[727], PatchrKeysData[3599], PatchrKeysData[5428], PatchrKeysData[1084], PatchrKeysData[2590], PatchrKeysData[3362], PatchrKeysData[8226], PatchrKeysData[1505], PatchrKeysData[596], PatchrKeysData[6668], PatchrKeysData[1044], PatchrKeysData[8042], PatchrKeysData[9060], PatchrKeysData[8545], PatchrKeysData[3569], PatchrKeysData[3628], PatchrKeysData[2395], PatchrKeysData[7125], PatchrKeysData[5715], PatchrKeysData[4795], PatchrKeysData[7915], PatchrKeysData[6845], PatchrKeysData[7682], PatchrKeysData[4452], PatchrKeysData[7918], PatchrKeysData[3112], PatchrKeysData[8726], PatchrKeysData[1853], PatchrKeysData[1224], PatchrKeysData[4147], PatchrKeysData[6450], PatchrKeysData[397], PatchrKeysData[7301], PatchrKeysData[2653], PatchrKeysData[2905], PatchrKeysData[4169], PatchrKeysData[4666], PatchrKeysData[5793], PatchrKeysData[4520], PatchrKeysData[6121], PatchrKeysData[4231], PatchrKeysData[8120], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9218] = "kywt/6v9S0YYeqKi0XP3E5RVw0jdEkUtqO9KK2+n14bNzOs4HFiZydRLYoHmROQ8ks/vPHm2aLYczuxVe2i1Dc7158ZVcKqwm/Y41Gf4LioWqoX+yZrTIbwCki9bCSWup3X2d//JadD1DJtDdFA5eHaqXgnu/7Nj+cHf6GgA/adJCqD1nMmyzDThGKOTyqcX7r85Kbzw8MncWNhTCyBQrEuMs4pC1XIKJ3uNjpDyO9wmtwLVp74zt2txHkVNsHtIjszDJS7HqsBov1ISerdW64P8W4D2DxQf3/QPd9L7JQt3P77sbCNkZyrXcyLFXOwcNbBXQM3H5G5ylAiszJrsbLFVdoGGAnI0KPVCEZIsaTIHRc7XLNi3c0074MP3Q54n4/x0x6VcA26Gc9gwCmb1Km/uHPFdh7PrVIX+8tm4BMdA3z7qytUYRrjIAIkjCWe48zlYsgCOiPsQZ21/MT4hxkSFZPxaIImHdLJX6fVfy+xhZtVk0VBBuHQ07a78u7qzY3UFex0k4TLEd0Zw988lxO9p59GOPvFUoZqsDnFRhjS7FcwklNbQc1Sw/FuUjPQ93b7eJsZYc2MC1bY8mVLW0UizdEBDUqE6D4v6nEpfHnK6DP3yzXVOLAyaARoGnJfVoy4BYoQlCCRlkLkHO81K4Y3yuiYlST5itgdcoczT/zL9fkrI4+GSmtEngaLKzTR4nHlBI9klL2HKVznaYXKW+i18IqWrZH6kkkGF26/swr7dR4ls59WIzXMF7lDg3dECrKXAD8Tore1H7LqZXJ7Dm26wOYBfd4utOPr8KK6SAfKrfP/JEnMfQG+08qf81CKuyACDVo6j9vWdFs6/5+8LBnLlMxWYjOwHT226S5Sksf7WwZEanFE3UGn2M/k8s6KQwwdWtAaQ+dZ33tOqPnq+NZ6e4hmiFkXBaes0ziiwyxAc1aP12pxQtNZK5H8sbXaNeDAhSanQSnHQg2PjOwMcG4xml82i+xISCrO3PXItE7DPZCe4rBPAe4oyb2kBid8TWTQH4Mn9uBMqyZL4pjSL8tftXEH3WXtTAva/P4r1248KFqBZ3Qgz0tqtj9BO2fa6bYOPPqSJGU1QAIBJW1rR0w8spXNypw0+PwFqchSC3Zxun8PqVNhNgVH/dPoCczN2yc8AP3yafFXAk7CyF2gj3WErMr+OriV43THf7imKKFfAwW2cuETDlGLAbHZxjsEzxqdia1ieamm+YvVxVI21wmjLp+aEJIXuejoV/aaNk5UScPucduXvO3x0eAXs0oyl2eJlU4oamYXYaBHO5pSO0pdyxRhCUKw1giqudSR+v6xdoyRtWSbXJr6kPfWgskn+YScVk1pUHAn4UAeo5z1aNqiSvcSwwWsh2Z47X5wqeP7uYEaCje5G1E-dxHHKET1lVU0xp6qNXikiaPw9M+noomLL9GvJadB2FcX7JfoSJsgFk90pc7i7z0MPbHoLbdMQZSinmFebjTQ+sVwThZegAkjLBKkbW0J1X70wdgwWFu5TigrGcqtP01c4WrsCOuqCoP++DpxekD7ihQV5QorHRnmJhrTR9asRE9XFWWj7p9rzBZ0VN/GxCwmc2c2Cl2YdWORIblw/j/1EGrrdLrguz4TB7IBXx6N6_UHzFnpf+334mO6WJu4LOUeggW2XXCf01NcdIJeuF+0f1moPY0Pro1uIZ/8CJ7MUcKND1/9AOAbqK+ZNdyEs34gLUTKdZGzZzGZ8gcveJZ7QKYLfrH42e4SDAMJ4xbsKDlwpIvcyfIB0anT7VgZ2tQJDtQ90BZsgLUood0+QrpU7em/BZJoMGkCeaAmDVDQrKJ75Ltr+3Okx03YO7NV/0vVN8Qb2lfkXfZPt8IWzaaZpfCwGBsDp0hgZmTK5mkUoZ6d2pDtedoBb3Mr7dRN3Nx2HCY8d39/g9WN4htlZFsFA3FnMGDpPBcqhU+qU51LHGRmH7mfOGKBA8pjG0SBpmuUu9FfYxPHpM4YsA5Ds99gnfPJo2F3h26Il/SI+kUf7o089E3F4VzOT9Y7foSjkbBkCyQ0L6vu65LKUHni6UZYaNmD/7262heCxwMDQ81L78hf/RWhtbc1v3G1r+5a5d5y0jALmZWHzp4hNYn7tnR+PYAz+AsTYpTSbR5kS9nZvvRmCIwVIvGohDFFp/6fZFQbBhWreVoz1tSF//MW0Z4s0goCiwqCy2VDq/OrE/rrg5dGnq02j5ZeLYl/B29pI4NweGcbKfg3poiVa6klE4D0eCx147u3cgXBN4sGxhi0uIyhdV258npVJvXUg/ShPHt6XyEDrdNX6tG2FZs93BUoU5YNdt0bQmRnsor5hfbvsKTdrYStPtIwN1gw46IftheEUnXuKW72jZO5d5KGs3N9AVWbpsa84hE/TXKZcXdEn/iqNq2AP0ZQrxSahtWpJ4usbVHrXb2oOAWsQsUGosZo2l8qSBGGnni7SsAi73Vuk4kpoSIEpa+QHlDEOYw4mmb_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-riK7pvUrG32I6dVeB\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
