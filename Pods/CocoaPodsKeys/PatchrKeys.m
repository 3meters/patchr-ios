//
// Generated by CocoaPods-Keys
// on 15/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6195], PatchrKeysData[2128], PatchrKeysData[4909], PatchrKeysData[5215], PatchrKeysData[6328], PatchrKeysData[7774], PatchrKeysData[6293], PatchrKeysData[1870], PatchrKeysData[2140], PatchrKeysData[6776], PatchrKeysData[7578], PatchrKeysData[785], PatchrKeysData[7582], PatchrKeysData[4235], PatchrKeysData[3687], PatchrKeysData[3545], PatchrKeysData[5355], PatchrKeysData[721], PatchrKeysData[5065], PatchrKeysData[5130], PatchrKeysData[924], PatchrKeysData[3260], PatchrKeysData[2841], PatchrKeysData[1773], PatchrKeysData[1570], PatchrKeysData[4005], PatchrKeysData[7032], PatchrKeysData[7876], PatchrKeysData[3697], PatchrKeysData[768], PatchrKeysData[5303], PatchrKeysData[976], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6382], PatchrKeysData[509], PatchrKeysData[4105], PatchrKeysData[7228], PatchrKeysData[465], PatchrKeysData[4657], PatchrKeysData[3707], PatchrKeysData[7108], PatchrKeysData[3467], PatchrKeysData[2209], PatchrKeysData[4198], PatchrKeysData[7647], PatchrKeysData[2705], PatchrKeysData[6488], PatchrKeysData[5529], PatchrKeysData[8027], PatchrKeysData[4441], PatchrKeysData[7563], PatchrKeysData[6149], PatchrKeysData[4907], PatchrKeysData[5520], PatchrKeysData[6525], PatchrKeysData[1757], PatchrKeysData[7174], PatchrKeysData[7699], PatchrKeysData[1517], PatchrKeysData[32], PatchrKeysData[7591], PatchrKeysData[1924], PatchrKeysData[5956], PatchrKeysData[6971], PatchrKeysData[230], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[836], PatchrKeysData[7773], PatchrKeysData[2471], PatchrKeysData[2914], PatchrKeysData[3008], PatchrKeysData[3748], PatchrKeysData[6077], PatchrKeysData[2668], PatchrKeysData[5439], PatchrKeysData[2980], PatchrKeysData[4756], PatchrKeysData[337], PatchrKeysData[7672], PatchrKeysData[3395], PatchrKeysData[3957], PatchrKeysData[1103], PatchrKeysData[7628], PatchrKeysData[2982], PatchrKeysData[5666], PatchrKeysData[86], PatchrKeysData[549], PatchrKeysData[2367], PatchrKeysData[2776], PatchrKeysData[5942], PatchrKeysData[273], PatchrKeysData[4039], PatchrKeysData[4358], PatchrKeysData[5059], PatchrKeysData[890], PatchrKeysData[7664], PatchrKeysData[4513], PatchrKeysData[983], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[3612], PatchrKeysData[1928], PatchrKeysData[7121], PatchrKeysData[1964], PatchrKeysData[4666], PatchrKeysData[5503], PatchrKeysData[7552], PatchrKeysData[7412], PatchrKeysData[1279], PatchrKeysData[2604], PatchrKeysData[655], PatchrKeysData[2924], PatchrKeysData[2500], PatchrKeysData[4446], PatchrKeysData[657], PatchrKeysData[5159], PatchrKeysData[935], PatchrKeysData[5895], PatchrKeysData[7714], PatchrKeysData[2713], PatchrKeysData[1711], PatchrKeysData[400], PatchrKeysData[3966], PatchrKeysData[3733], PatchrKeysData[955], PatchrKeysData[1908], PatchrKeysData[4751], PatchrKeysData[3229], PatchrKeysData[5536], PatchrKeysData[4225], PatchrKeysData[883], PatchrKeysData[1211], PatchrKeysData[5213], PatchrKeysData[2032], PatchrKeysData[2033], PatchrKeysData[1493], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[4792], PatchrKeysData[2601], PatchrKeysData[6902], PatchrKeysData[5859], PatchrKeysData[1042], PatchrKeysData[7913], PatchrKeysData[1129], PatchrKeysData[173], PatchrKeysData[4209], PatchrKeysData[4283], PatchrKeysData[7822], PatchrKeysData[7094], PatchrKeysData[7808], PatchrKeysData[1066], PatchrKeysData[3726], PatchrKeysData[7291], PatchrKeysData[1550], PatchrKeysData[977], PatchrKeysData[5408], PatchrKeysData[3193], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[533], PatchrKeysData[5913], PatchrKeysData[3953], PatchrKeysData[5379], PatchrKeysData[6343], PatchrKeysData[4810], PatchrKeysData[5477], PatchrKeysData[4699], PatchrKeysData[6515], PatchrKeysData[2221], PatchrKeysData[4120], PatchrKeysData[3433], PatchrKeysData[7658], PatchrKeysData[190], PatchrKeysData[4525], PatchrKeysData[3568], PatchrKeysData[2224], PatchrKeysData[888], PatchrKeysData[6755], PatchrKeysData[3800], PatchrKeysData[7447], PatchrKeysData[3880], PatchrKeysData[3458], PatchrKeysData[627], PatchrKeysData[1415], PatchrKeysData[1008], PatchrKeysData[6612], PatchrKeysData[628], PatchrKeysData[7933], PatchrKeysData[5029], PatchrKeysData[235], PatchrKeysData[773], PatchrKeysData[5858], PatchrKeysData[2878], PatchrKeysData[6754], PatchrKeysData[2544], PatchrKeysData[7788], PatchrKeysData[3472], PatchrKeysData[5918], PatchrKeysData[4579], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[3937], PatchrKeysData[5877], PatchrKeysData[5738], PatchrKeysData[2020], PatchrKeysData[7988], PatchrKeysData[299], PatchrKeysData[1438], PatchrKeysData[6829], PatchrKeysData[8061], PatchrKeysData[7145], PatchrKeysData[4213], PatchrKeysData[868], PatchrKeysData[3442], PatchrKeysData[99], PatchrKeysData[5497], PatchrKeysData[5985], PatchrKeysData[191], PatchrKeysData[3938], PatchrKeysData[1627], PatchrKeysData[4472], PatchrKeysData[942], PatchrKeysData[6542], PatchrKeysData[1070], PatchrKeysData[6422], PatchrKeysData[6935], PatchrKeysData[4802], PatchrKeysData[5595], PatchrKeysData[5444], PatchrKeysData[3351], PatchrKeysData[3213], PatchrKeysData[2497], PatchrKeysData[3661], PatchrKeysData[1053], PatchrKeysData[3312], PatchrKeysData[5339], PatchrKeysData[4887], PatchrKeysData[5735], PatchrKeysData[3553], PatchrKeysData[4870], PatchrKeysData[3767], PatchrKeysData[5871], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[6760], PatchrKeysData[2702], PatchrKeysData[81], PatchrKeysData[5965], PatchrKeysData[6771], PatchrKeysData[6563], PatchrKeysData[7425], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[76], PatchrKeysData[15], PatchrKeysData[4142], PatchrKeysData[2596], PatchrKeysData[7757], PatchrKeysData[2025], PatchrKeysData[4119], PatchrKeysData[5164], PatchrKeysData[2052], PatchrKeysData[1073], PatchrKeysData[6696], PatchrKeysData[3596], PatchrKeysData[2603], PatchrKeysData[3831], PatchrKeysData[1136], PatchrKeysData[5150], PatchrKeysData[2031], PatchrKeysData[68], PatchrKeysData[4086], PatchrKeysData[1039], PatchrKeysData[2527], PatchrKeysData[5430], PatchrKeysData[7143], PatchrKeysData[257], PatchrKeysData[6307], PatchrKeysData[1966], PatchrKeysData[4527], PatchrKeysData[4049], PatchrKeysData[3034], PatchrKeysData[6811], PatchrKeysData[5371], PatchrKeysData[7781], PatchrKeysData[776], PatchrKeysData[3554], PatchrKeysData[8057], PatchrKeysData[6169], PatchrKeysData[2076], PatchrKeysData[2478], PatchrKeysData[2445], PatchrKeysData[3318], PatchrKeysData[7979], PatchrKeysData[2567], PatchrKeysData[2275], PatchrKeysData[7871], PatchrKeysData[6625], PatchrKeysData[371], PatchrKeysData[451], PatchrKeysData[5591], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[8066] = "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_jakt4e+xlH80aamYjAalZHTFLPW+BqZ7iySi/raAQzNb/2ENPoukCxCd2ptgoW9rVcmMTOGBSveUKEDDOKm06a1qZjLqenKiOw0j6ECx0AV1SO75umWzCr25hjFTgscArhdNdntjWfTmFn+TE9Smm/wUNftngy5SuLIst7Hx40Xa4BWPBh4xxazB8OUhekl1e0U/Y/5A62L9Oefs9ums+J47YsCbiXjDmCQYmYlObNJpYjTyj+FCUUkgo2YF8YaMRg3J8kdQBlzTBhJ5S/bqkhHRpjUTakLJTchGl0UbNghdCJOF8NcHalXPXBoIEBBKESrIVZ/igADoIwLEOra8cIkeuNcMvyKZTqe+USzdrXQen/MIkO4RPNh7lO6s9SdlwMitIUpOkBabq2a6Ed/afDmEeaEVwzNBfRheyxUKczxRe69kg2sfFLy+wei38L5XAU4Sw6UxL9OW8SlWAUMeUw3jWsNSlXXdfjA/6Xbu+p2ZkuXp9h3G6R61DedMnd4bz91ELsVvPBR80rUn3dUjK3jpg/tlC4QBJFemK8Xg9uG7DUeuG7tUXSwcMV5EnxJ6/DSrKm6936hiuJVgn8r9hUeD88+cp0iIf6eowWRHWm60fGls1Vt2mthIb+/ojubNayzDlnH83jsYZASU1fen6t5YsDoW9a+o13T9eHjXmaVD4F2pAS64aCf5CzthE3KBfezFFKhUq4nIyutUpqritm49gyA2h6y0S0ZzP6DZR9qN0FZ+Y0Q99B09HiCdFc5lc4rOU7ws/kaM5TE5U6WISpolHxa/2EQJdhTGSps9qf+OSRv0RpEF6TN4z5aAxJK018ZCppOSiZooXaMWsl6+qCVoogyo587RPCnkJZNevZP/uJWlNQMxfMIcJJ2s84Mf+5sznTX17mgujkrMTJMETjJvEJGb7yqJMGpR/EGkPSgxYQDGweRzm7Yu2UgMIbj837PhX5vNxWRyCH8UCYWsVQZEwG+6JhnL/l6arz24pZgZhHLoXedz66dm9EvcpGk7ykneL1GSVvjembYgOgxkOa6LOBZyFI5609fHUSimTlOM7FVFCigGuDk3I/yEpwnT/Kzrwc2ZvWz5+5YUtp4lbkcvL0URlUahR8OfwYwHxfqHXcT6iqIUMQi8dI707T42epSKkBwSnBBxGYlsLayDABfoj3m2xWTLHv2BiTYMsnUP+nIALuV/H/mDeexGTvJe/RM/fXhYNbubs8ssNMBCQnZ0yyoLwtTV/7MiZ506X/LLicBl8PJYXMLxCrRfLiTJUsn59kHyGh9zOLt0h86xsZBzkSavjY54k/aXN42ZTo2ejLS1dNVOVRWKxtxTedka0Nved2mAg5bnGv3Oj+Uu3CTgvsLf+T9LE84HYAiRx3XEPARA0OxFKvpJLSDATgjsHBO1PNQNkbn0MKlUNBP3UeMbkKCeuEkp3CUK68eHeO2xJxEsRl33rT0srIDL8JTPvFhR9UQMezqUDj8PZ+4QI0vDNxIBlsKuJh/vF7sZfny3/8wZ7B1C3rz3g8zQnfWbRss60X1fQYt4QpftpuMt5bEOULXHotTYRaKdacu9pswKeQNX6HOSzY8egTe1QDFq65uKVLm9RwEcXVtPv2biR6JK+oqo0QNZ9BZxCcpXk10LFYc7WJ2yWXTZ13PzNd4m1w9E/jXg5Eod4opORoYRFC1cDcQUZ0FswD5xM58buOcPexv3-dS2ME/09dcGr2g39P1mjgkzxFzw8XKyUucJzhqp9kl1WNQxWCAx8WIljor+m36B+EzWap3NZwRMzoM29P9vR545/K9+G4bOFj7wQsovk1KQZrAau4aUf1rQh9JBLCSOck5/1B4gsg4iKFgwKUmtFieMFlw7EI6Jkn7TQZYLTstgsQnP8AC5myzEKG1ZZCZH2RRIXr7k7waDkuvKkkVCeM0wDLmUNQUl4yFYSPwvH4fxO96vMPUjsyU78VTsn0s0Muf0/FSGYpZF5zCI3UvdyL7rBJOZPOrpX99h8Y7V4Cg6gV+2Ql0CQHI1gzjyb6PGuLU+1gY8RdJX3xxXnv4da5EO0P3cP++pX5JMu5/ciWQVsbgErGmnalIsRrB807OluL8yBSvZHTrjsWI8M4vCwVGlo4mOsOTFPCbvFG3SZFwmK7BA+i4/OgC6hcc0l9VKqqlfuUr2UsZABEXGMcS7/ryBtHPVFIS3aGbqZUrvktW9auw6Skgg5kdqUjPsX2a80tNeB2+fSvlWgeMwYgxeIvCgu9AzfecJTvUHhxPpSeurA/jzGpqIZ5LxO1KgGyttS5LWWri4d1jp4R0hBUiQy8yXY3A5Omb9nCZ/ZbEKkPRG1ci7+fvxVh+e8GH4oWDHgqERbQB26U+xVR9dyF8LKMlgZsJAkDqzEwiN3fH3XexGhVyDU6/rD2URPzJ6ZPq5HkZS83c5B-SuELI3ygYaTtpdfsmP7p7YAaMpc9bj8v1yttLjeC/WPxPpAAXGxJzPsUB3wY+Kv4hxdHJzF0chtLZZepcwPE3/5fYVNXx4coQfjVG+E8VeW8GbGGdUS/ZtYX9mZxqw6UgzQYS8h0wb/4CteWPV3ai8S1+IJ30pVSLZo08TrK5OH0rECGqBH5VLJBGoxr2bkyULwKfX6Vp8T7s/nWthclipyujCV5egMy2gpdS5+r3+THqTmrj7iW1LmcBgqUz8Jp5Mr2DYDwY4su0GT0pxcjijcej36PMMWQOdNb2TXTGuSMQEkf97f0P1ON24dlUqa+8F6YBmbHLEarMTFLo68LBZocVA9WShtfxen2YHyuPSyUh5MBzH0A/qKwYMDmDDTa0ookhJJ3FT+wj8wxtUJ4WQ0P3aZ3OPShH73DV1LSCWwUUaZPyS77nP+qajhkocoOKpbSqptYRxWS1c3bGUO25h2OUUE3EJULVXT+M5tmyNOr6/M307z/H3Xt6Z1keuwrG9QOAGEBShR1N1YMRh5jOnfykW4A1GjNLhaB6szsBK70RNGV9fBNTurfm6Y2L0UVDxQLw9QpobZzmitA59261oKrwH8IJyqCo3ZlapWaBn15UEa0muXYV01Yj8CLu/q3DuBAO17Jrj+dl0fmd9MBE0xni55lyVFVfriXhpgiA0498pC/mAR7yBTi96fmnGS|+ticKHZOcU7NS55a2yc97e6nYXW9NgJZ0eLvUvNECIz8+3cQzQhGUr3i7Hz+gc2G1UoWw4RsyOpbeUvj+svniNP8prNzMpz6vlAhHnGDpRucxn+8HnSrpFnD/SmgOqWbhd25eP8zkZGnFpQbXjkLo/Bk0AN9uFrMQF4gog9USEZTdydjCN3QHa/BoPBor3ufJGWC7/PHYi4N7Iphxu7NHBzaHGrb4yXGJC/48CqMO5zuW6ywNzywMsjq7883pNlIFCqD/MkVrgjTwwwCqnNLwY+eYpo9ztWU4UQL1zgNO4GSssXQaZUyaV4Gzy2iUTRNH6IRDqYSwriufnQTJqhxhTqCV/hGditE4txH7KmJqtt8ANHv4a6M3e3qDo8iac97UbY8ulMXbcTEJbkvcuW+5ZruTULhKVTh/2hDtOPQUSrdud0mmMZ+1MOE1s1QlLAwVRxE0ORjctjHYwxaNiWNfWORoQ5gDPFHNZS7fFLxvGgx7iThFUqUbWfYFLS0bC5kAMC7blmJ4MeCCQELqcRWUliFiXhUxlMR3DTcz3u2/EcdYeLJlWisLRgazviIwPvdTNvFVKHaKe0y3gho9gofn7/ZXmY+TccdqQXmoGVwqUPmke0LqIOjXxj5kyg/9LCDJUThyX//6bWqkF7WbbUJraIJAYOnGyvPJAkBPzuMUypRCsHz9WBMka140DPB20b5rJquAYnXNOZkMY/X3zgF+1e29QM47Ad8jaDcs3e76y3O/AMUvBD0DSqnoRewWj4P44lKidXnorb2fOVPKbfN6zf653zfgnR7mfHoEa6vAXAhaEiRhOEuhhxX8gTjsyqiy5Lo8B5NLOigVm61Q6HKKDVefzz/ERF53dPNRgO74fOZhaTqrjb5k6ZLuUr9g3zJYGyiujaS9ehoRCSHzCva3ypwtHp8LAfZVZfnHvT8Ke9har7OtCQF+h+BPZ0aFqMBGuR/cUxW5ehz7HYTHirRZMLlGyEW/BYXRAwaP42LoX59muj8Ff7LvpaVT4bR97U3/gcWphtt73khKVcIAdQbdmsEoJ990sLR3JLfDocCefr55wnVINosrCoBnC5V118WvpqsUivySivZ/3ZUpeedsfyyFvbp+3uqGrApzzqDi9Js7LSR2rCaTD83Z60LFbj1k4jibNGG3RhVPBsC0SCW1bnkh3bwIulrUg6T8JIrSDAtrIBr1xBWLhrFGrRkhiu2AK+Rpa/zWXTRHEy59HL5x/5/eLz23XRnu6adwKVje7Ty0B/+jGCLYQp3J1pRmzqfnX9FmEMt6TiVhY/GO9VJpPIRXWQLYFcLlfSAlWwEPW+zTMGzrg+BNocVV7ROTpvsQ50WqNnxs+3R6LWXNqp74oyVSpF9bk48P0zLFiD7xXR7SYLQ2BLqiwrPHhJjstLXPDptsU6Bqz+Xod7TzGXjf3JnP1cX0fPxtKX5as7cvyM01inByWp2qzhXxA/TqEyVls3f96m9BMCUeQN+QlveBflalEKPloD4Sdrr+M2hWUX7XFxV+t7UapjArxU+Tcrkzwr8SNZ+Q42BhbHCEY79Bq9q4mYMeQTqyvgVBia9Y/RrEMsyQu/HjxLpH7nT5yYLABSA03t/Ql/hZ8nEAGkHsXQkPf97pXm0nQgHt/PP16WyFx920ZclO0QnOHWu7BcRQhBa1M49q2r06deEt1/PpTPKTB2f2MHemkDYsGHPWwPGcVTx83sLqrJ14CN9/nt2slCj/q0XVWV08uIjOtFynX3IBSCVA86AwEoV6EpWNZ3hY9KlZIT6RrkCETK7AFQK/Sg0qW43yw/H42ETAi61n6kVNsWXcoskfU4SeySM6SwCRxz39fWJckiXuw7jr54/7RIu8KoIe/FNBs4FE6m73XmqDf3Wjyg7SMB4HF/HzJOtqJtrylK+Zk2spGoCuV3E2IoQSJnCCJLpITMGgS1uDbnCf72Y9eJ29tYS15Dj/w+phqrWZecIuv5cR3ws8v6uVKeT2wg3cdaKHc//zGAPv/qkTcM46TKWrFiQsa31ybTcBBtxyEKwC34Xq8AJ5oj5y0JwWnJ/w22Ufc+QikcIXKtHbicO6aVC3Rj6GKizw3olJ0kaWSOtqj5cnlEQ+fkAz5OjqiEhjsSpTXwE6DvZPyr764QbU/okoHbSBT0WuwjsGUGl4Axk08Eq5OEXwj6pHAEVXdThVg/BOFVJmssCGuRrN3qs4HwUEP/JEIyBfMK2scr939CNCtItiKmdXWyGR4LmFLaHB4uZBYHOdJGuA4laNo6ewyyY0iaUQgsS3D8qUomOpoIvyrBeiX1I1fDy85VaDGTon2svftzuIhZ85J/xQuVva9/0m4gXIqgZ0Xe927nz9TMHveb+9dHyv4bwbJ5jLLa//SKPYyiiRYCfKrs/Y/thD/K5S9CBoYMhuVKh8AU7TqtFYw3yIPrc0sW4NOs+/M2p8RaSs+gde15JHu489tN2KSelXZSBmbnGjrJ68aaaje+WiAUhG/xA3fQc9jcnBP6kkYLcTT4Is9wDkJA+Q4Gy/3XLvbnbBfhLN0IW9KeVya0oaz4/ojeXodhoHd5-9BjH+uIJYG+G186pMmbEgDC6dswfST9aTZjTADTZ+U5sf4DxikBTNzbWwC2bPd5SC/5XP6QTkaP6cpNcpnGgTBqZe92ZT2Ae1Yv05msoC8jH/Id53jDekZNxHxSCSnkngm1KwUcweaUYVGbBCtQksDCYe7IW3aWX+dkgzvl75wmpxguhocpbPpYVf/jTfIl+baLIZZYW2KXRS2OM04zdzACAseUrP7h7RIrpxuZ8DmFJlrbrjSbKynZ/qC0rxu3OYM6kEsrFbfVhiaEpYl2zNQk5OLq5GRSrQ9fn3u1T19HB/uHxuWnhkSvx0hrhx+UzN3QlHDTfx/JTQN8XDPNhAqaeqY_+k\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
