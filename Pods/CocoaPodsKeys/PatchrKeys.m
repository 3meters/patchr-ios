//
// Generated by CocoaPods-Keys
// on 18/12/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5601], PatchrKeysData[4420], PatchrKeysData[2512], PatchrKeysData[4743], PatchrKeysData[6556], PatchrKeysData[8728], PatchrKeysData[2655], PatchrKeysData[4871], PatchrKeysData[555], PatchrKeysData[8071], PatchrKeysData[8198], PatchrKeysData[1555], PatchrKeysData[201], PatchrKeysData[795], PatchrKeysData[8576], PatchrKeysData[2120], PatchrKeysData[3487], PatchrKeysData[7474], PatchrKeysData[2967], PatchrKeysData[3357], PatchrKeysData[2832], PatchrKeysData[6849], PatchrKeysData[3211], PatchrKeysData[4710], PatchrKeysData[6717], PatchrKeysData[8609], PatchrKeysData[100], PatchrKeysData[8542], PatchrKeysData[3047], PatchrKeysData[209], PatchrKeysData[6126], PatchrKeysData[3310], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[7312], PatchrKeysData[4833], PatchrKeysData[8478], PatchrKeysData[4156], PatchrKeysData[7240], PatchrKeysData[6790], PatchrKeysData[8828], PatchrKeysData[523], PatchrKeysData[9118], PatchrKeysData[8013], PatchrKeysData[8239], PatchrKeysData[8485], PatchrKeysData[3213], PatchrKeysData[3408], PatchrKeysData[4843], PatchrKeysData[8061], PatchrKeysData[5860], PatchrKeysData[1440], PatchrKeysData[5962], PatchrKeysData[6582], PatchrKeysData[5126], PatchrKeysData[4606], PatchrKeysData[8020], PatchrKeysData[4816], PatchrKeysData[4798], PatchrKeysData[879], PatchrKeysData[1151], PatchrKeysData[198], PatchrKeysData[6135], PatchrKeysData[4780], PatchrKeysData[2950], PatchrKeysData[6428], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1548], PatchrKeysData[19], PatchrKeysData[2697], PatchrKeysData[5417], PatchrKeysData[8951], PatchrKeysData[8189], PatchrKeysData[2291], PatchrKeysData[2924], PatchrKeysData[1536], PatchrKeysData[1375], PatchrKeysData[7089], PatchrKeysData[621], PatchrKeysData[7132], PatchrKeysData[339], PatchrKeysData[5503], PatchrKeysData[4615], PatchrKeysData[4357], PatchrKeysData[5164], PatchrKeysData[4929], PatchrKeysData[600], PatchrKeysData[4146], PatchrKeysData[8481], PatchrKeysData[1744], PatchrKeysData[6245], PatchrKeysData[5284], PatchrKeysData[985], PatchrKeysData[8380], PatchrKeysData[417], PatchrKeysData[2880], PatchrKeysData[6350], PatchrKeysData[2144], PatchrKeysData[5332], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[3254], PatchrKeysData[1296], PatchrKeysData[7995], PatchrKeysData[1574], PatchrKeysData[6863], PatchrKeysData[5999], PatchrKeysData[2591], PatchrKeysData[7510], PatchrKeysData[182], PatchrKeysData[8094], PatchrKeysData[4377], PatchrKeysData[1263], PatchrKeysData[4740], PatchrKeysData[6059], PatchrKeysData[2121], PatchrKeysData[6294], PatchrKeysData[2339], PatchrKeysData[3410], PatchrKeysData[2990], PatchrKeysData[4926], PatchrKeysData[8455], PatchrKeysData[6385], PatchrKeysData[377], PatchrKeysData[8384], PatchrKeysData[1092], PatchrKeysData[592], PatchrKeysData[203], PatchrKeysData[7019], PatchrKeysData[1335], PatchrKeysData[1685], PatchrKeysData[5765], PatchrKeysData[7284], PatchrKeysData[4906], PatchrKeysData[7161], PatchrKeysData[7351], PatchrKeysData[4030], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[3872], PatchrKeysData[3340], PatchrKeysData[2255], PatchrKeysData[3913], PatchrKeysData[843], PatchrKeysData[7466], PatchrKeysData[8127], PatchrKeysData[8881], PatchrKeysData[5646], PatchrKeysData[7968], PatchrKeysData[7786], PatchrKeysData[7940], PatchrKeysData[802], PatchrKeysData[4472], PatchrKeysData[6675], PatchrKeysData[8105], PatchrKeysData[3195], PatchrKeysData[2672], PatchrKeysData[2710], PatchrKeysData[7569], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3559], PatchrKeysData[4835], PatchrKeysData[4827], PatchrKeysData[1261], PatchrKeysData[1466], PatchrKeysData[1821], PatchrKeysData[3823], PatchrKeysData[1169], PatchrKeysData[7090], PatchrKeysData[101], PatchrKeysData[7544], PatchrKeysData[5661], PatchrKeysData[6931], PatchrKeysData[4413], PatchrKeysData[1663], PatchrKeysData[4561], PatchrKeysData[1708], PatchrKeysData[6782], PatchrKeysData[7587], PatchrKeysData[7656], PatchrKeysData[8406], PatchrKeysData[8675], PatchrKeysData[783], PatchrKeysData[333], PatchrKeysData[2408], PatchrKeysData[3129], PatchrKeysData[1043], PatchrKeysData[2029], PatchrKeysData[2379], PatchrKeysData[4055], PatchrKeysData[917], PatchrKeysData[2353], PatchrKeysData[5975], PatchrKeysData[4770], PatchrKeysData[4419], PatchrKeysData[2733], PatchrKeysData[1471], PatchrKeysData[5934], PatchrKeysData[2763], PatchrKeysData[6908], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5040], PatchrKeysData[2933], PatchrKeysData[4914], PatchrKeysData[7079], PatchrKeysData[8113], PatchrKeysData[4214], PatchrKeysData[7537], PatchrKeysData[6744], PatchrKeysData[5091], PatchrKeysData[3921], PatchrKeysData[8096], PatchrKeysData[114], PatchrKeysData[2814], PatchrKeysData[7828], PatchrKeysData[6411], PatchrKeysData[5919], PatchrKeysData[1890], PatchrKeysData[659], PatchrKeysData[3930], PatchrKeysData[1393], PatchrKeysData[5034], PatchrKeysData[3959], PatchrKeysData[5073], PatchrKeysData[8098], PatchrKeysData[1239], PatchrKeysData[1598], PatchrKeysData[8361], PatchrKeysData[1634], PatchrKeysData[3495], PatchrKeysData[9068], PatchrKeysData[1356], PatchrKeysData[3790], PatchrKeysData[1019], PatchrKeysData[6499], PatchrKeysData[7739], PatchrKeysData[6713], PatchrKeysData[8325], PatchrKeysData[1906], PatchrKeysData[6979], PatchrKeysData[5415], PatchrKeysData[9184], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[6067], PatchrKeysData[8602], PatchrKeysData[7573], PatchrKeysData[8868], PatchrKeysData[5745], PatchrKeysData[8901], PatchrKeysData[2826], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[3876], PatchrKeysData[9099], PatchrKeysData[603], PatchrKeysData[6031], PatchrKeysData[3385], PatchrKeysData[3349], PatchrKeysData[6740], PatchrKeysData[387], PatchrKeysData[7818], PatchrKeysData[5397], PatchrKeysData[6150], PatchrKeysData[3070], PatchrKeysData[4374], PatchrKeysData[6381], PatchrKeysData[2859], PatchrKeysData[7211], PatchrKeysData[47], PatchrKeysData[430], PatchrKeysData[4402], PatchrKeysData[3702], PatchrKeysData[7099], PatchrKeysData[8899], PatchrKeysData[1774], PatchrKeysData[2566], PatchrKeysData[1833], PatchrKeysData[5245], PatchrKeysData[1421], PatchrKeysData[5403], PatchrKeysData[3398], PatchrKeysData[4848], PatchrKeysData[1610], PatchrKeysData[8955], PatchrKeysData[1490], PatchrKeysData[5708], PatchrKeysData[4368], PatchrKeysData[1927], PatchrKeysData[2543], PatchrKeysData[5495], PatchrKeysData[7741], PatchrKeysData[2257], PatchrKeysData[5566], PatchrKeysData[2758], PatchrKeysData[8619], PatchrKeysData[6535], PatchrKeysData[5030], PatchrKeysData[4107], PatchrKeysData[6355], PatchrKeysData[3104], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9218] = "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_Mn20V1yrGBmqBIzQjAthJtqZVqTywt31rra6woW2t/iXfpUsbqJIFSKsFx7/z6sLePIFF/uB7CJ4G+wWvXrcm4tn7pgNHmpi633PW7ZIpBQ2nE+fKPFb9uZlDxAkepQkdkem+o35wYIwzrpWjHJF7sPDJb4QY8p5Yd3FoxiX1ONUMFjsfTPCWrZ+PexxYs+x1njFgCzDZvBWnjisDmyWmDW3OceC5XscVmX5Y0fW4mNS1yNAdGiPPSd19dBTlPmszjz4OzpyZFdTof8f2QVRwZWkn+As0VTM2CFHB887Frp1XtMgI2HvsbWbLll3tKjO7+McI4XqzBLHtT82cmkB9hJYsNxxvlXPU5q2r6he+WbEf2CwWhOx51aJQ/czkhgANdCQku7jrwImqxkAdd79V7h/+wm4daNGVQKEZMh4eLPEXcW6e9xA5pbOuyKwocVOdq9xrSeH6VGVmCMNCZO/cAHQ7ibdXt6HmARxrTP7UYNeIzDmr7Hc5OyAobXQPdULZcEZROR37il++KaHIe3pDnTURNWQ0dIJuv/XNb7psyFJ6IQrwmJXema4JP+6NhHbK6y+svg6+0W9Og56OztoxOjC9ThigzFl990Y6tP0f6p+UY4sHi1BzvjfEATB4kpHZoRNUpB9hLb5VsMkOOVHOWoeDaPeYdsDvbTNf8fyjclBNiN5qPqALlsuHuXJEYBeT2Ly9qfpNK5GZaNohIkR+Z+qKOPnRMvKMTmZ6YtvknBf9B9tWTsVUM+/6uMZQnRT821PSFmLLTQDkPxeoy80g2TG87RHqTVrLc6Q+ymcLkLD4wa+C6NOfdmEkMPLYfVvetjy5wLkHQxtJ0fo4/6V7pMC/wMAzMqmYeaTkI2TYqSxC2xP4VKu30z6eQf0u+3rAXuXcB/8pg24J6Jq67PSwjo/4YiyTkjwMdvbKXM2kTl6bjseXlBAVDistsThDFZXCjntBo1-vzGrBPrlYs/kJk4D8Hjv/xP2ilpJMSbwF5IMMufj+DpPemx9LRs9pOxpW7h1GGRabD0vgpAhsxM4maBVX7AcZUt/gx4iA2Hp7pgiDyQKvDGbzlu0PhOvd/+hrcQ7tCrDhM4EqcIwv9Q9L3YrzB5og05wICdXXN7nEGYTa/GDj0WzpAgsv8Mx7U5SS6SUtv1UpFYRGfen/xrLpakU1LjmhvW6kqz1GEU/xmKUARp1ILclIuzpbn0UrGdwQRdiJ8ome80YI0G12XxLX5wNpTY55/Z6VAuKnZqmLn9ikWq7vSkte+s7HRKiLArn5dbVdcOVf7Hd2bS03vvItEvLmOVco/V7TZkz1aMh6D5iA3DrUHhDK4dKd9xrwuiQ8jkgk2vl4Mcayt7Bq3B5qbnFBuZCyI0Wq0hlrjO5VrutA5oMjQK6O36mh1uMC3szTQnjTnRK+h3252g+/QglGuy2FaSb2L+Tfv93sh7hh+tNrCDR6bnwc1CB3+GSqvB9DFF+Acs+kWAUHWcF0X1BwfR/hiBZJxR2msqe4ybcxZUmmg+Gv3mmvUltOs46ZR1zHIslx7EEUgasxTOc7MhXUxkDrH/EHUgeYI+gQTOSoFsTlFfOQipX0m3b5ujOehFJZDY17NaL7xRDaV3c8BJjHaj9Y3JQTe96hPJPpGyeh/hXxX5Q8fOMezLm2kBL0MaMs6C7mjFwgRiD8e6RSo2Nbg8uVmeHYZO609cncEq3P6BdHF0Mptgf6/EeLGX+/OlnEfEB+1G6yyxn21HxZpmlEbUD6Nm+v0fi+BpNYvyni4o5dyCDu8ddZ3Fny0L9BkN9FZUsy1KJkddZmd/V/SUn5l2AS95DSUw7IxyDNGKusrmcoKwcE55/sZFGQfNll1Av9LenoTPKAQuBXh17saqvMgUHIIctV2jSup9+IKZs7u59JNFzAWd7Vf1BK7hYC1Y7eOdrgMYeprpZ3XJFQaL0bwi2OdnwEYhwssN9NUZuQn9okXIHOMWbR+ejvxxVgJXtw0k_WdxNdwmqY14j/5dTY/hdPF8TCpqhIhH4Lp8k4tqNhFEm+a/TG44j4X1bT+fP/7LawpvMRaHhYOhdLXrzq0qHx1tdqZcvkAIOUmcvud3l1uiYbklj2d22UnfO6ml5dWJw4bY|fpKpdUv8e1VGbtngFmLdxnDMk3bU2RIc0k97Xp4Wd2+h2H74BqBv5SRyzoi238pDvwdONYWT4+uZswMRppHSMceIR3VHVOS1PwsX5MAHhLVUahWDgJGzXadJfQr7/fQmGbdby92eZ/1aMicPtBDND/LXvXp6S5ZfE2FDfbqEAkzxoghnLaPhP2PfbgcNW2L+3jEEC17nXkYzZw9m0SvCyhhCTBfNLUrp5gd6vd2+ZyTAI6yA5G2i+RkOfQ3APpYk4Z6WkZ44aewlh09jYll9hosOf5LA1dJ3VEt8fqN1zB499TvU/Lc9tl95mx8LxkYJjqAatvI4HjrVy58Mg4GaqGZX8t1rnYL9MpQWfA6SmrJChFoUtYW77w10ek330Eg/xK7za2wI/Dq9rSierdYKUQBZbpPIX+f/sCoip6bS6Q3LT7vumRkYVcYdt5V+WjWHXTYTKmNlMJymlW03HJaHQWwcK0+B4PSQRvgbbn0eiw1mbT0QrzMRBhUJRd+i/t67v8nn/Ebpp+7boqorlcs1LyV7ZArcHAJcgfX30okqomJr4l5+KO1e4xwtc9wnFjH3Ue2OiLRVYHiwgVQkJWiriezo07GjNz7kWcp9NoC+fxrZoycUkBFlOut5HQGPNnjXrPDD0ffhJQTPhD9W1jb49oIvSsczrtziMY7q/0VbjdHAdp4mKqZCoJz99gqon3vtvuRGbvJ33cAzA1U4Amz2+1uOC5JHrOCdC+jZh/os6BZ+nae4kLH/P3BlkoGRQ0+YveHrYgBSsqkVm64c789cDErtOlnzz2ZxVeuQZKTO7h64KD9k92+7MEN1zKk913eOty5TFIVtWnJn9F/Pg0U8n+3JbmNfKjYT9h3vFGeNx3nxryWyKs99a03bv2AAFUkSqgBB2lgJEXBx01tPLKwUJrGmz4mP9Qhe2G4wxhx3ccwvn/3KFU5J8uo0ReHrNJIntctWJTkiIf5Ab+M1b3dmXrpfP2coVIrRp0ZxYzOi0ogYaeaEdUxbywO+QC/8A6YOhNQcbuLw9dKW84j1T59r71kPpVB5RGZ+wFXoRKNpCf+gACu1WyGoIf3A7hZa8x9Wp65CUmoVudVlVEbQ2UJRKHSIcKvqy1ynaANxyAF2o02+bQf4Upt+rCxgh4oLKlxH7ETLwuA3C4xsb5vff29a-6qkxSvZ0pVzsYrCe0n0LLi+JQJME49k8Dupq9EoohuyRR2Z8eZ9iuLL1lrXfsmpk0xXaA12YX6DwVb89IWiEkbU96u3DdaywceAn9t+JYjFfzj8EbwW5KoZKTKiIzX8tyiLf4xutF1qNaLI+xcYqqyU2Dlz/Hdqq3ELJoOMUk+iHAcHQcSSYcrIXQrtV3Ht9U2f/BgbQbU+3fUUywOdy6vUefa3Vl8kv3Zr9YzHEG0ahV5upIZ8owPmzRUEN8ehlAyLcFWrZb2CoVej4j/TnLbmOUi/yNYKBr0tkuzRTC5sopCozYZJGNfGgSioZO/1nmS/5qQjHqkEfBO+TjP97IdubCnveJMRy7Y9ZnpCQjcDjAFbRSv6BEnOw7qx0HsK7t9s2JzH4w9DFslYRbZjfxyVP0XMGDS+DU1bKH6/atlCVwCSX7VYDkXczydJ1vtQn4IJMQE44FB/eEr6YZoPjTQdT3P8eeio9CnmiU7oJ9C2BGRHF2DrHZUfi97eb/yBg4MeAsEJQnbquu/1wLFjQZ3MPll2tWdfCOO6B82XGT8J89NB+OtVElb6hVM55ZUv6YJtpS0sMKWOmjYZalnLwi1AyJ6j3nQRkmMXOlo983xhgAqtcJXizcQqB02vpU8CVOuV+SfOe8svPg4n/JqbpQxMjE+TWW701qfLkcYL54jesIscerdUb9FRrbGFJr7EvaZN+pgIb8493de6oKkR1w42INzshHerJ5huSIle9n4i0srtu+zHex0jQq1+6ivnALxeSFccURYPhcX/+AU4Yn/KGYaCQAiq3oSPxA0qwNiGHquzU0QhyhjkZOTTcfag\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
