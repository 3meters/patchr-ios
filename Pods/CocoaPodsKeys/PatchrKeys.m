//
// Generated by CocoaPods-Keys
// on 05/10/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5746], PatchrKeysData[2441], PatchrKeysData[3930], PatchrKeysData[4861], PatchrKeysData[3736], PatchrKeysData[3510], PatchrKeysData[4588], PatchrKeysData[3673], PatchrKeysData[3903], PatchrKeysData[1198], PatchrKeysData[233], PatchrKeysData[3816], PatchrKeysData[5610], PatchrKeysData[2979], PatchrKeysData[469], PatchrKeysData[5925], PatchrKeysData[348], PatchrKeysData[5789], PatchrKeysData[397], PatchrKeysData[1675], PatchrKeysData[2260], PatchrKeysData[6175], PatchrKeysData[6189], PatchrKeysData[3484], PatchrKeysData[5368], PatchrKeysData[951], PatchrKeysData[4943], PatchrKeysData[1416], PatchrKeysData[49], PatchrKeysData[1295], PatchrKeysData[645], PatchrKeysData[4599], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[4237], PatchrKeysData[2668], PatchrKeysData[1786], PatchrKeysData[1481], PatchrKeysData[2896], PatchrKeysData[5401], PatchrKeysData[2570], PatchrKeysData[6383], PatchrKeysData[1301], PatchrKeysData[2082], PatchrKeysData[4086], PatchrKeysData[5838], PatchrKeysData[5262], PatchrKeysData[4747], PatchrKeysData[2529], PatchrKeysData[4912], PatchrKeysData[258], PatchrKeysData[1115], PatchrKeysData[5502], PatchrKeysData[4447], PatchrKeysData[1066], PatchrKeysData[4466], PatchrKeysData[4950], PatchrKeysData[2005], PatchrKeysData[5161], PatchrKeysData[3683], PatchrKeysData[3778], PatchrKeysData[671], PatchrKeysData[6291], PatchrKeysData[2459], PatchrKeysData[436], PatchrKeysData[4989], PatchrKeysData[1156], PatchrKeysData[4867], PatchrKeysData[2954], PatchrKeysData[6358], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[641], PatchrKeysData[6516], PatchrKeysData[5785], PatchrKeysData[3924], PatchrKeysData[974], PatchrKeysData[3978], PatchrKeysData[2149], PatchrKeysData[4149], PatchrKeysData[1345], PatchrKeysData[3813], PatchrKeysData[2784], PatchrKeysData[6224], PatchrKeysData[6142], PatchrKeysData[1026], PatchrKeysData[3973], PatchrKeysData[2695], PatchrKeysData[1847], PatchrKeysData[485], PatchrKeysData[4197], PatchrKeysData[6478], PatchrKeysData[699], PatchrKeysData[5564], PatchrKeysData[2104], PatchrKeysData[6399], PatchrKeysData[1353], PatchrKeysData[1549], PatchrKeysData[3725], PatchrKeysData[2672], PatchrKeysData[591], PatchrKeysData[2796], PatchrKeysData[4724], PatchrKeysData[3282], PatchrKeysData[3893], PatchrKeysData[587], PatchrKeysData[2740], PatchrKeysData[3224], PatchrKeysData[6192], PatchrKeysData[3812], PatchrKeysData[4119], PatchrKeysData[1453], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4778], PatchrKeysData[914], PatchrKeysData[4923], PatchrKeysData[1544], PatchrKeysData[4749], PatchrKeysData[719], PatchrKeysData[2965], PatchrKeysData[5273], PatchrKeysData[5931], PatchrKeysData[3263], PatchrKeysData[3578], PatchrKeysData[6149], PatchrKeysData[223], PatchrKeysData[4150], PatchrKeysData[4076], PatchrKeysData[3942], PatchrKeysData[470], PatchrKeysData[6355], PatchrKeysData[2055], PatchrKeysData[5322], PatchrKeysData[5602], PatchrKeysData[1082], PatchrKeysData[1611], PatchrKeysData[6331], PatchrKeysData[6086], PatchrKeysData[811], PatchrKeysData[426], PatchrKeysData[529], PatchrKeysData[5997], PatchrKeysData[5538], PatchrKeysData[1096], PatchrKeysData[2950], PatchrKeysData[4145], PatchrKeysData[3847], PatchrKeysData[6130], PatchrKeysData[4467], PatchrKeysData[3539], PatchrKeysData[844], PatchrKeysData[964], PatchrKeysData[3943], PatchrKeysData[2636], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1767], PatchrKeysData[6284], PatchrKeysData[2754], PatchrKeysData[5934], PatchrKeysData[4919], PatchrKeysData[3975], PatchrKeysData[1950], PatchrKeysData[1634], PatchrKeysData[5354], PatchrKeysData[5808], PatchrKeysData[3146], PatchrKeysData[579], PatchrKeysData[5069], PatchrKeysData[4969], PatchrKeysData[2641], PatchrKeysData[5909], PatchrKeysData[5265], PatchrKeysData[2831], PatchrKeysData[2087], PatchrKeysData[2661], PatchrKeysData[5257], PatchrKeysData[100], PatchrKeysData[5633], PatchrKeysData[1030], PatchrKeysData[3693], PatchrKeysData[4699], PatchrKeysData[374], PatchrKeysData[2133], PatchrKeysData[3461], PatchrKeysData[5192], PatchrKeysData[3793], PatchrKeysData[2963], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6518] = "HPWh9cNG9alzU07iGShIEvPHFbTm3bT+lujiDcGk1g/xy70kX4rzYZX8wYSRENtKqjsH6wSMi3brjP6t230bUnCILtxkqwpeuR0R17UtCD6VtzW+JuwxPiGIs29+Lg/UHaDEZz9KVDMMdcQYdPdOi23Ly2VlAmlWZjot5TDyocA8ahfUaNCm5zQ4A6aVXeAX+sY11NsBEP7IUlXuWIQrZIXv2l+nR+sK21PHyburacwt0rYrW/j2VjFH22V49GtaKA61u4KdjT2K7qTLzDpSrlAerDkXuFwgYQpCAXwRibhVHterzhqdZCDigibz4nh8yYANFFbxE0yKNd1JeShW9pVEc8yG7hHZ1WPzI91YskIpmZk7+GPuYM4/UkY5lUj94KrmZIrqQ8qUc1kecqomtu9sQ08/GWts+SDnzimq9kl0e1T5dmcVbegomZ8m1Evhv5figB0QoioMv47+T0Uaw99t/J3hjpGvFIpmYetYuaHPx929dKb50K60vFrrjwxe47TA0aeXw2SitYmWdz8Luodo8ZV0AyteKvadm53V+warlquVjIqbq99jW36jQwJzGDy3QjaIe5Ngi4uUJBa4xHyxUUHbzofbM7+Ns+21ZFPPYcscMpbjOuRNbNB+tT2PM+lGi0YvKFi8MxdW+ZB36KwDTgBRwYqeHHdWEqLMyp9ouQNKjZUR18PZs3iiixbuTKL0sUS1lcdwYWyi1qSnAYGbkvjos95q9HPXm62pmGm2o+H96DWX8yVuaSRTk/Gp8JoXJYa4yreNF91a86tBbdlqNNgoTjwqpPSkMGDrU542w6uoeLSXg3Efew6ZO5UvbWULY/MIH1LHnCARp7nE0XKgUeJkBBXKW4DwBDOWT2kMNSYXO8uiv6z4MXxg57y2pwNx5lR46uO2pR9l4be3iBi6UgtqTkBKUoJe0XfalYpCs0RS741t/bc3LCpsCq8/7D2lSy5PLRsjuwSaqBrZ9J6KiERwin9at1mUWmCQa1hpFbwZxsWnckcdBM6Xnc35FVkagG4XVcRg+2oq1vkKX08Elpg4xk4sbKz0FndafT2WkIRTE1RDqU8MhSQZL/pDcBLRnM8ulKIdLOV+7B0JBjTy76o6IErNc+viUaN2CbeJ6WQdW+EBhy4TLIwt57VOIy1+2F0A1axMjZa2ojyisqFtxrbXv+p+NfVYJMEZLu/Zjvf0ovr4AxmXtw+lydr/SP5c0WPB24Y16UkXaD8t2n8oSbkoJjH1FSffE2z2Zn2TmVZ8cXdyOZhcssY/9PnnEVYLVWw4tORQ9lwciYFjR-ilYPVi7kqdx+dWN3CCMFYlFDElLWFAmDeZTt24+uI0Y4KVlyNrrhWdafhiXSI6+Ti5rK2k5Y+TvK2S3/0C60UEokszIT81LrXyE5aWgkWp57I3Hezjd2pZF3QcskqETWSJDSD+Z0IAKaKUUgijTY/RQSFTXlnqLkooG6c6SOgn7NDT4zJmxcNCXeK/cOcXIOMf9gjc2xVKACtFtnuYITx6h8TPIXEKXHM/taMIQeZmX8T5XfAx_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_W16fOyhfkT/ar4ARiGFshHgLgwyXllpuqWM1mGiFNG6vigEQVo8KWPSlNuxn2vquwVaeOdX4LBwJz9/Ij0loX3UKTAKMObWRuNDoZyGF+pTV142YowauqLTi2cfHSLbXQhH6jkUR8oRUOfrRfPggXpYfznEoT8fwvhQwskq6MZJWweehlBwh8V/x/AUOr29uciEHrmrdNOfLERTI1lcYKFeczbUA9996oPS8beHGWLQK3fGqpJI0fcNWZi6BGiTeo6PoaeuGTrFUKQgTFVZtXrqZTPKdDXo9ZyRsPIHg+4KFLjeWXboWrHnJElstCPsqoRBMh8IX4D3cRazTF14UAoo8u3ppcl8xcaCFdi/b1FF0pekhKHSdVT/NAED4WxoYSf8VbCc/sWNx+Yh3JOT3MpWUjQ/UfcxJKs0WmOVuf9bMOccEpOlCrdPYx5UAqNjZPIE4odN2FvEAjBFGefFx/N9ydMsHUbA0yb7UFTUfifbAYPQlu9PwuI1XHNawJCBqJAKVEYBKSgKh+BQAmgqOjw6xdkIRQvjjIWWhZKsUYZy8P/tSvAM7ggS3GyQGsdGkPGUZ0uBIe\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
