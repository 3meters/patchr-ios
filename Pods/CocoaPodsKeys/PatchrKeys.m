//
// Generated by CocoaPods-Keys
// on 31/05/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6227], PatchrKeysData[5926], PatchrKeysData[120], PatchrKeysData[4946], PatchrKeysData[1203], PatchrKeysData[3333], PatchrKeysData[1161], PatchrKeysData[5539], PatchrKeysData[1645], PatchrKeysData[6241], PatchrKeysData[4907], PatchrKeysData[637], PatchrKeysData[4542], PatchrKeysData[5980], PatchrKeysData[6264], PatchrKeysData[2954], PatchrKeysData[3277], PatchrKeysData[3265], PatchrKeysData[2512], PatchrKeysData[754], PatchrKeysData[538], PatchrKeysData[36], PatchrKeysData[3552], PatchrKeysData[1756], PatchrKeysData[795], PatchrKeysData[1274], PatchrKeysData[4473], PatchrKeysData[1249], PatchrKeysData[3780], PatchrKeysData[5259], PatchrKeysData[2978], PatchrKeysData[3870], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[845], PatchrKeysData[443], PatchrKeysData[2998], PatchrKeysData[2796], PatchrKeysData[2538], PatchrKeysData[3829], PatchrKeysData[1550], PatchrKeysData[3954], PatchrKeysData[3627], PatchrKeysData[5033], PatchrKeysData[3572], PatchrKeysData[4810], PatchrKeysData[1788], PatchrKeysData[1536], PatchrKeysData[1623], PatchrKeysData[4787], PatchrKeysData[5812], PatchrKeysData[5460], PatchrKeysData[5513], PatchrKeysData[4725], PatchrKeysData[3540], PatchrKeysData[3537], PatchrKeysData[2305], PatchrKeysData[3777], PatchrKeysData[1496], PatchrKeysData[3476], PatchrKeysData[6097], PatchrKeysData[672], PatchrKeysData[5112], PatchrKeysData[4932], PatchrKeysData[4068], PatchrKeysData[555], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[3584], PatchrKeysData[1292], PatchrKeysData[3223], PatchrKeysData[2764], PatchrKeysData[960], PatchrKeysData[4631], PatchrKeysData[3130], PatchrKeysData[166], PatchrKeysData[5981], PatchrKeysData[1018], PatchrKeysData[5385], PatchrKeysData[5670], PatchrKeysData[1344], PatchrKeysData[5530], PatchrKeysData[4914], PatchrKeysData[2142], PatchrKeysData[900], PatchrKeysData[2881], PatchrKeysData[2250], PatchrKeysData[2281], PatchrKeysData[2007], PatchrKeysData[962], PatchrKeysData[2127], PatchrKeysData[1144], PatchrKeysData[971], PatchrKeysData[3695], PatchrKeysData[4225], PatchrKeysData[3201], PatchrKeysData[3028], PatchrKeysData[2174], PatchrKeysData[3357], PatchrKeysData[4315], PatchrKeysData[1079], PatchrKeysData[3989], PatchrKeysData[150], PatchrKeysData[3656], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[967], PatchrKeysData[2672], PatchrKeysData[2724], PatchrKeysData[388], PatchrKeysData[4876], PatchrKeysData[5895], PatchrKeysData[5766], PatchrKeysData[870], PatchrKeysData[2484], PatchrKeysData[3770], PatchrKeysData[572], PatchrKeysData[3104], PatchrKeysData[5309], PatchrKeysData[3213], PatchrKeysData[5696], PatchrKeysData[483], PatchrKeysData[670], PatchrKeysData[3455], PatchrKeysData[2594], PatchrKeysData[1961], PatchrKeysData[5239], PatchrKeysData[5862], PatchrKeysData[381], PatchrKeysData[4220], PatchrKeysData[5811], PatchrKeysData[4728], PatchrKeysData[1849], PatchrKeysData[6095], PatchrKeysData[1479], PatchrKeysData[6195], PatchrKeysData[4106], PatchrKeysData[4853], PatchrKeysData[5066], PatchrKeysData[5840], PatchrKeysData[2892], PatchrKeysData[5041], PatchrKeysData[2671], PatchrKeysData[6009], PatchrKeysData[5123], PatchrKeysData[3649], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[3220], PatchrKeysData[799], PatchrKeysData[2253], PatchrKeysData[909], PatchrKeysData[4480], PatchrKeysData[3887], PatchrKeysData[1032], PatchrKeysData[3522], PatchrKeysData[3448], PatchrKeysData[2396], PatchrKeysData[589], PatchrKeysData[3857], PatchrKeysData[5854], PatchrKeysData[1200], PatchrKeysData[4626], PatchrKeysData[5842], PatchrKeysData[4100], PatchrKeysData[3863], PatchrKeysData[2712], PatchrKeysData[2798], PatchrKeysData[2708], PatchrKeysData[2947], PatchrKeysData[5387], PatchrKeysData[3251], PatchrKeysData[422], PatchrKeysData[4596], PatchrKeysData[1048], PatchrKeysData[6228], PatchrKeysData[5944], PatchrKeysData[3914], PatchrKeysData[774], PatchrKeysData[2121], PatchrKeysData[5554], PatchrKeysData[1049], PatchrKeysData[1094], PatchrKeysData[1338], PatchrKeysData[2589], PatchrKeysData[2919], PatchrKeysData[4761], PatchrKeysData[4202], PatchrKeysData[1440], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6278] = "uSi2NJdfgrPpExceTRsE35bgaJvas8lZBxRZ0mT+czw+nHiF1Ya5jey0hHxZgAHH7DrtpZED3mTCyYQ0+42WBkDSde2QwU1BzDZMBmiS8OycspzA/d3HjK2V3IAh+2/29W/Q00HLqyCVgsVOKwsz2OaoqCaQEUyOrqN0x64eBraKUaQLrVthCt7LX8gRFJzFkjZAu4Cdmoiu7qSyqEgl1ApaW09YJc+z28UQDD1V+VKL3sxo2PASDGH42U5eGcUeJ74oIZDjU+1E6f/7x4RKu9M8jYgm4JaUL10ZAcVuEEeTnxhuRQ4QP9pQhLISIjtJX0JtfxBGsVK+s6ueXsuNYS0JcoA1be52fzrgDHcXo/AT4vqfBbSUXAzwK/S6KEORynm58fagSOsOVfJCBflny2/TXAXBNaYS5apsLUE74r1WIkO/amdM4/BIjgDc/L8zlLpqGcNZL4vCHwRPdYd7Ysnvgj5rh7nmkQ847LHRfFtTujPNHKP/hv+YpC5tYCZjBf/FX2u/7omywl4MI9+7Q6fVbO4Ox8h1KUISen0/RkV3o4Br/vxDZyM+OA/YyZ7hZPbiGbQntFMjgaiTLdWSE/TcvfR5r24aSqHnnSHaTTXsrMTWwfejqXt0KMoEI1bZRIhIUmkNWg4RIlsjd2tOIzOw2nI/XJ9j2tKGCqGf5GQOUcvDDlES9TJIN8+SMxlfJg6WLYYWAO2aqgUcA3zlW/ffA7rfnTgOUM/PNDOb9sfGncd0hk9bP0gghyr4dzdbAvtkJOlXiogjGmt43ec+D9qxQXa3EiceGn50evDlykKQrpa/e4RtMMaCDaueSPp/koLSWEm68XaXP3R5RZi5bCGKqWNlj2GjhVfN/uzQZp4FdXYT/SQ98mJydNxoCgWuHT+z6gMMcRaF8_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_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
