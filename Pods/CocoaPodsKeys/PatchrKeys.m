//
// Generated by CocoaPods-Keys
// on 28/12/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[11584], PatchrKeysData[1786], PatchrKeysData[11611], PatchrKeysData[6726], PatchrKeysData[3393], PatchrKeysData[12993], PatchrKeysData[8744], PatchrKeysData[5713], PatchrKeysData[10599], PatchrKeysData[10712], PatchrKeysData[10389], PatchrKeysData[5579], PatchrKeysData[10906], PatchrKeysData[10068], PatchrKeysData[8433], PatchrKeysData[7032], PatchrKeysData[9657], PatchrKeysData[7188], PatchrKeysData[9263], PatchrKeysData[12738], PatchrKeysData[5299], PatchrKeysData[8298], PatchrKeysData[9473], PatchrKeysData[2441], PatchrKeysData[1449], PatchrKeysData[1280], PatchrKeysData[5907], PatchrKeysData[1340], PatchrKeysData[639], PatchrKeysData[12000], PatchrKeysData[12722], PatchrKeysData[13209], PatchrKeysData[7749], PatchrKeysData[12302], PatchrKeysData[4777], PatchrKeysData[6925], PatchrKeysData[2686], PatchrKeysData[6016], PatchrKeysData[8486], PatchrKeysData[6855], PatchrKeysData[3614], PatchrKeysData[8168], PatchrKeysData[1803], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[5182], PatchrKeysData[10060], PatchrKeysData[9633], PatchrKeysData[12063], PatchrKeysData[8854], PatchrKeysData[3878], PatchrKeysData[7165], PatchrKeysData[1698], PatchrKeysData[4098], PatchrKeysData[2154], PatchrKeysData[2219], PatchrKeysData[12095], PatchrKeysData[13010], PatchrKeysData[3567], PatchrKeysData[8207], PatchrKeysData[10952], PatchrKeysData[1798], PatchrKeysData[4706], PatchrKeysData[2762], PatchrKeysData[8786], PatchrKeysData[10645], PatchrKeysData[3963], PatchrKeysData[5358], PatchrKeysData[10834], PatchrKeysData[9734], PatchrKeysData[1214], PatchrKeysData[7306], PatchrKeysData[1910], PatchrKeysData[915], PatchrKeysData[7375], PatchrKeysData[10565], PatchrKeysData[10574], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[6578], PatchrKeysData[12948], PatchrKeysData[9108], PatchrKeysData[12174], PatchrKeysData[3221], PatchrKeysData[12138], PatchrKeysData[8587], PatchrKeysData[13246], PatchrKeysData[1125], PatchrKeysData[13046], PatchrKeysData[4229], PatchrKeysData[6229], PatchrKeysData[11376], PatchrKeysData[2503], PatchrKeysData[4175], PatchrKeysData[5595], PatchrKeysData[2343], PatchrKeysData[9994], PatchrKeysData[8657], PatchrKeysData[13003], PatchrKeysData[2820], PatchrKeysData[7977], PatchrKeysData[6896], PatchrKeysData[11367], PatchrKeysData[5604], PatchrKeysData[10055], PatchrKeysData[12401], PatchrKeysData[6510], PatchrKeysData[8938], PatchrKeysData[1489], PatchrKeysData[10639], PatchrKeysData[13025], PatchrKeysData[10780], PatchrKeysData[6455], PatchrKeysData[7126], PatchrKeysData[9688], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[6616], PatchrKeysData[4191], PatchrKeysData[11569], PatchrKeysData[5347], PatchrKeysData[10651], PatchrKeysData[7646], PatchrKeysData[12131], PatchrKeysData[690], PatchrKeysData[10657], PatchrKeysData[10655], PatchrKeysData[1889], PatchrKeysData[3498], PatchrKeysData[8439], PatchrKeysData[5367], PatchrKeysData[1578], PatchrKeysData[6263], PatchrKeysData[10477], PatchrKeysData[10013], PatchrKeysData[3803], PatchrKeysData[388], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3593], PatchrKeysData[5117], PatchrKeysData[9783], PatchrKeysData[6654], PatchrKeysData[1828], PatchrKeysData[1792], PatchrKeysData[10070], PatchrKeysData[2524], PatchrKeysData[6747], PatchrKeysData[10623], PatchrKeysData[5424], PatchrKeysData[893], PatchrKeysData[7248], PatchrKeysData[5767], PatchrKeysData[941], PatchrKeysData[11643], PatchrKeysData[5168], PatchrKeysData[5320], PatchrKeysData[10521], PatchrKeysData[376], PatchrKeysData[6422], PatchrKeysData[12995], PatchrKeysData[7501], PatchrKeysData[2829], PatchrKeysData[8727], PatchrKeysData[11429], PatchrKeysData[2799], PatchrKeysData[8897], PatchrKeysData[5102], PatchrKeysData[2615], PatchrKeysData[9349], PatchrKeysData[4601], PatchrKeysData[6472], PatchrKeysData[11518], PatchrKeysData[8062], PatchrKeysData[5982], PatchrKeysData[7043], PatchrKeysData[13001], PatchrKeysData[7110], PatchrKeysData[7211], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3812], PatchrKeysData[9135], PatchrKeysData[4284], PatchrKeysData[8153], PatchrKeysData[12646], PatchrKeysData[1563], PatchrKeysData[10973], PatchrKeysData[9080], PatchrKeysData[616], PatchrKeysData[7644], PatchrKeysData[7920], PatchrKeysData[1891], PatchrKeysData[4534], PatchrKeysData[3842], PatchrKeysData[2701], PatchrKeysData[7307], PatchrKeysData[7304], PatchrKeysData[8990], PatchrKeysData[7615], PatchrKeysData[10908], PatchrKeysData[10594], PatchrKeysData[10257], PatchrKeysData[4473], PatchrKeysData[9053], PatchrKeysData[999], PatchrKeysData[408], PatchrKeysData[2555], PatchrKeysData[5768], PatchrKeysData[8043], PatchrKeysData[5856], PatchrKeysData[1378], PatchrKeysData[1089], PatchrKeysData[2054], PatchrKeysData[3185], PatchrKeysData[1661], PatchrKeysData[13387], PatchrKeysData[7295], PatchrKeysData[906], PatchrKeysData[12737], PatchrKeysData[10155], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[10128], PatchrKeysData[2785], PatchrKeysData[4667], PatchrKeysData[6198], PatchrKeysData[771], PatchrKeysData[3794], PatchrKeysData[4253], PatchrKeysData[1402], PatchrKeysData[10610], PatchrKeysData[12660], PatchrKeysData[1837], PatchrKeysData[9479], PatchrKeysData[13222], PatchrKeysData[11954], PatchrKeysData[1680], PatchrKeysData[10322], PatchrKeysData[4734], PatchrKeysData[1282], PatchrKeysData[7129], PatchrKeysData[10669], PatchrKeysData[6487], PatchrKeysData[105], PatchrKeysData[10228], PatchrKeysData[9460], PatchrKeysData[2361], PatchrKeysData[6149], PatchrKeysData[3997], PatchrKeysData[10829], PatchrKeysData[11215], PatchrKeysData[9668], PatchrKeysData[1675], PatchrKeysData[8231], PatchrKeysData[10837], PatchrKeysData[7871], PatchrKeysData[6478], PatchrKeysData[6380], PatchrKeysData[3346], PatchrKeysData[3829], PatchrKeysData[149], PatchrKeysData[455], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[4464], PatchrKeysData[1172], PatchrKeysData[4844], PatchrKeysData[13227], PatchrKeysData[6598], PatchrKeysData[11484], PatchrKeysData[8698], PatchrKeysData[7549], PatchrKeysData[6284], PatchrKeysData[4761], PatchrKeysData[8533], PatchrKeysData[1960], PatchrKeysData[12686], PatchrKeysData[12458], PatchrKeysData[8368], PatchrKeysData[9331], PatchrKeysData[1961], PatchrKeysData[4879], PatchrKeysData[7746], PatchrKeysData[3299], PatchrKeysData[3642], PatchrKeysData[11701], PatchrKeysData[8614], PatchrKeysData[3285], PatchrKeysData[10423], PatchrKeysData[3720], PatchrKeysData[8197], PatchrKeysData[4585], PatchrKeysData[11982], PatchrKeysData[7763], PatchrKeysData[9682], PatchrKeysData[223], PatchrKeysData[12318], PatchrKeysData[4263], PatchrKeysData[6851], PatchrKeysData[514], PatchrKeysData[6237], PatchrKeysData[1930], PatchrKeysData[7017], PatchrKeysData[9427], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[7048], PatchrKeysData[6629], PatchrKeysData[13378], PatchrKeysData[5905], PatchrKeysData[5652], PatchrKeysData[2298], PatchrKeysData[11058], PatchrKeysData[3787], PatchrKeysData[11308], PatchrKeysData[7698], PatchrKeysData[5621], PatchrKeysData[85], PatchrKeysData[7442], PatchrKeysData[6822], PatchrKeysData[2352], PatchrKeysData[5374], PatchrKeysData[12947], PatchrKeysData[8061], PatchrKeysData[2551], PatchrKeysData[2132], PatchrKeysData[6889], PatchrKeysData[13178], PatchrKeysData[3195], PatchrKeysData[4094], PatchrKeysData[13106], PatchrKeysData[11052], PatchrKeysData[3327], PatchrKeysData[10158], PatchrKeysData[6499], PatchrKeysData[3271], PatchrKeysData[7016], PatchrKeysData[595], PatchrKeysData[11547], PatchrKeysData[11653], PatchrKeysData[11116], PatchrKeysData[6723], PatchrKeysData[6564], PatchrKeysData[708], PatchrKeysData[1268], PatchrKeysData[10737], PatchrKeysData[2130], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[11465], PatchrKeysData[10885], PatchrKeysData[4400], PatchrKeysData[3317], PatchrKeysData[2497], PatchrKeysData[13406], PatchrKeysData[10240], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[2835], PatchrKeysData[5441], PatchrKeysData[1942], PatchrKeysData[775], PatchrKeysData[2193], PatchrKeysData[1420], PatchrKeysData[12005], PatchrKeysData[1898], PatchrKeysData[12985], PatchrKeysData[10992], PatchrKeysData[7033], PatchrKeysData[8833], PatchrKeysData[3140], PatchrKeysData[7027], PatchrKeysData[6716], PatchrKeysData[6194], PatchrKeysData[2860], PatchrKeysData[9514], PatchrKeysData[564], PatchrKeysData[5857], PatchrKeysData[7939], PatchrKeysData[4023], PatchrKeysData[135], PatchrKeysData[8239], PatchrKeysData[10876], PatchrKeysData[5792], PatchrKeysData[8877], PatchrKeysData[3350], PatchrKeysData[12153], PatchrKeysData[9447], PatchrKeysData[12593], PatchrKeysData[1973], PatchrKeysData[9513], PatchrKeysData[13109], PatchrKeysData[6491], PatchrKeysData[9480], PatchrKeysData[3427], PatchrKeysData[5884], PatchrKeysData[10066], PatchrKeysData[2296], PatchrKeysData[916], PatchrKeysData[5209], PatchrKeysData[8710], PatchrKeysData[5092], PatchrKeysData[9693], PatchrKeysData[8523], PatchrKeysData[12033], PatchrKeysData[13283], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[13418] = "xey3bnbWWOWciEz9GQE97jS0h5XrOhvJu2Zj9lucVBbqAOXX4xrUe8bip2xOJgXSEEv3TSraStNNj/0RI3LUnbI+6MnJZvwN/JdJRsPhkT3nqQG00wy/imrEpniu9Jm0l2EpS5ncOc/eLYf1uIGihSHv+hGc3YIQAeCln1qJROxq3zAfQ4W92hXgctdRh2ZvW83eA/g0lOmt/TPaxGoIdThVEDCr6ab2NfwxEf+pdPGq7V7Sxkwp1P1DuTuZ7ZiDAxM/9XcTGwabl5yGfmpHsrDE60rIvj1IgB0MtEsmKsw5AK9TIFEHlCGXmKChzHt03lAabPucjsuxaFppL/NAkxInuarWlgjwVS7BayxYfJhjISFFVbw3Q1lAW+3olfO68+CLARzNY2G3BG5nJckdkE4hGU3jO1fQjhq0cOF1UqBB3fTRqQ7H0FrPdwNEvMv7nz8xSedDOw9IbXVxfBp+AqkT7ivq6rZtKdZXLFOxRPR4uiixypDY9k1BcVVG61HWOyfbqm3A7+H1HiwzOn0f8dfcD3TtJakxN3Xkb+RRaqveskci5PhH56WB7TVtStc404uVHmX65/Vp2I2ucnVk9Hfq2xrbrhgWJ6yVXoO3EBMTnF3aOfdW9ephOH3+1IO7UQaNnIpOME7r1u+WrurXxowrIpH5GD97hs1vGWZ+kVRQy50htf2gBbBx+WuxMbTPV1jGnVDy/GRzbBBvKP64POWi+Vd2cQl8ZA1YJPjZrzfy4C0EncsPBRtRqB+7wkctmXLlQnL6s6Xv09JzXqQMHwLkOGt5LSOkv9fGUy1T7RaB02B6WA8zHu2CVgzvaqKImgDwiW682f7trkMKREfHFVYqcTZvPRYZbpPfwFVuik1rjUkWe3Y3ORL53D5r2PMvY/FVz7wr6oHtpZcP44pcbc7rgeErcVm2FzE04eZqzs7bmeaNKTt00YMkvUnI5WrXtw+KhzZ5U+6jpcVJAhhUFKVD8mkQm0XIS+JNwjxOP3spj73dGLRx1vSqGr44CYBYAwFEhdNZz8/IZGo7iDNtdTb9izZlQyG1kqqQm1UI3/cAsUeahndIxuPG9/HIXdgTm9d4xIY0VZNJx8uS39HfcubofoN262Ed9s9Dy-zQL6gQDNQVPdnKddIb+wKprbRJxllx6y4yEyJTd6S37rqdf31KSA1Ce5rM0mMrUBEDvjqDj64MRao/INyLqVPSp408Ox46SmUsekLZKfd2mfnUU7yQbHVhcTLzYHI1iqGqcVGd1ttSQxCiSbpH1t4iBqCczzB7qFlVJAavz4Chho3pXdx0ASWhzU4QomT/UjEOaqfxSYzshK0cIUUGhsMdFEjvs+otYnqyZhOptKtackFbOd4+4wGneEOeYdBMS6TrTlj4gP3FlOE8ikYGke3sRjoB4id/WZqTCEJQ479HchN57+MtzddQGZAbl/iqNF2DxwLB5tThQYkDPmCziSFWxBWi53fERaNgm/jvOaEBsau4uE/243qF0E4bLXq0DZoZQR2w6AuzlAmcBMh0FVYBsPVsbz4jhikEKH5Pe8FDV4bp3JtnRzH4jz8DWNVAMzl5R4OMeYOO6wsG7WYNpk92J72hfCcgC3Uftw2mjdSmatoLkvK9u7xsZntR2vEV8defNoR0sMoF5oM7hmMrjl5o5YuRvafK0+i1GVlHyy4nJvhtuJ/7R0dXT1nd5U8arJs7souZ5kWib9IHZ/1kKvfMIQqXPrEogtPd5Kwe/10Q1bBZVaetPSLN3aIixu6x1zIqRH/Pcggv992TshtCOaNmGUBQU0d/WJawUPzgCHvhOU3swLa9JWlMfRygVw8TSSNK/GTH7glcDlatXvrV4MhvbZL4YB7tCWnWNSId7pOq7aqnv0JZ0jTDReUduHZitRC1HD5Icp9V8/iq9eajFFYRgTpXEppJJ4JHaV041DPpPG7zoC4tnbYn+P+vWpU1R9UwdcMBKBpXVtXcw53oUYbu94yZyVI4rq5eEf7Sw50yTcJUD/JMJHFcXLO2Gs1hVFqJive0W+lDdarIPRZjTHeOhxoQzEd1zPlFPlZ1ajcDJCV3arGEL6IJ8Pn6RzOvtJX9hV9mv+cgvoDZBcaFVfycWSDTp36JRcIaeUz3I6M86a3KpOQuK/SDX97+Nby9iuwrTJ8RxSZ+bohkbcNqlr9it5JEJqx/7h9+8qJd6Daij5nXmHSa1AyZUBTF1Y66jqffCOw12l7xn845pWsZols9qSUsq+FFOWsh+gQNP7B1du3n9qPCEa5ycfUaH5IWtS5G05lbylspRLohOajN8niJoqyIBaaGONMGJOMTzZh2axYaf/UdixdYRTIECoOVbX96VSWvs51ChY8hTNBKO8PbMeSPXdBYLJX84XSkA9K882cnVO1yAofAMebswWuCaCqDt7mhzTtQzCTmNvkD1nou8D+DWmJY+ZIJIGQmMQLSxNG+5+Nqj1uss8uJlbHRESVfNqZI+2FJLSmnJGUmTUnP2dIE8siAORI-7brQQEE+qA9Bb8rKVspQzt5LczbuC6k3Zh4+hqoyCHV+CWd67stppx6D4RR3Sth7NP7xg28qvo6mj6R5D2yiIPTSEjvsEdkExugK0uHTgN9qKESQLmAUVO3XjbI7yb8ekDnXyCZMRJLRLnFoY2ufQOm/MGd89j/cXQ6hreJV0826qKCaE/OE+mW2dJUiTGMO1oDgOlGJUKFbVLU/ypEbSNXzF5BdyMbrrRkxKLo8qBSDg6uhwqT+3ifB05rjPH1mGN78QbCyhXWXQTJMWsk0Zh6/TQdLZW0btKvoORZzinwSJM7N3aguhterQQ4Q2Dr0q5wIlx5LnUq8pW0XtaReyi0IxTd1AdSqh4Wk861DvrI6eS2V7oN9qWHA43d8wiyPxVdPkZd1vAU6KRSu7lfmvmCuBzCpEbi3H67v25QzwJQ7bPr+jWIzT20XY6/XJtOHQ8FtJecHTP5A1DMjuW/Xz+wpqFM4R+sMeHf17eWpQfubetDHSATkfLZvDtqCF9NCzjlLT6aKzFUBCjkPqO338c+lD7pEywqQ1hCarkWtXSanncoeSt1pQwqMnRVTuhX1ys+3+rx5bu94McsEHN+nt/m6F0UBhPPuiawTYdlXOvINjr2Zizid8UUqJsXi64P4n+yjEJbZGoOS/ROgRvPXuRIXaeWL1TnCB027ksL9YDSZkeW+OZB9Cqk8IHPGqCZsP82NNdEpXD6hB5GrZf+uyh7PLIkTUNRzTHeURi1zs9+z3N3fSgAfAS09HYgz90Ps0FgFvm7+1R7jl9qonn1JCbqkB7McwmfQXy56hZgsdaYcviL64WYgqSPlKEiv9r4YC/HtoasoMyE4sObwsqh0r15Pi636ANXbIMQ2Ea7SeOAgy2+7YP9SAny0dLT+Shstv2ihHEaUc9DIPzJEyYBgXKzp1d0dmb6FPxD83Oy9V1aWMUfocCIA6kKSLRraoePfHEpHTLjVJyNxqruRMWz6WNwitizFXXy943CGkf944CdPm2a003oxagUW1wqy2kbR/6RIUI5gV0/REXATYEdIw73ka/nvsAhwPlJ9Aa89qIZ4Wiv3x2YK3kKE97XMya4zQ+gwVUaTU94USGyoJBIhVF/ISByTJJ5b/mdQ8ULA6gg4UO42/q18e3KPdHw3oW+I6rTRCgXx4TrNguqpM53nihYFv20rlFRpscSOAQKXzoHKStxy8kzeAJCVdmdu4w/Kd/es03KbnjRzbGvJhJ+5f56rMFJaCFCruiwzXvjP/OJav6Zdd1uA8vAbgmHcaLYjTvDenGcf54R6ID+A1gdCIsy9lwWOE196ldfuPwbLLZ83bKBIO9pVl0VKV2s+Dr308vai7+1nxGzOmP14uqBrZDwi+m+vky33MuywyOoZeW//lK9mIpkrD2WHGeRfYJ/+4OXBAGgDirsngyRzEm6mrYGOu989DBbnJVbJBE5CgHzlOSj7JfWc2q+GJtjbmHWi0l0lgchWtFKbBrnwmKEXvRXdsTJk/A02E/pbA4iIMb5YR9yeFP8EXA3PhAnf6e7uVaIBWJl7bCF2zPnD1TlfvTLOxpwB8Of6js2x5J0sS4B5pUZ0zt38oQ3zxI43/7ITVKhU7fa9TMa49XvPHjXJnTAAVtZgyipc+4HXPHLyaMr+FBidAeG519cpNAmLrkYjaii6yBQ4DCC1NqJCk918ZlCKRyjsQvOP8ThJAZFWwRmqNtyxXHd5uU9IA9YBy11edUimpdO2ZyR9JAJRk7rfMQNGhVB2EZ+aWeWCBwjDUj3pR7G/7Hknnm/3GdSjNa4k4CKqP2xzLiV1aYi7w37lA9ayIc55rQRFYZ+SrD+EFuso75p+1j2XHvRn6hN/gF7pw4Nm0FpRhyP9R9mQG+w0wyLTT4V0NsFEgcBTeklqrYrzADkdCYs396hXkgJlKIPgmcrDMmpWanY6paGZuPSN3PC8vPgKtw+iANkRFpnW3+Wv2F0bH75OHB7JaCO12vt/JYwI3qWlUgrigzOpb3L4ZNNcCBDWACm1tQttQimaboWyBEj4v10pCeWy8WGkS9MwrIw8vlUaHxcHdxIh3ShV4xVJGBC7pmp6c5drnEtbEbiv9Ak0tsbFZfvW/eu00W+Mp9H1e3wh5ohIKKMP8RCHShNA8QU+wvtxZy0kE6SO+51sD9ZQL/DRkoHaIFcR2CLm+Ln1f6HBgFh9ew1ayR+SjfkgNj7zcXAjIqcUXtrSJv7cMe7smHPYpfcKctw5EBl/vYbCRWQ3k1aqLGqAxfoLeidEeLNG1AmSv9D45pI0SpO7EsECuICSYpGG8iwrJsPeJPTO0PRib+btd9RhufcAG8MWEAEF+jQj8fnj0E43nxJZ371NtnJ4d9K/HPZJ0q3jVKdOFai4PsS+Z9Is0uLqqG0Nk9P3Fbsiddlq6UxWzpNKESOWibEmlFWIvxvYjn9zlzQNwGOUyB5MxU5VUMRWGT1JPCWSphHNeIENAnOrG8K8qXZOL+A2c0xG5m8H8WJVcPNU6/nRG3iE8thmLEIu/JO3jcZbJswtnZLjtsK6skzcJTDZ2c/0L6RFdDVQEq/sJp8LE7wlTbu342unO6G+a8nrz6L+3hXs4ConkBUxqa+yBYPFcmE9tegHNjGabSly8No5YCWpKHdvJOQuJPvHfEKf4sVzzmToZNiEXYWg9FQz3HFIVxWw0D9k0B6r5PRPOtIhAR5VUJN20EFMqefEk+4LrodeP9Vpe6YAC9t5CUd8CAzf5P4PYwRiB+5sF41vRyx1RKAgaF+tksSJNurQcjhnok5FK5Cjv0QcvSIQXfSqKJMXsZutOcdzofiseLvPerRDY61065QL+Ep5gAFNXIJG2V9A9MiY77SOSt9S7PEBWwxAbcHueJL6uxQBiirjEHBHs95OST4kBe++m5gSCENlTegIS8azMOfgo65jyklee0bKfrL8sKuNU91JIQvzTJdPkKZuTpkMrSMff6U/vyJYdsbkRkP2UTEtW8pLmiN01QBXA7z0aWk5760J+kQCD8367dLFhwc965gotoRTbscUwHlVhjgtgjNfeODNBk0RDBxs/yVQwXy1qq/rbxievz4/FgMXRpj5aOzifpDcOiy/1QqsceUrZDhc/Jf4jpOKkaF0gUwDh4Bn9X9MJxYrwd+ZZESraWmWlfPp3FBa4Ma4x2Hi8TA1BiX4efkrm7OYgyIoaUwMkWFTbNUinktDjCIGIFAIbdtbYBKW5RRqRWsYoV+QZ1whDfTOhte1GvHBBz5ZJmbSY/CuNRRuCoJkBXTGw63vno325pl9fMrlN3GgbUnIr1yvb3448wBgZcXXGXQoNgvSb+W3mbQmfHBhiE6dD6yaR5OwOVJ/TAWQ6ewbAaz8tgeMtdAB6PUw5qfE3UvQaK1B9VNNTuYjvSnM6IsK2OEPl_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_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\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
