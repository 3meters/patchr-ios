//
// Generated by CocoaPods-Keys
// on 12/11/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4274], PatchrKeysData[1500], PatchrKeysData[5190], PatchrKeysData[1791], PatchrKeysData[4180], PatchrKeysData[2849], PatchrKeysData[310], PatchrKeysData[3352], PatchrKeysData[1071], PatchrKeysData[5312], PatchrKeysData[1585], PatchrKeysData[3353], PatchrKeysData[4564], PatchrKeysData[2875], PatchrKeysData[1048], PatchrKeysData[4752], PatchrKeysData[2864], PatchrKeysData[4717], PatchrKeysData[1668], PatchrKeysData[344], PatchrKeysData[1309], PatchrKeysData[3162], PatchrKeysData[2288], PatchrKeysData[861], PatchrKeysData[2007], PatchrKeysData[2747], PatchrKeysData[218], PatchrKeysData[2529], PatchrKeysData[1269], PatchrKeysData[4022], PatchrKeysData[3852], PatchrKeysData[1375], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2119], PatchrKeysData[2481], PatchrKeysData[4007], PatchrKeysData[2710], PatchrKeysData[2244], PatchrKeysData[889], PatchrKeysData[5062], PatchrKeysData[3036], PatchrKeysData[4763], PatchrKeysData[4928], PatchrKeysData[5133], PatchrKeysData[3940], PatchrKeysData[3866], PatchrKeysData[2042], PatchrKeysData[782], PatchrKeysData[1329], PatchrKeysData[3173], PatchrKeysData[2756], PatchrKeysData[2334], PatchrKeysData[4360], PatchrKeysData[894], PatchrKeysData[2592], PatchrKeysData[807], PatchrKeysData[3249], PatchrKeysData[4371], PatchrKeysData[4459], PatchrKeysData[4523], PatchrKeysData[3833], PatchrKeysData[2166], PatchrKeysData[1871], PatchrKeysData[537], PatchrKeysData[2862], PatchrKeysData[4497], PatchrKeysData[4411], PatchrKeysData[4747], PatchrKeysData[4451], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1191], PatchrKeysData[2799], PatchrKeysData[5539], PatchrKeysData[4227], PatchrKeysData[3305], PatchrKeysData[2429], PatchrKeysData[5154], PatchrKeysData[2809], PatchrKeysData[1470], PatchrKeysData[738], PatchrKeysData[2617], PatchrKeysData[4894], PatchrKeysData[5235], PatchrKeysData[5326], PatchrKeysData[1547], PatchrKeysData[3959], PatchrKeysData[175], PatchrKeysData[4322], PatchrKeysData[2718], PatchrKeysData[2193], PatchrKeysData[3133], PatchrKeysData[1587], PatchrKeysData[549], PatchrKeysData[2453], PatchrKeysData[2301], PatchrKeysData[2998], PatchrKeysData[5028], PatchrKeysData[107], PatchrKeysData[2955], PatchrKeysData[4885], PatchrKeysData[4601], PatchrKeysData[3500], PatchrKeysData[3182], PatchrKeysData[4817], PatchrKeysData[4940], PatchrKeysData[837], PatchrKeysData[5016], PatchrKeysData[824], PatchrKeysData[3434], PatchrKeysData[838], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5085], PatchrKeysData[2216], PatchrKeysData[68], PatchrKeysData[1555], PatchrKeysData[5141], PatchrKeysData[3871], PatchrKeysData[2147], PatchrKeysData[281], PatchrKeysData[3837], PatchrKeysData[2021], PatchrKeysData[2032], PatchrKeysData[3961], PatchrKeysData[146], PatchrKeysData[420], PatchrKeysData[5441], PatchrKeysData[991], PatchrKeysData[1816], PatchrKeysData[4878], PatchrKeysData[527], PatchrKeysData[4505], PatchrKeysData[188], PatchrKeysData[2196], PatchrKeysData[1462], PatchrKeysData[2585], PatchrKeysData[460], PatchrKeysData[645], PatchrKeysData[3877], PatchrKeysData[5271], PatchrKeysData[5538], PatchrKeysData[4406], PatchrKeysData[4846], PatchrKeysData[5088], PatchrKeysData[624], PatchrKeysData[253], PatchrKeysData[4976], PatchrKeysData[4346], PatchrKeysData[2587], PatchrKeysData[580], PatchrKeysData[3798], PatchrKeysData[4880], PatchrKeysData[4869], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3326], PatchrKeysData[1119], PatchrKeysData[681], PatchrKeysData[181], PatchrKeysData[1044], PatchrKeysData[44], PatchrKeysData[3134], PatchrKeysData[4159], PatchrKeysData[4550], PatchrKeysData[4685], PatchrKeysData[5464], PatchrKeysData[499], PatchrKeysData[3343], PatchrKeysData[69], PatchrKeysData[378], PatchrKeysData[5282], PatchrKeysData[4340], PatchrKeysData[2401], PatchrKeysData[2690], PatchrKeysData[2213], PatchrKeysData[3319], PatchrKeysData[2521], PatchrKeysData[5194], PatchrKeysData[19], PatchrKeysData[3315], PatchrKeysData[2798], PatchrKeysData[2079], PatchrKeysData[3711], PatchrKeysData[3018], PatchrKeysData[5488], PatchrKeysData[937], PatchrKeysData[4773], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[5554] = "GShcWQQgdlV+SP7hbE+4CzgbX/2ZlSui8IGEr/kdKE2C0y7XjppcxBeoxyO1/7EAqX3iy1eSVeFThDPlzic/xUvH8ploTiYuLyGCwhFQ9vZgRlfo5QtoaAKyxsm2m7nEh6J1YiS+M8H+0Ykye3KdfywxaucsY5erQvdayvMer0TxwzI9pgoeB6uX2BH6ifkgJzeKbHQs5skNQlDhKvSAaYnMY7fh6Zeq9pjjni0nFDzv+D4oyyntbMj3oe69OzpKR9XvjEDF5kegc+yYB1bEmPkkgevnII3xTzkLmsA3jv9JGg8IEFYrpo8M/lNIRG4BmQfRqPxXbl7BnSKclPGyeI3L9MEOKnTdmNV3dQrnSd1qJVJuWcUs1J+2pJe3wor8uZK6ds4tZncR0gMy+U8y3ACkMF/+xCStk37LfJzoFB5fevGnuNzmioxFZZqBJo+QnoZV1addKQ0gEeE/maKexLsU5sqCyuRX1hkWp+2/lNXAcxS5vGQ3tZxgmSmq1CKtm2MerWA9kRXGe+J6MGS66hBqqbY0lMsZzF8sMEBA3AMyAIKwzx5oeOPfFEc3+i4eqv3pnC42sI4qYHMkCf7PfUnOZERyHC+0koAqtoZqdKDudRdHlzfWxnJNmwz4wxkY+chkW2jJgHEqUgMEW2VR1oF1j8SAbMt00KHRwkWRtatiKPXl+ZeQQgljTq4A4pcbg+ydWJumWi3zOm2GbkmgE7DwFNcBlrEF2m6wGEl0JGD+/jIYRM7INBRX7Hbp60c6qqJbY15nokbvTS4ycPbv99jUPBrkc/RA42zz9wM4FsshbzwF41PIc9OhxIVwbO1vCl3z78SxOsJwmEL0n7N/ZLV1/UHd3fLyvOnbvAd1NTK35dgUl5zvZ/+Z54+y/x2p9h89ylo7YSLW4Zp/tRELcXamRt0cr4zghAYL0BNhYelusYugrc5HmH6npSWI01QVqZmB9orR2GioBeyOD97O4paN0DgXP7YLgZLNZR200K+ZQabdRAQ279uHTH0lNXleAWWW666wpbTfslhVcNDm0qV79B4YlvXrdBrautx8rDlMk3E5ileU5Vg2n8sBqS+l2GizVeFvqzcp4qDCDBj66ZEUYNm8d2ic66f7q41L6vUzT02DTXLZjEqp87Wbd5HTKzIB64AGgbgtf2w2fRQ6JG3feLstGDzhtW8lN8j+R6lty/tmXoaQLkyRpfpGPpEHZlZ3d1rrxTb7dt2WK502JOpWyz8ChhteTz1imicLedJuUGSYRV7Ms4Ad/LKrHOn6ERzg42sZemv4aZdrfBGzQ1+W/NWiv4r1FoWSVW3JTLZIW/75Nc6I8aRWYKig5Q1Ly7Yrjk5QyLIntTljVp6Hdjld43WdM4+1q9kDMpaXBFaa/m3iyPaCs1oYNd3wZGKGLVPu8+ucd9SWQCMsH98vlPER+tbt1ip4TI+LT+q3iPuA/A7MdPoQXA9eaa9eln473cmDkEFQwe1Y3/9ye+jM166WyQo/1+1nB0MpV13Ji67QMJisKtvBxRAURCCoY35UcfidyzTS8wTedoaeFEG_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_z0tJkVBgtJ2ID402W1/hPdEYR3j3dUaoEiMJbpglNNEI+0yL9h1IbU9YynOm6g/oV0WDUMNX8Tz4ltGrxu1NMqvufVQYHXFoayg+yU103OlhyktjRiRdF8gIQ4ebNGYvkzXtDlfGC093vDIkf3DVcMZwwTDDN8NyYgI9bWIIFcHlNiBbivCKyxvuc3rSvNVrVNVoIxt8AUE1y/dQTxmuwWNwwg05VJHjCzdAZ4DRED2voAdAKTHR4WVfCOEJF/V23T/ZkvC19y0LIn9slMNhgZbRkecAowbsw5AtnGilIaH3ckGeYMXKype0sqxCIox8V8wZpD0rkQrlMPJahPKlN23Bjb594pcGJoq/HYR4HbvnX3xd64A0Y8x+VPTRZNLt8cNDp8xPssjbqECatRmkggaEWRV2CfVym3/r06D21Z+9WaaixKA8dJdrhOi/qeEZh+dr+QT30SU1Mrp7J2ijGT7CX1xZvh6Wlcx6emzplfic4+psCQbIpCbTpxT+alk0YjLp4iqgUcaNTHNGAvKcDcrNQezUjplBf7X2nXItT1NtIcXCIZSgkdNus4Rb/0ZyolzK/gp28nQcRlnDdiD9dc78++hvGAin/A4fObtIoJ8tscK6z0kuqgnaFn8l2WCL1XqpwahRh4vaxy7G9X12Okf8JdkpJIr3cACJMLPXq3+ze92DLMrcfYZdv/RGX0vw8npmZzPr0uNBjrwge6Syqb4CuPz33N4dWOUt0XNaNxej1Du5TCF8TJzy9PWDxAqJwMoTxEh+jMOdN8FPjHg/6lza1gmQW9YTy++0JNHKBBWqSCtvpUzj1f6aXPlCMktQJH6JXxvCioJBR0QbJq36ppB1KXTkOSq1sUYK3N75XaooGy24QatACqXPT2LBAcncmUShVRpxrPmP7aZqO83HMgfFc3pXy-lzaqkBJdJ3N1rfbneITflIIyPwOFSSWBVI+BYCwjUBdrsdxjZTBlPgDh2u/CXBQUJ9c9XOVK2LeFW3XdFrlRX+YmaCpkfeJgAXD/swnqv3PTILz63zufcaQ6AQFgID1JFFPGwmnT/1HItCRN1Kr4QhxzsFfYzLRW4pEE91N3zCLhxqt6AOZH5RU/PaecurTSEtwIOowD0PiaqxXjZzq6rjk+pLN2oBBDDeHMb5NGJJ4XX8j4heCgkZSWoBAOaPeQt8+JcKD8zuSoJsD9wm++r66fH6xLhSCsyJR4EEUcco9BsXqULQ6BXQoM2dNJYIKJ0kGNkRJ6c7hVSIExJLYyVjoWXCk7eQkhFvbiA9Dk+u3uvhpWq1JLEWoa7lnSZwhAQPoqYmYLPbfJLT+uB9QQC/5kEpr193OLP5ZdrkRUVX3QUZdtyzVe7mlkHqKhRKRdFo+8lom0VEDtrn5OtZWoy6xchEp2gT8XHhQhCFUBUi43tQMJBcytmGktgr3zdL+LuUJwBPbXGXBw9WK7J8cQr99DpEK60q007cOef62IYcPcB87nSek3tNM6WuqFFIWQ/uJb9ckv4BpGVl20/1Yw+1TAjpccT0S74lfLmPAs8Axw212rQ1OU9ydGkrJ2zVQWL+Qlk7yov5YXhwV6Jj0uUXP3i46EInSlUea7nh9QBEhMOncF9UO3ehJ75GwA51rJSCPxl9pCr5GLKcBUomkhaKkm3E7YY1WsF4WtolpM7+d1lHUegoZNhjfLjqDDkpwhrcgpTiVNBfPaLBsmvxY=\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
