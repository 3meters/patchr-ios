//
// Generated by CocoaPods-Keys
// on 23/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[328], PatchrKeysData[6255], PatchrKeysData[3975], PatchrKeysData[2918], PatchrKeysData[989], PatchrKeysData[5100], PatchrKeysData[7455], PatchrKeysData[3280], PatchrKeysData[7512], PatchrKeysData[4919], PatchrKeysData[4563], PatchrKeysData[7425], PatchrKeysData[3469], PatchrKeysData[1375], PatchrKeysData[5401], PatchrKeysData[4930], PatchrKeysData[1261], PatchrKeysData[7657], PatchrKeysData[5620], PatchrKeysData[1148], PatchrKeysData[3156], PatchrKeysData[4631], PatchrKeysData[450], PatchrKeysData[5637], PatchrKeysData[1410], PatchrKeysData[2405], PatchrKeysData[2847], PatchrKeysData[7791], PatchrKeysData[6118], PatchrKeysData[7109], PatchrKeysData[5574], PatchrKeysData[5912], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1865], PatchrKeysData[2703], PatchrKeysData[2169], PatchrKeysData[2160], PatchrKeysData[6578], PatchrKeysData[3524], PatchrKeysData[6874], PatchrKeysData[5874], PatchrKeysData[1993], PatchrKeysData[5201], PatchrKeysData[173], PatchrKeysData[2725], PatchrKeysData[6719], PatchrKeysData[2349], PatchrKeysData[3091], PatchrKeysData[402], PatchrKeysData[4497], PatchrKeysData[4117], PatchrKeysData[1779], PatchrKeysData[1482], PatchrKeysData[1853], PatchrKeysData[8007], PatchrKeysData[5245], PatchrKeysData[3251], PatchrKeysData[1157], PatchrKeysData[7028], PatchrKeysData[3981], PatchrKeysData[6076], PatchrKeysData[1358], PatchrKeysData[5797], PatchrKeysData[441], PatchrKeysData[2219], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4751], PatchrKeysData[6088], PatchrKeysData[1569], PatchrKeysData[5056], PatchrKeysData[2030], PatchrKeysData[1165], PatchrKeysData[7351], PatchrKeysData[1928], PatchrKeysData[3216], PatchrKeysData[2181], PatchrKeysData[1119], PatchrKeysData[2678], PatchrKeysData[7256], PatchrKeysData[7143], PatchrKeysData[3324], PatchrKeysData[4759], PatchrKeysData[1604], PatchrKeysData[7979], PatchrKeysData[6505], PatchrKeysData[2422], PatchrKeysData[6459], PatchrKeysData[331], PatchrKeysData[5943], PatchrKeysData[737], PatchrKeysData[4419], PatchrKeysData[127], PatchrKeysData[1454], PatchrKeysData[25], PatchrKeysData[620], PatchrKeysData[1929], PatchrKeysData[5780], PatchrKeysData[323], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[4523], PatchrKeysData[7001], PatchrKeysData[5273], PatchrKeysData[7177], PatchrKeysData[7530], PatchrKeysData[5444], PatchrKeysData[7224], PatchrKeysData[4493], PatchrKeysData[622], PatchrKeysData[7273], PatchrKeysData[5011], PatchrKeysData[7932], PatchrKeysData[237], PatchrKeysData[443], PatchrKeysData[6147], PatchrKeysData[4491], PatchrKeysData[5698], PatchrKeysData[1486], PatchrKeysData[1088], PatchrKeysData[369], PatchrKeysData[5304], PatchrKeysData[358], PatchrKeysData[6260], PatchrKeysData[2301], PatchrKeysData[7220], PatchrKeysData[6531], PatchrKeysData[4513], PatchrKeysData[2804], PatchrKeysData[142], PatchrKeysData[1511], PatchrKeysData[830], PatchrKeysData[4411], PatchrKeysData[1723], PatchrKeysData[3002], PatchrKeysData[7684], PatchrKeysData[165], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[5708], PatchrKeysData[4894], PatchrKeysData[6811], PatchrKeysData[377], PatchrKeysData[4323], PatchrKeysData[5148], PatchrKeysData[7306], PatchrKeysData[2267], PatchrKeysData[513], PatchrKeysData[5185], PatchrKeysData[7913], PatchrKeysData[6190], PatchrKeysData[3508], PatchrKeysData[6814], PatchrKeysData[5774], PatchrKeysData[5372], PatchrKeysData[6748], PatchrKeysData[6091], PatchrKeysData[1931], PatchrKeysData[3314], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1754], PatchrKeysData[4780], PatchrKeysData[3054], PatchrKeysData[209], PatchrKeysData[2927], PatchrKeysData[4033], PatchrKeysData[7822], PatchrKeysData[286], PatchrKeysData[5868], PatchrKeysData[4203], PatchrKeysData[6019], PatchrKeysData[1488], PatchrKeysData[3696], PatchrKeysData[1916], PatchrKeysData[6828], PatchrKeysData[4974], PatchrKeysData[1577], PatchrKeysData[5108], PatchrKeysData[834], PatchrKeysData[5984], PatchrKeysData[2548], PatchrKeysData[2628], PatchrKeysData[7734], PatchrKeysData[2502], PatchrKeysData[6517], PatchrKeysData[3753], PatchrKeysData[5337], PatchrKeysData[2201], PatchrKeysData[5316], PatchrKeysData[4511], PatchrKeysData[8015], PatchrKeysData[4682], PatchrKeysData[3084], PatchrKeysData[1523], PatchrKeysData[786], PatchrKeysData[3974], PatchrKeysData[6113], PatchrKeysData[7208], PatchrKeysData[2922], PatchrKeysData[5412], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5813], PatchrKeysData[4407], PatchrKeysData[2426], PatchrKeysData[2794], PatchrKeysData[5301], PatchrKeysData[1198], PatchrKeysData[2291], PatchrKeysData[775], PatchrKeysData[5514], PatchrKeysData[7301], PatchrKeysData[3201], PatchrKeysData[2033], PatchrKeysData[6741], PatchrKeysData[4681], PatchrKeysData[471], PatchrKeysData[4678], PatchrKeysData[3109], PatchrKeysData[3892], PatchrKeysData[2583], PatchrKeysData[1361], PatchrKeysData[2582], PatchrKeysData[7407], PatchrKeysData[215], PatchrKeysData[7180], PatchrKeysData[496], PatchrKeysData[6862], PatchrKeysData[2401], PatchrKeysData[7412], PatchrKeysData[3738], PatchrKeysData[1727], PatchrKeysData[4121], PatchrKeysData[2849], PatchrKeysData[1973], PatchrKeysData[6687], PatchrKeysData[179], PatchrKeysData[4450], PatchrKeysData[1186], PatchrKeysData[5249], PatchrKeysData[1335], PatchrKeysData[5840], PatchrKeysData[6154], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[98], PatchrKeysData[6958], PatchrKeysData[4764], PatchrKeysData[3085], PatchrKeysData[5092], PatchrKeysData[2243], PatchrKeysData[1001], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[3903], PatchrKeysData[922], PatchrKeysData[6933], PatchrKeysData[399], PatchrKeysData[2139], PatchrKeysData[26], PatchrKeysData[2611], PatchrKeysData[7783], PatchrKeysData[6812], PatchrKeysData[746], PatchrKeysData[395], PatchrKeysData[222], PatchrKeysData[7566], PatchrKeysData[7121], PatchrKeysData[4803], PatchrKeysData[7713], PatchrKeysData[7], PatchrKeysData[7780], PatchrKeysData[1481], PatchrKeysData[5021], PatchrKeysData[3709], PatchrKeysData[7047], PatchrKeysData[4971], PatchrKeysData[4569], PatchrKeysData[6963], PatchrKeysData[1155], PatchrKeysData[124], PatchrKeysData[1939], PatchrKeysData[5125], PatchrKeysData[6389], PatchrKeysData[6745], PatchrKeysData[4929], PatchrKeysData[5844], PatchrKeysData[2663], PatchrKeysData[2765], PatchrKeysData[1255], PatchrKeysData[3552], PatchrKeysData[2374], PatchrKeysData[846], PatchrKeysData[5200], PatchrKeysData[2601], PatchrKeysData[4586], PatchrKeysData[1668], PatchrKeysData[2270], PatchrKeysData[7529], PatchrKeysData[3499], PatchrKeysData[404], PatchrKeysData[6891], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[8066] = "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_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_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
