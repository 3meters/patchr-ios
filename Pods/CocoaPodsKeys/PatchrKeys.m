//
// Generated by CocoaPods-Keys
// on 23/08/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4042], PatchrKeysData[1651], PatchrKeysData[5436], PatchrKeysData[5258], PatchrKeysData[4491], PatchrKeysData[3417], PatchrKeysData[3237], PatchrKeysData[4257], PatchrKeysData[5432], PatchrKeysData[4735], PatchrKeysData[2982], PatchrKeysData[4829], PatchrKeysData[924], PatchrKeysData[5867], PatchrKeysData[4002], PatchrKeysData[4558], PatchrKeysData[5065], PatchrKeysData[3592], PatchrKeysData[506], PatchrKeysData[5125], PatchrKeysData[1991], PatchrKeysData[2864], PatchrKeysData[2924], PatchrKeysData[5169], PatchrKeysData[5535], PatchrKeysData[4618], PatchrKeysData[3141], PatchrKeysData[993], PatchrKeysData[2068], PatchrKeysData[1913], PatchrKeysData[6226], PatchrKeysData[1171], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2152], PatchrKeysData[2528], PatchrKeysData[1243], PatchrKeysData[836], PatchrKeysData[1076], PatchrKeysData[5750], PatchrKeysData[6124], PatchrKeysData[4160], PatchrKeysData[2598], PatchrKeysData[79], PatchrKeysData[286], PatchrKeysData[940], PatchrKeysData[704], PatchrKeysData[4296], PatchrKeysData[2919], PatchrKeysData[3002], PatchrKeysData[1821], PatchrKeysData[510], PatchrKeysData[289], PatchrKeysData[5456], PatchrKeysData[187], PatchrKeysData[1534], PatchrKeysData[1632], PatchrKeysData[2777], PatchrKeysData[4252], PatchrKeysData[211], PatchrKeysData[4525], PatchrKeysData[1173], PatchrKeysData[4516], PatchrKeysData[2904], PatchrKeysData[2950], PatchrKeysData[5001], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[5540], PatchrKeysData[4453], PatchrKeysData[6098], PatchrKeysData[1251], PatchrKeysData[2920], PatchrKeysData[60], PatchrKeysData[2554], PatchrKeysData[705], PatchrKeysData[1976], PatchrKeysData[3978], PatchrKeysData[1407], PatchrKeysData[474], PatchrKeysData[5600], PatchrKeysData[1790], PatchrKeysData[6009], PatchrKeysData[4629], PatchrKeysData[5145], PatchrKeysData[686], PatchrKeysData[6198], PatchrKeysData[2341], PatchrKeysData[900], PatchrKeysData[4069], PatchrKeysData[4256], PatchrKeysData[2632], PatchrKeysData[5238], PatchrKeysData[4520], PatchrKeysData[5936], PatchrKeysData[5666], PatchrKeysData[2155], PatchrKeysData[500], PatchrKeysData[3436], PatchrKeysData[81], PatchrKeysData[6001], PatchrKeysData[5170], PatchrKeysData[2188], PatchrKeysData[356], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[4455], PatchrKeysData[1420], PatchrKeysData[1375], PatchrKeysData[5305], PatchrKeysData[885], PatchrKeysData[119], PatchrKeysData[5461], PatchrKeysData[4222], PatchrKeysData[2184], PatchrKeysData[3664], PatchrKeysData[2543], PatchrKeysData[487], PatchrKeysData[229], PatchrKeysData[1951], PatchrKeysData[104], PatchrKeysData[4746], PatchrKeysData[2705], PatchrKeysData[5321], PatchrKeysData[1810], PatchrKeysData[4466], PatchrKeysData[2419], PatchrKeysData[278], PatchrKeysData[4701], PatchrKeysData[3160], PatchrKeysData[4550], PatchrKeysData[1870], PatchrKeysData[1470], PatchrKeysData[3203], PatchrKeysData[3768], PatchrKeysData[3621], PatchrKeysData[330], PatchrKeysData[4496], PatchrKeysData[1254], PatchrKeysData[1536], PatchrKeysData[2774], PatchrKeysData[4549], PatchrKeysData[3694], PatchrKeysData[5910], PatchrKeysData[1233], PatchrKeysData[2585], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5302], PatchrKeysData[5458], PatchrKeysData[3858], PatchrKeysData[1805], PatchrKeysData[4712], PatchrKeysData[2862], PatchrKeysData[4385], PatchrKeysData[3338], PatchrKeysData[3236], PatchrKeysData[4935], PatchrKeysData[2518], PatchrKeysData[1041], PatchrKeysData[2349], PatchrKeysData[3075], PatchrKeysData[3061], PatchrKeysData[3656], PatchrKeysData[5450], PatchrKeysData[3444], PatchrKeysData[4561], PatchrKeysData[4805], PatchrKeysData[311], PatchrKeysData[218], PatchrKeysData[2234], PatchrKeysData[5880], PatchrKeysData[4664], PatchrKeysData[2504], PatchrKeysData[2523], PatchrKeysData[4188], PatchrKeysData[5960], PatchrKeysData[4528], PatchrKeysData[5229], PatchrKeysData[3087], PatchrKeysData[3360], PatchrKeysData[3421], PatchrKeysData[5531], PatchrKeysData[3182], PatchrKeysData[3078], PatchrKeysData[4266], PatchrKeysData[438], PatchrKeysData[5721], PatchrKeysData[2724], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6278] = "P6x8V73675lG2AalecDAc6gYpWrgDphhmKTvxpUENmqgTfWi58SifIZEcBs04ophi9kBrk4q18k4k1Ybn4Fu2ZmRNinMvThWSYROf3rheZNAC2p+9ffwlfNUeG9gMhTDfv7eEOG/8MDcw0W18RR23S5S3S5cd0rl0KQawcaMsv4fGQCcbH/xdc4ck/26K3PQr9cgPSqWWBrHh4/Mmvj5hLbCxkQV1ceAooIy+cE37hYxlIA/w9vj4UmNtJUn4V14DuKt9nuU+2epJW3Jhzjldetqx4CJNe54F4ghimWZwQQua3pbcSvoRuViRJVYpAB9MkdueMkIaLD9T4PJ8d55YTnWQZDG6wGl6FOobHCfA75hwpwpEQsHGi6GmijE1AO6HFiZprjEZsTpF0j5c0DCdK6C8wZndbvBXmgZ7WHywvXL4R5WI+8Y+gSBQJFQGiPft9Fy5lRwBokHcsEWKQtDrUWzpt16zOC3sok4xzvP4//7BKLCkFdgatWJyT1SSdaAojax6qJAloo5pemlEcLEE2VUzIiThQAQNZnUEgwegvh6ABHZmd1OvMqMPSzVFxTgv/CpAOrQ8YvH5hjZ915kkAGALnKKEy+xvWOIFz7sRyaHRLgHYzzNzLcoCZds+iC6zBb4H1EA6r2yg0XAthTmSTFGTTuIAp6BzHIT5gvYn+vFnB63bOjBi8WXTLurDVMw441V7S35B51zV+5cfsNFchzaHfxO1s8JexvUdWBwBl2zPeHVhRxkFsrWkJS6OgDdnwvZbPBeR6csGlh0V0g4YiW2aOKXe4AopRXPtIrxFvKjSr19Cs5JWl4gL0zaa8jF+C5K6ZJz98qgGqb+AcRZ9e7jBOOYOtqEhigk6Y5XzeL7mU8dXUTAsSpjrBlr/SmrITys2m5A6S/u9D0P4LgcokUJ6qWu4uMJGUTNIUvLjxcl3OGSd8GzPGOtTDuBN7AynquNJi1uJgh0hyjPUrku+jPdsREr1MtU9d9epgv13nNZyvq7kxmhcC2FSU9wqtoVMxTGu5CRfLKdjkRoSbcSDPjOSyY3D1aITeDTXv5g9raMIH3YXzoA0lQJUbWIArtfTOIapTRxhkHAfZbrN4lFHzaJsxioxWfceOuM7PODEg+nRM04uz4MmclH+XAaphWF/1FWqlZ2ihKtBnC+xH91K2Cc9ubzGEyGPkJH4KdgBJXJntWwgjUTExaY38TUjBu6kO9X1NB+sAPNKQmVTP1d/hEah1ia5GbMoagczKudV0AblQ/JDjeILrDdAxhDAbR42uqF64BKV10IWhAlRwfsZDO6tpOY+gU/3nNyQ2R4PQQLRqTb5BSSnaQ7+DCm2jY1hV3ekf3l/z243HgPF38w28XgfMxooxbN+vADAq1q/IGYSOcGaDdbhTCLWCHUcz61HDNl8Bw7/ekHehzQf9H/P6jZ+abG7KG0x8q13stTR5PZ0jW/sRCpyxibFdUwLxz4gpV9v+k1bObOJM5TI/ObalGsCe2OVB89XUrdX6gJK+fGwVjmynsTb/LHvbXm4W1IgtpfdDncSp5zx81LHHrk8XgGnn6yBIGccO5OXkLyu+5d42gWP0v2bbQOVZKoXh0Pj3/ZG6g+qwMpuBY7wKfh95yQj1xUOxvHdvBcv/ZP9ZN7iL0BBmz1T771Z4YFA33R+EdUDxtrfsHbLS7lQPGxzlOKwMbQ9LNqjBxCkYGI3NVdoEN0OPw8dfvmJ6e4oDpoyq09vp4UG0HBy4tVL1320qh5r7vowLePn3Wr1JMGVkx4cbbPHIvndvmQQG4DPV-y6So38/mJDqHo1_PEBo0ECfqWuyWpNbQ7dv86jaOy4sCGWk1r6tecYKrGJn9I4f0GFoH2OuK2PDo+PUvkZgePtO3JGgtFhmRNKMRzGyeFWwBb6SWs6VDI22i/Ocsp5sxHD1ZsOpI2tS55Q4IGmMLJobmGPEHyuZIkxouFR3KnHZvyg98okEzE+UsU-FgXkVrbpAiuick4W7KhHIK6DxEmktfzdEU70xa/k4u+WnyXBgnVWxaSknK+KpYQbswLZeQimmQeh4iitVq33s4xaBzb4RnyOqOagervJHEgPw8KA2b7WivXwHpCExMyTkrBxihJ1ySwuZO5KlPsYgGNS5QqAxXDK9ANcTxQJEPKe+na3m1bqoyf62sdRR4Y1yh8DeXSC4hcPT/s4B1faeqlyxiXpuCAXDcjXWq2aimkDzvljYS0Uy+uYcQMhzctg79X5b6Kb0nZzXImiSBEHvQLI17VXvvuBm+VTXPQrzW3uvlF/+k4lZ3D4qUfCEhd0B2WxsjfXGVZbUCspQm9JwWZR09tfVVQFIbvznpCovGc0aZt6t4GLKZYZ1tDBmsfH8dZEoY6FKpEvpI235DCEg7mZXLAaUNsB0w1Cb/NPQ1yZmWgeJ2U/cm9dsfiTRFe27XTq/xDlmJSepAwUt0xw4LtJ0YAjItszl/lHTMs3e3L664fITixyO3UU/XsQpIjNuOXq7PdQcEGeq/l2juHLELvBKCt2iaz+KalU0KscCOxUL9R7nrnFMoy43W+w6tNBy9fSB2qYcbsCgvLeOQ/hxvA5uqfBBmxzSCxYtgphwMYJb07P/8QYoUFnRDlBWPyFbKusu/MoF9OzdmH-2PbV85nufqqBkXN3YSGAya+JbweGW6EYJ3gTOYSclrW3CTKfQ32ZYqgFqf4+UFzSIXh1T/tN9MH4kYdhTBUjWgb3Tk33IcrEVesXDiZnnFTFjOkcT4fDq9AMQRkLII4zOogDMBiJ0gN7SAvO40oMMJ6sUAzWSQme/9I6RqWQGPmBs0cQGHBSP7LZR3kfDfQ2JvMFeeEV6F/flTpfBhuhy86qL0suXNabEwf/XiN0OnXlfs3BlttU4DKLKjL72y7vdnB1AL3pi0HD7seaK7vZ5o/65D4ey8e5xyo6GW25FfO6eDTXHXg5KUaw9bAeZeUezaXDFSdxo5rwTr6FUyWQdjSHCvibbcQZMlj9rnQb7tDpdb0izb+XKuH/lH6+W9Y1O/D6tSACVQ+IS+pwP8aHfJr+lDOJJZvOVXPLVDgn9x2MhmunVhQ/gUh5zSfAgK6W+YAds/kMrJSBndxM3B9yzn1guIsVR/8Zxhsdhi4vdyoMqaNEHzjQqIVzBTZlfwIs7jToYQfXQvKv2LxxdNUJenWtMydnnP+9FdAGMa21p8GW/yirfk7Bnnwkvrg8oiGIfHdB0ihGDqXaatEPM2YojkVl2+1_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
