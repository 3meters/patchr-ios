//
// Generated by CocoaPods-Keys
// on 04/11/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3710], PatchrKeysData[6443], PatchrKeysData[5970], PatchrKeysData[363], PatchrKeysData[7499], PatchrKeysData[9439], PatchrKeysData[1000], PatchrKeysData[3884], PatchrKeysData[9424], PatchrKeysData[4344], PatchrKeysData[4727], PatchrKeysData[4761], PatchrKeysData[5255], PatchrKeysData[648], PatchrKeysData[8849], PatchrKeysData[8037], PatchrKeysData[1657], PatchrKeysData[7434], PatchrKeysData[2786], PatchrKeysData[5806], PatchrKeysData[8375], PatchrKeysData[9509], PatchrKeysData[1369], PatchrKeysData[9090], PatchrKeysData[4805], PatchrKeysData[6752], PatchrKeysData[379], PatchrKeysData[4679], PatchrKeysData[2746], PatchrKeysData[7099], PatchrKeysData[6519], PatchrKeysData[5566], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3035], PatchrKeysData[8750], PatchrKeysData[6337], PatchrKeysData[6514], PatchrKeysData[6131], PatchrKeysData[282], PatchrKeysData[2778], PatchrKeysData[8773], PatchrKeysData[3995], PatchrKeysData[1103], PatchrKeysData[8693], PatchrKeysData[3478], PatchrKeysData[7481], PatchrKeysData[5654], PatchrKeysData[7372], PatchrKeysData[4432], PatchrKeysData[348], PatchrKeysData[9251], PatchrKeysData[6881], PatchrKeysData[678], PatchrKeysData[3451], PatchrKeysData[5611], PatchrKeysData[1569], PatchrKeysData[2599], PatchrKeysData[1434], PatchrKeysData[5653], PatchrKeysData[6398], PatchrKeysData[5057], PatchrKeysData[4537], PatchrKeysData[6571], PatchrKeysData[2037], PatchrKeysData[4627], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[479], PatchrKeysData[6800], PatchrKeysData[1204], PatchrKeysData[7571], PatchrKeysData[7953], PatchrKeysData[7871], PatchrKeysData[8596], PatchrKeysData[2886], PatchrKeysData[1246], PatchrKeysData[4922], PatchrKeysData[3955], PatchrKeysData[6440], PatchrKeysData[1783], PatchrKeysData[2996], PatchrKeysData[8241], PatchrKeysData[7637], PatchrKeysData[2827], PatchrKeysData[4111], PatchrKeysData[7463], PatchrKeysData[274], PatchrKeysData[2134], PatchrKeysData[6162], PatchrKeysData[9493], PatchrKeysData[4409], PatchrKeysData[7357], PatchrKeysData[4502], PatchrKeysData[2934], PatchrKeysData[8096], PatchrKeysData[6339], PatchrKeysData[1238], PatchrKeysData[2291], PatchrKeysData[7298], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[5727], PatchrKeysData[4716], PatchrKeysData[3680], PatchrKeysData[6973], PatchrKeysData[4784], PatchrKeysData[2748], PatchrKeysData[4525], PatchrKeysData[508], PatchrKeysData[2963], PatchrKeysData[5011], PatchrKeysData[4018], PatchrKeysData[1683], PatchrKeysData[4634], PatchrKeysData[1476], PatchrKeysData[2783], PatchrKeysData[6805], PatchrKeysData[1568], PatchrKeysData[4776], PatchrKeysData[4317], PatchrKeysData[376], PatchrKeysData[2966], PatchrKeysData[7264], PatchrKeysData[9056], PatchrKeysData[416], PatchrKeysData[2982], PatchrKeysData[6245], PatchrKeysData[7589], PatchrKeysData[3720], PatchrKeysData[1348], PatchrKeysData[4150], PatchrKeysData[5465], PatchrKeysData[8127], PatchrKeysData[9061], PatchrKeysData[5679], PatchrKeysData[8216], PatchrKeysData[7088], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[476], PatchrKeysData[5152], PatchrKeysData[3675], PatchrKeysData[672], PatchrKeysData[953], PatchrKeysData[8744], PatchrKeysData[6367], PatchrKeysData[243], PatchrKeysData[2376], PatchrKeysData[7329], PatchrKeysData[4766], PatchrKeysData[4282], PatchrKeysData[3527], PatchrKeysData[6915], PatchrKeysData[9463], PatchrKeysData[255], PatchrKeysData[8361], PatchrKeysData[109], PatchrKeysData[546], PatchrKeysData[5759], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[55], PatchrKeysData[5436], PatchrKeysData[6423], PatchrKeysData[7175], PatchrKeysData[7860], PatchrKeysData[7886], PatchrKeysData[2917], PatchrKeysData[2176], PatchrKeysData[3058], PatchrKeysData[8958], PatchrKeysData[4022], PatchrKeysData[6124], PatchrKeysData[7209], PatchrKeysData[1202], PatchrKeysData[2519], PatchrKeysData[2525], PatchrKeysData[3255], PatchrKeysData[4198], PatchrKeysData[2224], PatchrKeysData[3741], PatchrKeysData[3455], PatchrKeysData[8302], PatchrKeysData[9368], PatchrKeysData[7744], PatchrKeysData[4270], PatchrKeysData[1975], PatchrKeysData[8879], PatchrKeysData[6365], PatchrKeysData[8768], PatchrKeysData[7549], PatchrKeysData[7717], PatchrKeysData[5442], PatchrKeysData[3449], PatchrKeysData[1231], PatchrKeysData[2843], PatchrKeysData[2865], PatchrKeysData[5847], PatchrKeysData[246], PatchrKeysData[1043], PatchrKeysData[474], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[7784], PatchrKeysData[3056], PatchrKeysData[4770], PatchrKeysData[5668], PatchrKeysData[8975], PatchrKeysData[6195], PatchrKeysData[7368], PatchrKeysData[577], PatchrKeysData[6605], PatchrKeysData[6280], PatchrKeysData[4561], PatchrKeysData[7737], PatchrKeysData[1287], PatchrKeysData[9015], PatchrKeysData[3476], PatchrKeysData[9120], PatchrKeysData[6835], PatchrKeysData[4757], PatchrKeysData[7493], PatchrKeysData[1679], PatchrKeysData[6019], PatchrKeysData[4399], PatchrKeysData[6125], PatchrKeysData[483], PatchrKeysData[2386], PatchrKeysData[4527], PatchrKeysData[6549], PatchrKeysData[4477], PatchrKeysData[9287], PatchrKeysData[463], PatchrKeysData[3069], PatchrKeysData[1897], PatchrKeysData[4957], PatchrKeysData[3250], PatchrKeysData[3536], PatchrKeysData[64], PatchrKeysData[893], PatchrKeysData[1379], PatchrKeysData[5767], PatchrKeysData[4076], PatchrKeysData[9156], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[6954], PatchrKeysData[8839], PatchrKeysData[3289], PatchrKeysData[461], PatchrKeysData[3661], PatchrKeysData[7924], PatchrKeysData[2606], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[1622], PatchrKeysData[8398], PatchrKeysData[653], PatchrKeysData[8840], PatchrKeysData[3022], PatchrKeysData[8456], PatchrKeysData[4445], PatchrKeysData[300], PatchrKeysData[4576], PatchrKeysData[3070], PatchrKeysData[6357], PatchrKeysData[4950], PatchrKeysData[977], PatchrKeysData[4895], PatchrKeysData[7230], PatchrKeysData[2050], PatchrKeysData[945], PatchrKeysData[4112], PatchrKeysData[8648], PatchrKeysData[2751], PatchrKeysData[5225], PatchrKeysData[3271], PatchrKeysData[6190], PatchrKeysData[5197], PatchrKeysData[4807], PatchrKeysData[5486], PatchrKeysData[7155], PatchrKeysData[5087], PatchrKeysData[2661], PatchrKeysData[8563], PatchrKeysData[6075], PatchrKeysData[7408], PatchrKeysData[1996], PatchrKeysData[5263], PatchrKeysData[1787], PatchrKeysData[6556], PatchrKeysData[2412], PatchrKeysData[4389], PatchrKeysData[8407], PatchrKeysData[281], PatchrKeysData[6058], PatchrKeysData[6704], PatchrKeysData[4246], PatchrKeysData[2581], PatchrKeysData[5647], PatchrKeysData[3716], PatchrKeysData[119], PatchrKeysData[4443], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9602] = "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_a4waKpn0wX0t1sXE9EKCW69tueya3WhaPvMqXc8VnxOAtz2WnEQRhhCXlFelobXZkWF0B4Syk7k4isVoSqxc2T+FTJA9ieRMi6SRDrs+GeQ+MIZwEDY8HNL7dJg6tB+BS7gSlhVqY9nD5wjmk3VroI967sMJ+m2AWfYuAMbv/nCASOT/hIaYdrmPJnCo+gsyTFUKIKe2kXeS2lR6hdJqWHeWwIPfpkovqipXxmtGSBPIahmZJGjCF99JtXueC//lzs5412K2LAf3bZ1hMfdkGgtRvFxyxkd4RRU9JQU3NDJxN3pMWwbYLSb8LlhLqeY9rQnFurbb+BZKoRT8u3pVzlxzew/1eti6vf6Z6OeT2CwuTxqetYTrz8DsYw2Qkz0mi7djQbIogoEichVVunYIWC4VjlTxb1QOia5yegvHGHSIKsOjdH0BMLXDlzFLZRz3u8gqmjBP91nfyz2F8tRCfgqqOTY8DjFqq7T5wfnDtuZgbcQE+WZ17aptNn/2Hc3QMrYiw6klFcXxXViBtPAht0lExaXz1th3t7p3TLyIU0dAVM+nnyjAKJTgwo0wE425cfHVnVoSHPvM1gPuwfQVUMC9l4sH4TdLTeya2+leHZ7GZcj1ADFuMZxEwyC1WTTBM4GpLWKItdQs5ulv74KaeejkkduIadcLM6xKhAv9cFnrFgXZ4aua8afMgvU2lr0BlD78CrtIDZXFLH4oVAnyGP8yx7g88rEhwpZuauJxYkvY73Ng8lNsSVbeIOQ3xZUQ7aCcIP1oPep/XqVfw2wvAdYhrNwGsV3xz08XGyU7rpaB6qVrtUuwFXzgukjo5DIgpbD5ll2qE6tYFaEOOX0fvipvOTBJlEWB72Fp9qAfTsQm4lvslCXY/CEbO3uJ/N3F1q4nXDaCVAlehGL/ucHN0hIusAQBSPfCLvxAdkD7_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
