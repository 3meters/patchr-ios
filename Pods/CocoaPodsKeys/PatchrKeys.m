//
// Generated by CocoaPods-Keys
// on 29/08/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"segmentKey"]) {
    implementation = _podKeysc9b60e0036a23cfb72c03735628a2cb5;
  }

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[12434], PatchrKeysData[1890], PatchrKeysData[2093], PatchrKeysData[3310], PatchrKeysData[12986], PatchrKeysData[3679], PatchrKeysData[10716], PatchrKeysData[11366], PatchrKeysData[6504], PatchrKeysData[13435], PatchrKeysData[10180], PatchrKeysData[5613], PatchrKeysData[10487], PatchrKeysData[9208], PatchrKeysData[8474], PatchrKeysData[12214], PatchrKeysData[2687], PatchrKeysData[12914], PatchrKeysData[6181], PatchrKeysData[3993], PatchrKeysData[6664], PatchrKeysData[1684], PatchrKeysData[2934], PatchrKeysData[12609], PatchrKeysData[4872], PatchrKeysData[7138], PatchrKeysData[2688], PatchrKeysData[813], PatchrKeysData[6568], PatchrKeysData[7529], PatchrKeysData[9712], PatchrKeysData[9605], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysc9b60e0036a23cfb72c03735628a2cb5(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[12065], PatchrKeysData[3138], PatchrKeysData[12245], PatchrKeysData[4065], PatchrKeysData[12553], PatchrKeysData[11943], PatchrKeysData[1171], PatchrKeysData[4854], PatchrKeysData[1239], PatchrKeysData[2988], PatchrKeysData[3791], PatchrKeysData[10488], PatchrKeysData[8761], PatchrKeysData[11528], PatchrKeysData[10856], PatchrKeysData[542], PatchrKeysData[13551], PatchrKeysData[4929], PatchrKeysData[12146], PatchrKeysData[5867], PatchrKeysData[9515], PatchrKeysData[9742], PatchrKeysData[966], PatchrKeysData[4935], PatchrKeysData[2578], PatchrKeysData[12998], PatchrKeysData[12589], PatchrKeysData[10491], PatchrKeysData[9471], PatchrKeysData[12562], PatchrKeysData[9824], PatchrKeysData[5361], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[2497], PatchrKeysData[10660], PatchrKeysData[12287], PatchrKeysData[5790], PatchrKeysData[4414], PatchrKeysData[11368], PatchrKeysData[6546], PatchrKeysData[7227], PatchrKeysData[11392], PatchrKeysData[6638], PatchrKeysData[8494], PatchrKeysData[10400], PatchrKeysData[10569], PatchrKeysData[9688], PatchrKeysData[43], PatchrKeysData[6130], PatchrKeysData[2747], PatchrKeysData[6843], PatchrKeysData[10497], PatchrKeysData[12596], PatchrKeysData[4997], PatchrKeysData[12449], PatchrKeysData[984], PatchrKeysData[5014], PatchrKeysData[9797], PatchrKeysData[12092], PatchrKeysData[11043], PatchrKeysData[11739], PatchrKeysData[8180], PatchrKeysData[1242], PatchrKeysData[12292], PatchrKeysData[1306], PatchrKeysData[6078], PatchrKeysData[12398], PatchrKeysData[9613], PatchrKeysData[11831], PatchrKeysData[9658], PatchrKeysData[4990], PatchrKeysData[13138], PatchrKeysData[13116], PatchrKeysData[5670], PatchrKeysData[4763], PatchrKeysData[3444], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[10694], PatchrKeysData[2803], PatchrKeysData[7135], PatchrKeysData[6805], PatchrKeysData[2817], PatchrKeysData[12436], PatchrKeysData[2009], PatchrKeysData[5739], PatchrKeysData[4816], PatchrKeysData[9516], PatchrKeysData[9575], PatchrKeysData[10704], PatchrKeysData[13424], PatchrKeysData[3891], PatchrKeysData[4041], PatchrKeysData[12904], PatchrKeysData[8548], PatchrKeysData[7556], PatchrKeysData[622], PatchrKeysData[9943], PatchrKeysData[11463], PatchrKeysData[12528], PatchrKeysData[8867], PatchrKeysData[5516], PatchrKeysData[11875], PatchrKeysData[8411], PatchrKeysData[5665], PatchrKeysData[6739], PatchrKeysData[6003], PatchrKeysData[7684], PatchrKeysData[4798], PatchrKeysData[8885], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2267], PatchrKeysData[1830], PatchrKeysData[5554], PatchrKeysData[10950], PatchrKeysData[8150], PatchrKeysData[5111], PatchrKeysData[595], PatchrKeysData[8066], PatchrKeysData[3696], PatchrKeysData[12751], PatchrKeysData[12762], PatchrKeysData[950], PatchrKeysData[10982], PatchrKeysData[1429], PatchrKeysData[2126], PatchrKeysData[10139], PatchrKeysData[11285], PatchrKeysData[370], PatchrKeysData[1387], PatchrKeysData[13352], PatchrKeysData[12570], PatchrKeysData[12081], PatchrKeysData[5618], PatchrKeysData[7333], PatchrKeysData[1235], PatchrKeysData[7177], PatchrKeysData[8886], PatchrKeysData[6393], PatchrKeysData[12038], PatchrKeysData[1962], PatchrKeysData[12138], PatchrKeysData[6871], PatchrKeysData[4866], PatchrKeysData[5725], PatchrKeysData[3287], PatchrKeysData[10402], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[11714], PatchrKeysData[8454], PatchrKeysData[5405], PatchrKeysData[2080], PatchrKeysData[13542], PatchrKeysData[12477], PatchrKeysData[12813], PatchrKeysData[8418], PatchrKeysData[12380], PatchrKeysData[5710], PatchrKeysData[5615], PatchrKeysData[3705], PatchrKeysData[3702], PatchrKeysData[9558], PatchrKeysData[5091], PatchrKeysData[4468], PatchrKeysData[1821], PatchrKeysData[2956], PatchrKeysData[6510], PatchrKeysData[12662], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[13174], PatchrKeysData[1097], PatchrKeysData[10172], PatchrKeysData[10723], PatchrKeysData[3979], PatchrKeysData[3112], PatchrKeysData[3375], PatchrKeysData[783], PatchrKeysData[8643], PatchrKeysData[9644], PatchrKeysData[10545], PatchrKeysData[7149], PatchrKeysData[7385], PatchrKeysData[10108], PatchrKeysData[7481], PatchrKeysData[5302], PatchrKeysData[1122], PatchrKeysData[3846], PatchrKeysData[4658], PatchrKeysData[13441], PatchrKeysData[1202], PatchrKeysData[9133], PatchrKeysData[2030], PatchrKeysData[8233], PatchrKeysData[5280], PatchrKeysData[10243], PatchrKeysData[7675], PatchrKeysData[12884], PatchrKeysData[11373], PatchrKeysData[10514], PatchrKeysData[6239], PatchrKeysData[10752], PatchrKeysData[2436], PatchrKeysData[1119], PatchrKeysData[1404], PatchrKeysData[6614], PatchrKeysData[3227], PatchrKeysData[5030], PatchrKeysData[6427], PatchrKeysData[752], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[12613], PatchrKeysData[2398], PatchrKeysData[6747], PatchrKeysData[12461], PatchrKeysData[11593], PatchrKeysData[8278], PatchrKeysData[6985], PatchrKeysData[11619], PatchrKeysData[252], PatchrKeysData[8199], PatchrKeysData[1030], PatchrKeysData[9542], PatchrKeysData[7493], PatchrKeysData[5135], PatchrKeysData[7041], PatchrKeysData[13351], PatchrKeysData[4289], PatchrKeysData[10019], PatchrKeysData[11791], PatchrKeysData[8054], PatchrKeysData[4169], PatchrKeysData[2313], PatchrKeysData[3576], PatchrKeysData[5433], PatchrKeysData[8852], PatchrKeysData[1857], PatchrKeysData[13576], PatchrKeysData[9612], PatchrKeysData[3565], PatchrKeysData[2575], PatchrKeysData[9893], PatchrKeysData[13513], PatchrKeysData[7033], PatchrKeysData[10278], PatchrKeysData[6104], PatchrKeysData[5830], PatchrKeysData[8661], PatchrKeysData[9650], PatchrKeysData[11344], PatchrKeysData[12325], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[13252], PatchrKeysData[8462], PatchrKeysData[6105], PatchrKeysData[3756], PatchrKeysData[10861], PatchrKeysData[793], PatchrKeysData[1854], PatchrKeysData[207], PatchrKeysData[350], PatchrKeysData[10049], PatchrKeysData[7182], PatchrKeysData[3046], PatchrKeysData[3438], PatchrKeysData[3723], PatchrKeysData[2264], PatchrKeysData[8829], PatchrKeysData[8126], PatchrKeysData[11939], PatchrKeysData[5856], PatchrKeysData[1671], PatchrKeysData[6573], PatchrKeysData[8766], PatchrKeysData[11310], PatchrKeysData[7615], PatchrKeysData[10112], PatchrKeysData[5485], PatchrKeysData[2904], PatchrKeysData[11422], PatchrKeysData[8488], PatchrKeysData[360], PatchrKeysData[2261], PatchrKeysData[7502], PatchrKeysData[905], PatchrKeysData[3145], PatchrKeysData[10721], PatchrKeysData[6381], PatchrKeysData[12920], PatchrKeysData[4395], PatchrKeysData[2486], PatchrKeysData[6998], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[4314], PatchrKeysData[5281], PatchrKeysData[6010], PatchrKeysData[13190], PatchrKeysData[12357], PatchrKeysData[11116], PatchrKeysData[6784], PatchrKeysData[10450], PatchrKeysData[1676], PatchrKeysData[12844], PatchrKeysData[11172], PatchrKeysData[2476], PatchrKeysData[11555], PatchrKeysData[11626], PatchrKeysData[12632], PatchrKeysData[12249], PatchrKeysData[4249], PatchrKeysData[13191], PatchrKeysData[10948], PatchrKeysData[5951], PatchrKeysData[5838], PatchrKeysData[3544], PatchrKeysData[3914], PatchrKeysData[1658], PatchrKeysData[11045], PatchrKeysData[165], PatchrKeysData[7485], PatchrKeysData[7190], PatchrKeysData[11773], PatchrKeysData[3363], PatchrKeysData[6590], PatchrKeysData[5805], PatchrKeysData[8016], PatchrKeysData[8543], PatchrKeysData[11599], PatchrKeysData[3763], PatchrKeysData[2205], PatchrKeysData[2167], PatchrKeysData[5274], PatchrKeysData[8609], PatchrKeysData[8875], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[2006], PatchrKeysData[9869], PatchrKeysData[13580], PatchrKeysData[239], PatchrKeysData[9897], PatchrKeysData[8349], PatchrKeysData[12778], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[5401], PatchrKeysData[13137], PatchrKeysData[7130], PatchrKeysData[8493], PatchrKeysData[944], PatchrKeysData[9205], PatchrKeysData[3939], PatchrKeysData[3057], PatchrKeysData[642], PatchrKeysData[3044], PatchrKeysData[6721], PatchrKeysData[5249], PatchrKeysData[630], PatchrKeysData[2887], PatchrKeysData[10233], PatchrKeysData[1211], PatchrKeysData[7499], PatchrKeysData[6297], PatchrKeysData[13422], PatchrKeysData[7314], PatchrKeysData[8424], PatchrKeysData[12604], PatchrKeysData[10099], PatchrKeysData[727], PatchrKeysData[4903], PatchrKeysData[9898], PatchrKeysData[11076], PatchrKeysData[7686], PatchrKeysData[12043], PatchrKeysData[12759], PatchrKeysData[7510], PatchrKeysData[8639], PatchrKeysData[10296], PatchrKeysData[2538], PatchrKeysData[2209], PatchrKeysData[1656], PatchrKeysData[12713], PatchrKeysData[5307], PatchrKeysData[11397], PatchrKeysData[2132], PatchrKeysData[7075], PatchrKeysData[12769], PatchrKeysData[8232], PatchrKeysData[5261], PatchrKeysData[3957], PatchrKeysData[7643], PatchrKeysData[1640], PatchrKeysData[3638], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6897], PatchrKeysData[8437], PatchrKeysData[9806], PatchrKeysData[12242], PatchrKeysData[7734], PatchrKeysData[10850], PatchrKeysData[9034], PatchrKeysData[1105], PatchrKeysData[1331], PatchrKeysData[11849], PatchrKeysData[412], PatchrKeysData[11891], PatchrKeysData[11458], PatchrKeysData[12007], PatchrKeysData[11492], PatchrKeysData[10899], PatchrKeysData[611], PatchrKeysData[3535], PatchrKeysData[3215], PatchrKeysData[4342], PatchrKeysData[741], PatchrKeysData[12031], PatchrKeysData[6751], PatchrKeysData[11782], PatchrKeysData[5706], PatchrKeysData[531], PatchrKeysData[1143], PatchrKeysData[8290], PatchrKeysData[11983], PatchrKeysData[6405], PatchrKeysData[12874], PatchrKeysData[1960], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[13590] = "lTvS6C2iKaYMFo+wjNJDlGDmHQcbPgvhJ8iJYGmBXQ3JLz5AYI97V8yfTIjQ0evAsAJBIJoqjwhS6kd56Lko40rOyfAdbBDkKCD/H7i6dBJcXNGkrQozpba/zgMlvGUEl8zMOROv8XmPQELJ0Cx36F7Na1hJNIzeN6Azs295iZmkCJqOOcubz8+zw9+SVeeurXKP5269O/b8D9533EfWrfhp+fGiyWMgRxgsZBBzUgh567yiSHTRreaaiDwTEF0Xy+mmPXWwqIyCitQa9WtCH7ff+1K1PET34Lu08sPzsjI5TnzocDigD9WykIfhh2G9JXqVUJguCm5ArAQRvMgEsYHCK6PiepjHyTjWerobouF734zMor6y1H2KtjB7+I6Wtz0dMA468eHUTm7PRaeNAa1ay0v8c0Y24OBIjWTVhVdUanuhBjeBq2XMDwTFR8yW4ptLXFO1Wn4Oo3IH2qqJUbkelgMiIMzDJQ2eTgEZwntqc99/Q68nzsgpxP8hpP6CvohtcuNWMFt/DXs8FbLdk+SyXwYzyQdnxX0mDaOVSRSwNpvYhfpaZY0ZVzt7CcUsDoooX7KrprgznRvkjBs9q1tYUvZe21xetjd8lySisVV/8e7dKk3XCH6PCzv7yqfB897FDr+0oJXLQLe4O/q4uWvTnUn146iUAd7iv4tUKgHz57c7ZYWi2JaQCxqQH9mf0Oj8KNbYDONNiQtBOh3/oSn5svJPsfykPmmfxafPThMSrl07SMJ6wt0oII8WzC2qZG1WyFM4SonYIBozXgMJmOQwPR7QwOwjLSovUunSS8hPmdoh8hdYRuWAgrAgC+wGDvizB4QaLaOkwX9zm2vwSFyyctXisxTN7UHQjusma91cj9hCPHI4LRhYASeHaxN218VjYuRlpnQMftZ0j2RuQonqM4pZCqxfgjhdIu6yi/1pmaUm5ww2ae106r+Eg0fEXXvReEMii2+gwEg2lLkIeTeMTVPbUxzP3TjX1hh/TLle5HkZUJ9mHXWuU2OqzgWfvRWrweD5nZKFwOdjyKuVqgL8AeQ+3XDlHMUMRXonN6a9TBHpGVmrRItWRut8LS51bcygfnra/eTcJptWG5kkeuy3FABQi+Vgwv9k3xRJVkU6H89zk35Toaf7ucLd3r0u/KNUPmR9ilvCdeIsJgYqkytiGIN21NU7p8+XdjON0SshCcoyWJiJjjlTtrG|\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"segmentKey": self.segmentKey,
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
