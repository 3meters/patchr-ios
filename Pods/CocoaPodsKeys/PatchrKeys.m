//
// Generated by CocoaPods-Keys
// on 04/09/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;
  @dynamic bingSubscriptionKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[2274], PatchrKeysData[468], PatchrKeysData[1181], PatchrKeysData[6183], PatchrKeysData[4096], PatchrKeysData[710], PatchrKeysData[5797], PatchrKeysData[1393], PatchrKeysData[5188], PatchrKeysData[2267], PatchrKeysData[4506], PatchrKeysData[4253], PatchrKeysData[5377], PatchrKeysData[2908], PatchrKeysData[1540], PatchrKeysData[2195], PatchrKeysData[3905], PatchrKeysData[6268], PatchrKeysData[4521], PatchrKeysData[884], PatchrKeysData[1103], PatchrKeysData[5932], PatchrKeysData[547], PatchrKeysData[3042], PatchrKeysData[592], PatchrKeysData[1006], PatchrKeysData[5654], PatchrKeysData[3631], PatchrKeysData[4318], PatchrKeysData[4153], PatchrKeysData[4990], PatchrKeysData[1197], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[3129], PatchrKeysData[2916], PatchrKeysData[3098], PatchrKeysData[4948], PatchrKeysData[2757], PatchrKeysData[6217], PatchrKeysData[6144], PatchrKeysData[3451], PatchrKeysData[6123], PatchrKeysData[4268], PatchrKeysData[93], PatchrKeysData[2160], PatchrKeysData[1283], PatchrKeysData[1118], PatchrKeysData[5870], PatchrKeysData[785], PatchrKeysData[562], PatchrKeysData[3588], PatchrKeysData[3712], PatchrKeysData[4017], PatchrKeysData[4563], PatchrKeysData[2351], PatchrKeysData[2415], PatchrKeysData[5645], PatchrKeysData[2313], PatchrKeysData[5756], PatchrKeysData[4075], PatchrKeysData[4547], PatchrKeysData[5597], PatchrKeysData[3509], PatchrKeysData[3159], PatchrKeysData[2675], PatchrKeysData[1702], PatchrKeysData[1080], PatchrKeysData[1130], PatchrKeysData[5911], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3286], PatchrKeysData[627], PatchrKeysData[6182], PatchrKeysData[1388], PatchrKeysData[3717], PatchrKeysData[3634], PatchrKeysData[2787], PatchrKeysData[5097], PatchrKeysData[3001], PatchrKeysData[4424], PatchrKeysData[2076], PatchrKeysData[2838], PatchrKeysData[1898], PatchrKeysData[4346], PatchrKeysData[6195], PatchrKeysData[1701], PatchrKeysData[6281], PatchrKeysData[2917], PatchrKeysData[4035], PatchrKeysData[3120], PatchrKeysData[5557], PatchrKeysData[847], PatchrKeysData[2285], PatchrKeysData[390], PatchrKeysData[3796], PatchrKeysData[4178], PatchrKeysData[1208], PatchrKeysData[3054], PatchrKeysData[4854], PatchrKeysData[606], PatchrKeysData[5635], PatchrKeysData[792], PatchrKeysData[435], PatchrKeysData[6158], PatchrKeysData[2002], PatchrKeysData[2038], PatchrKeysData[1424], PatchrKeysData[556], PatchrKeysData[208], PatchrKeysData[2458], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[889], PatchrKeysData[4224], PatchrKeysData[5804], PatchrKeysData[3353], PatchrKeysData[917], PatchrKeysData[1864], PatchrKeysData[1338], PatchrKeysData[5693], PatchrKeysData[6413], PatchrKeysData[5714], PatchrKeysData[2810], PatchrKeysData[6117], PatchrKeysData[3212], PatchrKeysData[6254], PatchrKeysData[3037], PatchrKeysData[873], PatchrKeysData[3298], PatchrKeysData[4984], PatchrKeysData[2581], PatchrKeysData[5142], PatchrKeysData[2964], PatchrKeysData[4164], PatchrKeysData[1548], PatchrKeysData[2953], PatchrKeysData[1526], PatchrKeysData[1367], PatchrKeysData[5677], PatchrKeysData[6209], PatchrKeysData[6377], PatchrKeysData[5009], PatchrKeysData[956], PatchrKeysData[1230], PatchrKeysData[2337], PatchrKeysData[2223], PatchrKeysData[1122], PatchrKeysData[5071], PatchrKeysData[3357], PatchrKeysData[668], PatchrKeysData[2796], PatchrKeysData[1604], PatchrKeysData[4345], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[869], PatchrKeysData[4097], PatchrKeysData[4392], PatchrKeysData[4324], PatchrKeysData[259], PatchrKeysData[3255], PatchrKeysData[1121], PatchrKeysData[2358], PatchrKeysData[1111], PatchrKeysData[5319], PatchrKeysData[2283], PatchrKeysData[5002], PatchrKeysData[1237], PatchrKeysData[1247], PatchrKeysData[713], PatchrKeysData[4254], PatchrKeysData[1939], PatchrKeysData[2968], PatchrKeysData[3984], PatchrKeysData[2773], PatchrKeysData[834], PatchrKeysData[2923], PatchrKeysData[1343], PatchrKeysData[4202], PatchrKeysData[4684], PatchrKeysData[4882], PatchrKeysData[1471], PatchrKeysData[3257], PatchrKeysData[5008], PatchrKeysData[6013], PatchrKeysData[3795], PatchrKeysData[1381], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6518] = "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_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_OErVK5wqVK7NJZt864vT/yjFHId9GRKcoM2ShwxDNAS+Z9QoQCJntxPPrisDsycNZF0gUpPM9c/kCrgc/CKZYayyy0IZXk1XMGkyps\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
