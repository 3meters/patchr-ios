//
// Generated by CocoaPods-Keys
// on 12/04/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4678], PatchrKeysData[1461], PatchrKeysData[1036], PatchrKeysData[1129], PatchrKeysData[2810], PatchrKeysData[6225], PatchrKeysData[652], PatchrKeysData[3487], PatchrKeysData[1037], PatchrKeysData[5890], PatchrKeysData[5355], PatchrKeysData[342], PatchrKeysData[5493], PatchrKeysData[687], PatchrKeysData[6543], PatchrKeysData[2501], PatchrKeysData[947], PatchrKeysData[3521], PatchrKeysData[2183], PatchrKeysData[2093], PatchrKeysData[108], PatchrKeysData[129], PatchrKeysData[1100], PatchrKeysData[2312], PatchrKeysData[5378], PatchrKeysData[2738], PatchrKeysData[3762], PatchrKeysData[1347], PatchrKeysData[4771], PatchrKeysData[4060], PatchrKeysData[1378], PatchrKeysData[4671], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6352], PatchrKeysData[6252], PatchrKeysData[4433], PatchrKeysData[944], PatchrKeysData[2581], PatchrKeysData[5758], PatchrKeysData[729], PatchrKeysData[2268], PatchrKeysData[97], PatchrKeysData[2199], PatchrKeysData[2068], PatchrKeysData[1495], PatchrKeysData[3397], PatchrKeysData[461], PatchrKeysData[381], PatchrKeysData[2446], PatchrKeysData[5538], PatchrKeysData[2004], PatchrKeysData[646], PatchrKeysData[5119], PatchrKeysData[5772], PatchrKeysData[344], PatchrKeysData[6347], PatchrKeysData[6329], PatchrKeysData[6044], PatchrKeysData[5666], PatchrKeysData[3233], PatchrKeysData[6229], PatchrKeysData[1479], PatchrKeysData[5185], PatchrKeysData[5548], PatchrKeysData[1705], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[6015], PatchrKeysData[5427], PatchrKeysData[897], PatchrKeysData[2683], PatchrKeysData[1120], PatchrKeysData[844], PatchrKeysData[2960], PatchrKeysData[1468], PatchrKeysData[3947], PatchrKeysData[5936], PatchrKeysData[707], PatchrKeysData[1234], PatchrKeysData[3072], PatchrKeysData[6133], PatchrKeysData[2603], PatchrKeysData[1005], PatchrKeysData[5329], PatchrKeysData[1697], PatchrKeysData[2114], PatchrKeysData[3826], PatchrKeysData[2826], PatchrKeysData[2212], PatchrKeysData[6160], PatchrKeysData[6350], PatchrKeysData[5081], PatchrKeysData[4535], PatchrKeysData[3501], PatchrKeysData[6121], PatchrKeysData[422], PatchrKeysData[1074], PatchrKeysData[4271], PatchrKeysData[2153], PatchrKeysData[2748], PatchrKeysData[5436], PatchrKeysData[6638], PatchrKeysData[3708], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[926], PatchrKeysData[1255], PatchrKeysData[5826], PatchrKeysData[6509], PatchrKeysData[5342], PatchrKeysData[6137], PatchrKeysData[58], PatchrKeysData[3588], PatchrKeysData[6340], PatchrKeysData[3644], PatchrKeysData[612], PatchrKeysData[6458], PatchrKeysData[5014], PatchrKeysData[1957], PatchrKeysData[1338], PatchrKeysData[3962], PatchrKeysData[3075], PatchrKeysData[2341], PatchrKeysData[333], PatchrKeysData[2566], PatchrKeysData[2836], PatchrKeysData[247], PatchrKeysData[3248], PatchrKeysData[6273], PatchrKeysData[4557], PatchrKeysData[5809], PatchrKeysData[1918], PatchrKeysData[1968], PatchrKeysData[2039], PatchrKeysData[6280], PatchrKeysData[1093], PatchrKeysData[2585], PatchrKeysData[6306], PatchrKeysData[1518], PatchrKeysData[3068], PatchrKeysData[3746], PatchrKeysData[1349], PatchrKeysData[3294], PatchrKeysData[4786], PatchrKeysData[5617], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[6327], PatchrKeysData[820], PatchrKeysData[4256], PatchrKeysData[2539], PatchrKeysData[3863], PatchrKeysData[3562], PatchrKeysData[2910], PatchrKeysData[4238], PatchrKeysData[2258], PatchrKeysData[5040], PatchrKeysData[3360], PatchrKeysData[1665], PatchrKeysData[6356], PatchrKeysData[15], PatchrKeysData[6064], PatchrKeysData[5961], PatchrKeysData[569], PatchrKeysData[6324], PatchrKeysData[3901], PatchrKeysData[2670], PatchrKeysData[1253], PatchrKeysData[5740], PatchrKeysData[6619], PatchrKeysData[6291], PatchrKeysData[4120], PatchrKeysData[4461], PatchrKeysData[3304], PatchrKeysData[6108], PatchrKeysData[6713], PatchrKeysData[4300], PatchrKeysData[5191], PatchrKeysData[2017], PatchrKeysData[3638], PatchrKeysData[1577], PatchrKeysData[5833], PatchrKeysData[5807], PatchrKeysData[1938], PatchrKeysData[434], PatchrKeysData[1730], PatchrKeysData[3553], PatchrKeysData[1467], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6762] = "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_iEp9AY27x8HFsJ7bd/TjzPTkE5N2K5NbNbvPjQ9Us+yRW1GVBoOI4fHLPR+XWIw+1wz33LOzCRTluXH4bLeRl8d0zHNjlpwCSwKQfZ1Q2ldFtkfyxTe+cl7RWBUX+iezi5VdclEY11cYMEaDG2t4yx9WmPpx5EPJInBx2XcNS6NyK8PBUd4sFs5oHrIbx49xpNtrrB9hO+Io8AL6odYwrDb2EgO8oDD2yL8UMZ7aCCwqLY38sj3w/LS77IutsodMr/7xYVWCRNp3wiMStsT1+qsg_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\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
