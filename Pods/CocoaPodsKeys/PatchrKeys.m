//
// Generated by CocoaPods-Keys
// on 21/08/2017
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

  @dynamic bugsnagKey;
  @dynamic bingSubscriptionKey;
  @dynamic creativeSdkClientSecret;
  @dynamic awsS3Secret;
  @dynamic branchKey;

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[3078], PatchrKeysData[3869], PatchrKeysData[650], PatchrKeysData[5177], PatchrKeysData[1192], PatchrKeysData[4982], PatchrKeysData[4070], PatchrKeysData[566], PatchrKeysData[412], PatchrKeysData[598], PatchrKeysData[1191], PatchrKeysData[940], PatchrKeysData[1115], PatchrKeysData[4232], PatchrKeysData[4131], PatchrKeysData[1587], PatchrKeysData[1094], PatchrKeysData[4864], PatchrKeysData[4286], PatchrKeysData[4550], PatchrKeysData[1465], PatchrKeysData[4365], PatchrKeysData[5860], PatchrKeysData[4918], PatchrKeysData[4042], PatchrKeysData[4398], PatchrKeysData[2294], PatchrKeysData[5025], PatchrKeysData[1277], PatchrKeysData[2546], PatchrKeysData[1662], PatchrKeysData[1302], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1137], PatchrKeysData[3573], PatchrKeysData[5195], PatchrKeysData[1792], PatchrKeysData[1385], PatchrKeysData[1473], PatchrKeysData[4885], PatchrKeysData[2114], PatchrKeysData[647], PatchrKeysData[154], PatchrKeysData[2229], PatchrKeysData[5350], PatchrKeysData[2509], PatchrKeysData[4933], PatchrKeysData[109], PatchrKeysData[86], PatchrKeysData[1594], PatchrKeysData[5832], PatchrKeysData[5126], PatchrKeysData[3630], PatchrKeysData[2567], PatchrKeysData[4256], PatchrKeysData[943], PatchrKeysData[3519], PatchrKeysData[1982], PatchrKeysData[1875], PatchrKeysData[4632], PatchrKeysData[2316], PatchrKeysData[4466], PatchrKeysData[232], PatchrKeysData[5186], PatchrKeysData[3321], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[3559], PatchrKeysData[4496], PatchrKeysData[3946], PatchrKeysData[1451], PatchrKeysData[541], PatchrKeysData[2466], PatchrKeysData[4071], PatchrKeysData[4813], PatchrKeysData[514], PatchrKeysData[4222], PatchrKeysData[4667], PatchrKeysData[294], PatchrKeysData[4197], PatchrKeysData[3463], PatchrKeysData[2761], PatchrKeysData[6012], PatchrKeysData[4357], PatchrKeysData[1464], PatchrKeysData[4899], PatchrKeysData[3410], PatchrKeysData[5769], PatchrKeysData[4951], PatchrKeysData[2037], PatchrKeysData[4120], PatchrKeysData[5116], PatchrKeysData[3959], PatchrKeysData[143], PatchrKeysData[2120], PatchrKeysData[2860], PatchrKeysData[207], PatchrKeysData[3706], PatchrKeysData[4601], PatchrKeysData[1031], PatchrKeysData[5145], PatchrKeysData[4313], PatchrKeysData[1546], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[762], PatchrKeysData[1553], PatchrKeysData[729], PatchrKeysData[1055], PatchrKeysData[4194], PatchrKeysData[1510], PatchrKeysData[4545], PatchrKeysData[1295], PatchrKeysData[5166], PatchrKeysData[306], PatchrKeysData[1917], PatchrKeysData[4215], PatchrKeysData[4589], PatchrKeysData[1622], PatchrKeysData[5522], PatchrKeysData[1732], PatchrKeysData[4146], PatchrKeysData[2940], PatchrKeysData[853], PatchrKeysData[1958], PatchrKeysData[3547], PatchrKeysData[1195], PatchrKeysData[3533], PatchrKeysData[5089], PatchrKeysData[5924], PatchrKeysData[3843], PatchrKeysData[624], PatchrKeysData[1143], PatchrKeysData[3990], PatchrKeysData[4588], PatchrKeysData[2332], PatchrKeysData[1842], PatchrKeysData[2799], PatchrKeysData[3961], PatchrKeysData[4048], PatchrKeysData[4367], PatchrKeysData[451], PatchrKeysData[3802], PatchrKeysData[3953], PatchrKeysData[3248], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[864], PatchrKeysData[994], PatchrKeysData[198], PatchrKeysData[2238], PatchrKeysData[2366], PatchrKeysData[4139], PatchrKeysData[3212], PatchrKeysData[246], PatchrKeysData[5203], PatchrKeysData[4785], PatchrKeysData[5499], PatchrKeysData[5175], PatchrKeysData[2609], PatchrKeysData[1720], PatchrKeysData[2507], PatchrKeysData[5833], PatchrKeysData[3910], PatchrKeysData[4144], PatchrKeysData[1853], PatchrKeysData[6015], PatchrKeysData[805], PatchrKeysData[723], PatchrKeysData[4506], PatchrKeysData[3290], PatchrKeysData[5961], PatchrKeysData[1714], PatchrKeysData[3703], PatchrKeysData[879], PatchrKeysData[5497], PatchrKeysData[1470], PatchrKeysData[2031], PatchrKeysData[5866], PatchrKeysData[4503], PatchrKeysData[1703], PatchrKeysData[381], PatchrKeysData[4730], PatchrKeysData[4560], PatchrKeysData[2604], PatchrKeysData[210], PatchrKeysData[4716], PatchrKeysData[1310], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[6038] = "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_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_L/XUBQBCewO9Byr34jFBTnbur82m15Gh3TITNQZnzNDuX31qtnw6xLKiHekmoiW54EBL6fREvXrWKH+wBRiAJntuNH2m1t/ZfA9ZbnYzGD1vELSi+ImcWyp4U54qyyxjeSMyDu6hGPlf/LMW/s36a8ZN+8Kc0xwfqnbiZp8OZEiWgRD5Ubl6TBDcEtWMnxtIDv5rme+wp+tdkDZ9jib9WAVWVc0be9/mUZEnVncVegoa7o16QvpLRbYB/wQXvqLaBk33xGWs//oDKCq1HyYySNDa+/arVto7Nc/bHVCaAYBjgfJvB7BdpVL1tWFanRezmFqOQZE1hP26TqNVZ4awH8+IOld4zTsClfNQP63Dv1bvX7Gho8Vg/igR+1xxHrdp4HP2e1J5A9D+nlpCsYIbJwSyielT4d9hN0R17DKNu5Iz0u9U5Z5EbzC3ciBrN2Pbe3dQ8HCDdNE8SjpVqmDKzFBftWdyrDvV/ZDB2D1VymskDQNknBp2FgpX65Ey3KV8ZQKrqkR8ozJLNp+/fyt+cn1TI2+6obihbX7S3/2sENxXP4Jtthlg32hWSHOd96uLZ1qw5OCkcmVlnmWb7V59d9gDMjsUbwUOFLKsiWJ1vrXxEqcOFanGaLe+dAo1o24lCRyZmJHfXzi/Tc0G6xsbevkz/WVc1WN3gxWCYmbnNxT7I4MdgWgTkoUSpF80JTqYHKHyXkWwlvAlzSsthb+HEBcv8CbbpI6+0YYK2eK5qBPB182U68z4BEddSXovZJH3rMKKblwR7GDgIQxE/UA5GNeNcbg/8nhFc7S9wlAecTkpudh3H921kOZQpyuHEw==\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
