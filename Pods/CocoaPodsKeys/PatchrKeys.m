//
// Generated by CocoaPods-Keys
// on 19/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[644], PatchrKeysData[2303], PatchrKeysData[8652], PatchrKeysData[6714], PatchrKeysData[4958], PatchrKeysData[7857], PatchrKeysData[1909], PatchrKeysData[9405], PatchrKeysData[1847], PatchrKeysData[2086], PatchrKeysData[9554], PatchrKeysData[815], PatchrKeysData[317], PatchrKeysData[3641], PatchrKeysData[3962], PatchrKeysData[9137], PatchrKeysData[5319], PatchrKeysData[6517], PatchrKeysData[3670], PatchrKeysData[7583], PatchrKeysData[6669], PatchrKeysData[1944], PatchrKeysData[567], PatchrKeysData[9740], PatchrKeysData[8638], PatchrKeysData[1223], PatchrKeysData[4229], PatchrKeysData[3240], PatchrKeysData[7350], PatchrKeysData[7229], PatchrKeysData[9600], PatchrKeysData[2445], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[1383], PatchrKeysData[3672], PatchrKeysData[2324], PatchrKeysData[7374], PatchrKeysData[8354], PatchrKeysData[7894], PatchrKeysData[2278], PatchrKeysData[5489], PatchrKeysData[5880], PatchrKeysData[6425], PatchrKeysData[2864], PatchrKeysData[4298], PatchrKeysData[4935], PatchrKeysData[9264], PatchrKeysData[9266], PatchrKeysData[4031], PatchrKeysData[1507], PatchrKeysData[3277], PatchrKeysData[3320], PatchrKeysData[7106], PatchrKeysData[2623], PatchrKeysData[6254], PatchrKeysData[7672], PatchrKeysData[1600], PatchrKeysData[4020], PatchrKeysData[2476], PatchrKeysData[2247], PatchrKeysData[6848], PatchrKeysData[8309], PatchrKeysData[4436], PatchrKeysData[3404], PatchrKeysData[1357], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[32], PatchrKeysData[846], PatchrKeysData[8079], PatchrKeysData[6523], PatchrKeysData[1918], PatchrKeysData[382], PatchrKeysData[4956], PatchrKeysData[550], PatchrKeysData[2714], PatchrKeysData[1803], PatchrKeysData[7673], PatchrKeysData[1036], PatchrKeysData[7522], PatchrKeysData[9883], PatchrKeysData[8435], PatchrKeysData[8146], PatchrKeysData[480], PatchrKeysData[9946], PatchrKeysData[1243], PatchrKeysData[6427], PatchrKeysData[534], PatchrKeysData[8481], PatchrKeysData[5644], PatchrKeysData[4689], PatchrKeysData[8796], PatchrKeysData[9412], PatchrKeysData[5723], PatchrKeysData[1905], PatchrKeysData[2287], PatchrKeysData[5648], PatchrKeysData[592], PatchrKeysData[2494], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[131], PatchrKeysData[9830], PatchrKeysData[5281], PatchrKeysData[7232], PatchrKeysData[8298], PatchrKeysData[581], PatchrKeysData[6723], PatchrKeysData[6479], PatchrKeysData[5828], PatchrKeysData[5238], PatchrKeysData[1113], PatchrKeysData[7160], PatchrKeysData[9319], PatchrKeysData[4019], PatchrKeysData[6245], PatchrKeysData[5946], PatchrKeysData[7025], PatchrKeysData[6834], PatchrKeysData[2240], PatchrKeysData[8920], PatchrKeysData[6842], PatchrKeysData[1402], PatchrKeysData[1433], PatchrKeysData[168], PatchrKeysData[8808], PatchrKeysData[945], PatchrKeysData[3574], PatchrKeysData[3486], PatchrKeysData[3278], PatchrKeysData[8483], PatchrKeysData[1003], PatchrKeysData[4641], PatchrKeysData[2413], PatchrKeysData[349], PatchrKeysData[1356], PatchrKeysData[2846], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[2930], PatchrKeysData[7202], PatchrKeysData[2687], PatchrKeysData[2816], PatchrKeysData[1169], PatchrKeysData[6583], PatchrKeysData[9498], PatchrKeysData[1610], PatchrKeysData[5859], PatchrKeysData[5747], PatchrKeysData[7937], PatchrKeysData[8597], PatchrKeysData[4754], PatchrKeysData[4971], PatchrKeysData[5320], PatchrKeysData[223], PatchrKeysData[6410], PatchrKeysData[187], PatchrKeysData[4724], PatchrKeysData[751], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1589], PatchrKeysData[108], PatchrKeysData[2189], PatchrKeysData[265], PatchrKeysData[8347], PatchrKeysData[9143], PatchrKeysData[6003], PatchrKeysData[8084], PatchrKeysData[830], PatchrKeysData[7931], PatchrKeysData[3253], PatchrKeysData[4756], PatchrKeysData[8977], PatchrKeysData[9296], PatchrKeysData[1063], PatchrKeysData[6671], PatchrKeysData[9867], PatchrKeysData[9959], PatchrKeysData[4438], PatchrKeysData[931], PatchrKeysData[2741], PatchrKeysData[7531], PatchrKeysData[1372], PatchrKeysData[1671], PatchrKeysData[7083], PatchrKeysData[492], PatchrKeysData[4001], PatchrKeysData[1782], PatchrKeysData[7144], PatchrKeysData[6081], PatchrKeysData[2045], PatchrKeysData[9478], PatchrKeysData[6344], PatchrKeysData[1200], PatchrKeysData[6860], PatchrKeysData[6808], PatchrKeysData[1957], PatchrKeysData[2401], PatchrKeysData[182], PatchrKeysData[4585], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[8831], PatchrKeysData[2879], PatchrKeysData[9347], PatchrKeysData[9561], PatchrKeysData[3716], PatchrKeysData[2535], PatchrKeysData[3323], PatchrKeysData[9030], PatchrKeysData[9760], PatchrKeysData[1494], PatchrKeysData[7483], PatchrKeysData[5507], PatchrKeysData[2929], PatchrKeysData[8241], PatchrKeysData[400], PatchrKeysData[4615], PatchrKeysData[4750], PatchrKeysData[4128], PatchrKeysData[749], PatchrKeysData[7811], PatchrKeysData[9573], PatchrKeysData[7304], PatchrKeysData[8960], PatchrKeysData[8162], PatchrKeysData[8506], PatchrKeysData[6], PatchrKeysData[3977], PatchrKeysData[9861], PatchrKeysData[3195], PatchrKeysData[3154], PatchrKeysData[295], PatchrKeysData[8397], PatchrKeysData[7960], PatchrKeysData[768], PatchrKeysData[8446], PatchrKeysData[8038], PatchrKeysData[1607], PatchrKeysData[7280], PatchrKeysData[923], PatchrKeysData[7307], PatchrKeysData[1952], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[6722], PatchrKeysData[7989], PatchrKeysData[3332], PatchrKeysData[877], PatchrKeysData[2483], PatchrKeysData[1929], PatchrKeysData[2459], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[3620], PatchrKeysData[7103], PatchrKeysData[4746], PatchrKeysData[5639], PatchrKeysData[5002], PatchrKeysData[224], PatchrKeysData[5917], PatchrKeysData[5796], PatchrKeysData[9430], PatchrKeysData[2682], PatchrKeysData[2506], PatchrKeysData[6931], PatchrKeysData[667], PatchrKeysData[7997], PatchrKeysData[2011], PatchrKeysData[8849], PatchrKeysData[417], PatchrKeysData[7086], PatchrKeysData[8981], PatchrKeysData[7767], PatchrKeysData[3261], PatchrKeysData[8242], PatchrKeysData[6359], PatchrKeysData[8871], PatchrKeysData[4804], PatchrKeysData[7942], PatchrKeysData[3429], PatchrKeysData[4313], PatchrKeysData[6051], PatchrKeysData[5830], PatchrKeysData[7390], PatchrKeysData[4644], PatchrKeysData[8899], PatchrKeysData[6619], PatchrKeysData[7120], PatchrKeysData[4374], PatchrKeysData[3531], PatchrKeysData[8590], PatchrKeysData[5271], PatchrKeysData[8966], PatchrKeysData[9423], PatchrKeysData[5541], PatchrKeysData[3026], PatchrKeysData[8452], PatchrKeysData[7422], PatchrKeysData[2528], PatchrKeysData[9217], PatchrKeysData[425], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[9986] = "|kjlbA1ybfxRjhpXK70XaS5e2m0VtUNUU27nsw31WGbYvMcCDAd3desywGJ6Yc72e3K0lVnaTjY4UeDuHu9hZH4vvzRt001Ibj7YVLJuLUe/7Ej9edSWQ87g0gdTvE3PcAUE5uqsXZIlbQ8LybLO73a1C5K6CVRLVImP8AMN73DTLNsQt32JjeNOnfDaWgXQeEkv0TF4dcXmhu0HoYWtrH+roww0/rhgLAQc62geH/xScyvMO4VRr2UQX94soisFSDfrrHWL4PoYtwnDkAaZpX/wpAQJH+lK3kPTf0UAuB5lNVRUDChlqk2jUyqGN/4DldSgL57DEqhkqpE8tKacGIhYlH4968QDgx5+oeOewM7OVs+N7cupkm+OlOpjCHk1M5/R+/xNk+KEHfEPmkZxEPqw0s4B9Gs7m82WW1t9M1dXqMLSAZXwYA/0Q+MiwVGkaFE1strA8sSh+Nkx38mXAMddi9LiRuphHLalDEm4DabP1Vy2DqyFr7JQNh6X0AJUgL5nZle2WMkABNNOsQCYOaCtTdNUMcPhpxb5C/M0XOF3dcuZTa404MF4W88le1bacKScT7f4S+47LEtYPI75MTQ+HJHsHz46+peaAyNGteXej6EldxvvlsPUfWFLz88ZQRj4Co6X9U2yh3CyynKeMfDzwnKKhS031UL0A4Uaz1rV+xe6RZrP7RGKICURPNChPch3V7v5_nki7ASolDeNiYV0iJFph7e5P+PX5SH2vPPkvpI0r6mVxykmxH+MP7xknfkDmuJsaZ4OV2nAZm+otRgvj0xyN7nibI9D3rQtQtMomrCkBNET4RvTJ5H8OPm25U1Q5z2cr4k0eSyXeoeTWijikd9sv+fvzaYBWNt/op6gsZCxz0+EdqdqhUUfHqWn5mMTSyeYVeBeLlE_5p65OFxnYk42cghgGpTMzpJNIRCESb0n+MPlSGjPwb5fktvJNqyaaw4jL4sD8+VKglo8l2OCJv8ttZVOll/hEAUEzWKC3fTYqQC6zRPF209luN7TtHXe97+zFF9Mc+e+kPO1PqXYC5U+7ZKImLfYIPjQkGxFChQa+/Xm8sU4SeBB/xR3r48N47/Le7Y8jkyux6MF8WeQF5PAZQDe+B7JGpHm+Wj6J6+\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
