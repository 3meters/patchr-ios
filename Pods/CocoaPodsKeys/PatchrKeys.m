//
// Generated by CocoaPods-Keys
// on 16/12/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[10152], PatchrKeysData[6046], PatchrKeysData[867], PatchrKeysData[9068], PatchrKeysData[11481], PatchrKeysData[10366], PatchrKeysData[9104], PatchrKeysData[8056], PatchrKeysData[12163], PatchrKeysData[2821], PatchrKeysData[10485], PatchrKeysData[9357], PatchrKeysData[13335], PatchrKeysData[8820], PatchrKeysData[10980], PatchrKeysData[5811], PatchrKeysData[10154], PatchrKeysData[13013], PatchrKeysData[7308], PatchrKeysData[3427], PatchrKeysData[1095], PatchrKeysData[6692], PatchrKeysData[9518], PatchrKeysData[12234], PatchrKeysData[10824], PatchrKeysData[1020], PatchrKeysData[4591], PatchrKeysData[3017], PatchrKeysData[8789], PatchrKeysData[4654], PatchrKeysData[5420], PatchrKeysData[6868], PatchrKeysData[11626], PatchrKeysData[7342], PatchrKeysData[10233], PatchrKeysData[9418], PatchrKeysData[11003], PatchrKeysData[6294], PatchrKeysData[9412], PatchrKeysData[11520], PatchrKeysData[10132], PatchrKeysData[3934], PatchrKeysData[5721], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[9009], PatchrKeysData[7566], PatchrKeysData[263], PatchrKeysData[1152], PatchrKeysData[7541], PatchrKeysData[9894], PatchrKeysData[1341], PatchrKeysData[9228], PatchrKeysData[11425], PatchrKeysData[5450], PatchrKeysData[9613], PatchrKeysData[4777], PatchrKeysData[13303], PatchrKeysData[12603], PatchrKeysData[5647], PatchrKeysData[11948], PatchrKeysData[8659], PatchrKeysData[10071], PatchrKeysData[9888], PatchrKeysData[6554], PatchrKeysData[10502], PatchrKeysData[4022], PatchrKeysData[4182], PatchrKeysData[10232], PatchrKeysData[12304], PatchrKeysData[11289], PatchrKeysData[1267], PatchrKeysData[3849], PatchrKeysData[4391], PatchrKeysData[7829], PatchrKeysData[5365], PatchrKeysData[2711], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2931], PatchrKeysData[6418], PatchrKeysData[13024], PatchrKeysData[8495], PatchrKeysData[12493], PatchrKeysData[12091], PatchrKeysData[3831], PatchrKeysData[10278], PatchrKeysData[2524], PatchrKeysData[8889], PatchrKeysData[7907], PatchrKeysData[9521], PatchrKeysData[7182], PatchrKeysData[9734], PatchrKeysData[1242], PatchrKeysData[9100], PatchrKeysData[8527], PatchrKeysData[3125], PatchrKeysData[6521], PatchrKeysData[5045], PatchrKeysData[6235], PatchrKeysData[550], PatchrKeysData[7217], PatchrKeysData[3095], PatchrKeysData[3289], PatchrKeysData[247], PatchrKeysData[7588], PatchrKeysData[824], PatchrKeysData[9185], PatchrKeysData[7018], PatchrKeysData[11342], PatchrKeysData[9911], PatchrKeysData[7698], PatchrKeysData[11933], PatchrKeysData[7580], PatchrKeysData[6735], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[523], PatchrKeysData[13088], PatchrKeysData[577], PatchrKeysData[8108], PatchrKeysData[7393], PatchrKeysData[4690], PatchrKeysData[8555], PatchrKeysData[1160], PatchrKeysData[9972], PatchrKeysData[4791], PatchrKeysData[7358], PatchrKeysData[9152], PatchrKeysData[1083], PatchrKeysData[5475], PatchrKeysData[5632], PatchrKeysData[534], PatchrKeysData[9495], PatchrKeysData[11154], PatchrKeysData[6797], PatchrKeysData[11129], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6591], PatchrKeysData[5697], PatchrKeysData[4648], PatchrKeysData[3465], PatchrKeysData[5323], PatchrKeysData[513], PatchrKeysData[2840], PatchrKeysData[2240], PatchrKeysData[5789], PatchrKeysData[763], PatchrKeysData[6429], PatchrKeysData[3099], PatchrKeysData[1254], PatchrKeysData[4751], PatchrKeysData[2696], PatchrKeysData[142], PatchrKeysData[1459], PatchrKeysData[5440], PatchrKeysData[1231], PatchrKeysData[12452], PatchrKeysData[2861], PatchrKeysData[10465], PatchrKeysData[3287], PatchrKeysData[7237], PatchrKeysData[3073], PatchrKeysData[10820], PatchrKeysData[160], PatchrKeysData[4809], PatchrKeysData[8073], PatchrKeysData[2001], PatchrKeysData[6963], PatchrKeysData[8780], PatchrKeysData[7062], PatchrKeysData[5414], PatchrKeysData[8105], PatchrKeysData[536], PatchrKeysData[10390], PatchrKeysData[10483], PatchrKeysData[8552], PatchrKeysData[5211], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[12119], PatchrKeysData[9116], PatchrKeysData[6862], PatchrKeysData[7925], PatchrKeysData[7443], PatchrKeysData[6700], PatchrKeysData[9276], PatchrKeysData[12713], PatchrKeysData[269], PatchrKeysData[6943], PatchrKeysData[13206], PatchrKeysData[8878], PatchrKeysData[4062], PatchrKeysData[7874], PatchrKeysData[3880], PatchrKeysData[4795], PatchrKeysData[3110], PatchrKeysData[6947], PatchrKeysData[6160], PatchrKeysData[2339], PatchrKeysData[5892], PatchrKeysData[11394], PatchrKeysData[9070], PatchrKeysData[355], PatchrKeysData[7085], PatchrKeysData[11913], PatchrKeysData[8921], PatchrKeysData[3552], PatchrKeysData[5168], PatchrKeysData[8129], PatchrKeysData[6628], PatchrKeysData[10698], PatchrKeysData[9523], PatchrKeysData[102], PatchrKeysData[11321], PatchrKeysData[362], PatchrKeysData[10238], PatchrKeysData[9210], PatchrKeysData[8210], PatchrKeysData[4687], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[10742], PatchrKeysData[8437], PatchrKeysData[2620], PatchrKeysData[6299], PatchrKeysData[3520], PatchrKeysData[11541], PatchrKeysData[2016], PatchrKeysData[9802], PatchrKeysData[13004], PatchrKeysData[2813], PatchrKeysData[2244], PatchrKeysData[1619], PatchrKeysData[11895], PatchrKeysData[1397], PatchrKeysData[10924], PatchrKeysData[7220], PatchrKeysData[4113], PatchrKeysData[12680], PatchrKeysData[8293], PatchrKeysData[440], PatchrKeysData[11946], PatchrKeysData[9729], PatchrKeysData[15], PatchrKeysData[1819], PatchrKeysData[12776], PatchrKeysData[4043], PatchrKeysData[9293], PatchrKeysData[8851], PatchrKeysData[3015], PatchrKeysData[8583], PatchrKeysData[12873], PatchrKeysData[3226], PatchrKeysData[11293], PatchrKeysData[8471], PatchrKeysData[1371], PatchrKeysData[709], PatchrKeysData[13092], PatchrKeysData[938], PatchrKeysData[3456], PatchrKeysData[3985], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[10967], PatchrKeysData[8776], PatchrKeysData[294], PatchrKeysData[296], PatchrKeysData[3504], PatchrKeysData[12559], PatchrKeysData[6129], PatchrKeysData[8900], PatchrKeysData[4470], PatchrKeysData[6835], PatchrKeysData[9674], PatchrKeysData[11273], PatchrKeysData[10179], PatchrKeysData[10053], PatchrKeysData[10129], PatchrKeysData[7144], PatchrKeysData[9684], PatchrKeysData[13172], PatchrKeysData[8759], PatchrKeysData[12354], PatchrKeysData[6534], PatchrKeysData[7643], PatchrKeysData[6396], PatchrKeysData[8822], PatchrKeysData[4142], PatchrKeysData[3866], PatchrKeysData[9135], PatchrKeysData[7684], PatchrKeysData[9222], PatchrKeysData[4170], PatchrKeysData[216], PatchrKeysData[3228], PatchrKeysData[844], PatchrKeysData[4929], PatchrKeysData[8902], PatchrKeysData[8444], PatchrKeysData[12084], PatchrKeysData[9253], PatchrKeysData[6452], PatchrKeysData[12530], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[1005], PatchrKeysData[10988], PatchrKeysData[1863], PatchrKeysData[10949], PatchrKeysData[6531], PatchrKeysData[7956], PatchrKeysData[8236], PatchrKeysData[8654], PatchrKeysData[5142], PatchrKeysData[1469], PatchrKeysData[7022], PatchrKeysData[12722], PatchrKeysData[173], PatchrKeysData[6000], PatchrKeysData[527], PatchrKeysData[3195], PatchrKeysData[8411], PatchrKeysData[298], PatchrKeysData[3411], PatchrKeysData[8264], PatchrKeysData[7231], PatchrKeysData[3749], PatchrKeysData[4902], PatchrKeysData[3058], PatchrKeysData[236], PatchrKeysData[12898], PatchrKeysData[967], PatchrKeysData[1173], PatchrKeysData[9747], PatchrKeysData[1], PatchrKeysData[7291], PatchrKeysData[12101], PatchrKeysData[11979], PatchrKeysData[2273], PatchrKeysData[13126], PatchrKeysData[2899], PatchrKeysData[4228], PatchrKeysData[12950], PatchrKeysData[1684], PatchrKeysData[11361], PatchrKeysData[12027], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[5757], PatchrKeysData[992], PatchrKeysData[5059], PatchrKeysData[8458], PatchrKeysData[7575], PatchrKeysData[1843], PatchrKeysData[5929], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[3432], PatchrKeysData[13412], PatchrKeysData[5814], PatchrKeysData[7012], PatchrKeysData[12402], PatchrKeysData[2106], PatchrKeysData[12527], PatchrKeysData[4249], PatchrKeysData[4931], PatchrKeysData[474], PatchrKeysData[789], PatchrKeysData[2074], PatchrKeysData[13185], PatchrKeysData[12668], PatchrKeysData[901], PatchrKeysData[13190], PatchrKeysData[8459], PatchrKeysData[9191], PatchrKeysData[11257], PatchrKeysData[971], PatchrKeysData[5060], PatchrKeysData[1312], PatchrKeysData[6166], PatchrKeysData[491], PatchrKeysData[5618], PatchrKeysData[299], PatchrKeysData[13063], PatchrKeysData[2371], PatchrKeysData[1145], PatchrKeysData[7831], PatchrKeysData[11115], PatchrKeysData[5519], PatchrKeysData[1238], PatchrKeysData[9919], PatchrKeysData[4951], PatchrKeysData[4839], PatchrKeysData[8856], PatchrKeysData[8047], PatchrKeysData[6205], PatchrKeysData[5800], PatchrKeysData[12805], PatchrKeysData[9882], PatchrKeysData[3104], PatchrKeysData[1244], PatchrKeysData[1109], PatchrKeysData[8257], PatchrKeysData[5387], PatchrKeysData[571], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[13418] = "|lApRCpJ6qFgcTIGDKEm2KMKy76kqbS9PelcYlyV4lcXbcY+P59OgbZlrPxGZDOjvK1e+FJFxNw8w49PDbpNHvEzOYMAwcx+Jb2y2KdKKw3joouy14qAPb2rKQ1XANKaxsghsLpi/JhDbhDQpc3YYb3mjZ4Pt7kYtoYR/bo9BYqjSsK2seB0dH+fimr1PqQDFrBOlZYX1u5YUDfKH7GlDnBV9BE4Lo9jqo\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
