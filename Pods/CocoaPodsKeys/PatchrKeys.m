//
// Generated by CocoaPods-Keys
// on 20/10/2016
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bugsnagKey"]) {
    implementation = _podKeyscb1d83799398973f8aaf13fe74946723;
  }

  if ([key isEqualToString:@"bingSubscriptionKey"]) {
    implementation = _podKeyse6604380e1147a3126316b573070ec4e;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if ([key isEqualToString:@"proxibaseSecret"]) {
    implementation = _podKeys977a4e3d43d506c4c8f28dbcfc106730;
  }

  if ([key isEqualToString:@"facebookToken"]) {
    implementation = _podKeyse9c848d2566111a2e8ab97a467a8f412;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeyscb1d83799398973f8aaf13fe74946723(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[4520], PatchrKeysData[3289], PatchrKeysData[2340], PatchrKeysData[8627], PatchrKeysData[6211], PatchrKeysData[8383], PatchrKeysData[10332], PatchrKeysData[2442], PatchrKeysData[1432], PatchrKeysData[2932], PatchrKeysData[7539], PatchrKeysData[7633], PatchrKeysData[8621], PatchrKeysData[1451], PatchrKeysData[7766], PatchrKeysData[3407], PatchrKeysData[5015], PatchrKeysData[5131], PatchrKeysData[7869], PatchrKeysData[7804], PatchrKeysData[1755], PatchrKeysData[1711], PatchrKeysData[404], PatchrKeysData[7814], PatchrKeysData[1998], PatchrKeysData[9736], PatchrKeysData[2329], PatchrKeysData[7044], PatchrKeysData[4891], PatchrKeysData[3509], PatchrKeysData[9806], PatchrKeysData[4957], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse6604380e1147a3126316b573070ec4e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[10320], PatchrKeysData[1849], PatchrKeysData[141], PatchrKeysData[4752], PatchrKeysData[4049], PatchrKeysData[1806], PatchrKeysData[6263], PatchrKeysData[2448], PatchrKeysData[8151], PatchrKeysData[7981], PatchrKeysData[8431], PatchrKeysData[8789], PatchrKeysData[6917], PatchrKeysData[1853], PatchrKeysData[6015], PatchrKeysData[4603], PatchrKeysData[8680], PatchrKeysData[7123], PatchrKeysData[2327], PatchrKeysData[7841], PatchrKeysData[4118], PatchrKeysData[6820], PatchrKeysData[3955], PatchrKeysData[665], PatchrKeysData[6569], PatchrKeysData[9598], PatchrKeysData[9767], PatchrKeysData[5470], PatchrKeysData[9084], PatchrKeysData[9180], PatchrKeysData[4727], PatchrKeysData[2714], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[9545], PatchrKeysData[5843], PatchrKeysData[2184], PatchrKeysData[5125], PatchrKeysData[8651], PatchrKeysData[8404], PatchrKeysData[1895], PatchrKeysData[6524], PatchrKeysData[7470], PatchrKeysData[2463], PatchrKeysData[2376], PatchrKeysData[7543], PatchrKeysData[5084], PatchrKeysData[3203], PatchrKeysData[4101], PatchrKeysData[2484], PatchrKeysData[4698], PatchrKeysData[7083], PatchrKeysData[10126], PatchrKeysData[10108], PatchrKeysData[9316], PatchrKeysData[6418], PatchrKeysData[9576], PatchrKeysData[6609], PatchrKeysData[8104], PatchrKeysData[2686], PatchrKeysData[1527], PatchrKeysData[9526], PatchrKeysData[2946], PatchrKeysData[464], PatchrKeysData[5252], PatchrKeysData[1295], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[2887], PatchrKeysData[8799], PatchrKeysData[9158], PatchrKeysData[5355], PatchrKeysData[4329], PatchrKeysData[8016], PatchrKeysData[6612], PatchrKeysData[3579], PatchrKeysData[4082], PatchrKeysData[3283], PatchrKeysData[5854], PatchrKeysData[5397], PatchrKeysData[2069], PatchrKeysData[4452], PatchrKeysData[3090], PatchrKeysData[7798], PatchrKeysData[5149], PatchrKeysData[7069], PatchrKeysData[10303], PatchrKeysData[3843], PatchrKeysData[7524], PatchrKeysData[6724], PatchrKeysData[5340], PatchrKeysData[5725], PatchrKeysData[6341], PatchrKeysData[4005], PatchrKeysData[498], PatchrKeysData[9896], PatchrKeysData[1036], PatchrKeysData[5970], PatchrKeysData[4778], PatchrKeysData[4346], PatchrKeysData[7726], PatchrKeysData[6245], PatchrKeysData[976], PatchrKeysData[8403], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[6846], PatchrKeysData[2295], PatchrKeysData[6159], PatchrKeysData[8228], PatchrKeysData[320], PatchrKeysData[2283], PatchrKeysData[4714], PatchrKeysData[1757], PatchrKeysData[6845], PatchrKeysData[6064], PatchrKeysData[6351], PatchrKeysData[7030], PatchrKeysData[3702], PatchrKeysData[8931], PatchrKeysData[4145], PatchrKeysData[3714], PatchrKeysData[9865], PatchrKeysData[2753], PatchrKeysData[7086], PatchrKeysData[4792], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[3975], PatchrKeysData[6229], PatchrKeysData[2213], PatchrKeysData[8794], PatchrKeysData[2906], PatchrKeysData[3901], PatchrKeysData[5711], PatchrKeysData[3683], PatchrKeysData[10243], PatchrKeysData[6405], PatchrKeysData[4751], PatchrKeysData[4304], PatchrKeysData[4322], PatchrKeysData[1795], PatchrKeysData[6369], PatchrKeysData[6213], PatchrKeysData[6494], PatchrKeysData[364], PatchrKeysData[6313], PatchrKeysData[664], PatchrKeysData[1704], PatchrKeysData[8323], PatchrKeysData[2326], PatchrKeysData[4090], PatchrKeysData[7748], PatchrKeysData[1929], PatchrKeysData[9828], PatchrKeysData[8939], PatchrKeysData[1568], PatchrKeysData[8790], PatchrKeysData[5257], PatchrKeysData[4941], PatchrKeysData[7586], PatchrKeysData[8944], PatchrKeysData[2620], PatchrKeysData[1016], PatchrKeysData[8983], PatchrKeysData[5545], PatchrKeysData[3716], PatchrKeysData[3593], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[5885], PatchrKeysData[5424], PatchrKeysData[1392], PatchrKeysData[3810], PatchrKeysData[6517], PatchrKeysData[9611], PatchrKeysData[6831], PatchrKeysData[10296], PatchrKeysData[991], PatchrKeysData[7094], PatchrKeysData[3565], PatchrKeysData[7056], PatchrKeysData[1184], PatchrKeysData[10281], PatchrKeysData[7852], PatchrKeysData[7112], PatchrKeysData[6915], PatchrKeysData[8413], PatchrKeysData[7945], PatchrKeysData[7502], PatchrKeysData[9858], PatchrKeysData[3105], PatchrKeysData[2127], PatchrKeysData[5191], PatchrKeysData[6771], PatchrKeysData[6498], PatchrKeysData[506], PatchrKeysData[7676], PatchrKeysData[934], PatchrKeysData[2230], PatchrKeysData[3738], PatchrKeysData[6347], PatchrKeysData[10067], PatchrKeysData[8029], PatchrKeysData[3804], PatchrKeysData[2743], PatchrKeysData[2131], PatchrKeysData[10187], PatchrKeysData[348], PatchrKeysData[8901], PatchrKeysData[2768], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys977a4e3d43d506c4c8f28dbcfc106730(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[8] = { PatchrKeysData[4200], PatchrKeysData[36], PatchrKeysData[6327], PatchrKeysData[5609], PatchrKeysData[8500], PatchrKeysData[2746], PatchrKeysData[7307], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse9c848d2566111a2e8ab97a467a8f412(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[49] = { PatchrKeysData[9693], PatchrKeysData[2942], PatchrKeysData[6096], PatchrKeysData[8256], PatchrKeysData[1395], PatchrKeysData[6490], PatchrKeysData[6651], PatchrKeysData[4340], PatchrKeysData[2233], PatchrKeysData[9659], PatchrKeysData[6629], PatchrKeysData[584], PatchrKeysData[4643], PatchrKeysData[4663], PatchrKeysData[4102], PatchrKeysData[337], PatchrKeysData[6028], PatchrKeysData[8703], PatchrKeysData[7932], PatchrKeysData[7942], PatchrKeysData[8890], PatchrKeysData[4847], PatchrKeysData[2489], PatchrKeysData[2207], PatchrKeysData[9881], PatchrKeysData[6308], PatchrKeysData[9812], PatchrKeysData[9446], PatchrKeysData[1582], PatchrKeysData[280], PatchrKeysData[8259], PatchrKeysData[8655], PatchrKeysData[4070], PatchrKeysData[8424], PatchrKeysData[5466], PatchrKeysData[6016], PatchrKeysData[6860], PatchrKeysData[2730], PatchrKeysData[6013], PatchrKeysData[2171], PatchrKeysData[5702], PatchrKeysData[6353], PatchrKeysData[820], PatchrKeysData[3201], PatchrKeysData[9650], PatchrKeysData[2941], PatchrKeysData[3233], PatchrKeysData[9771], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[10370] = "UbdbLDlrvRzCpkBAQbaIHbnhwSZtok83+DCda0Cz1p+vmTHUK10kZ/6tOtVMW46+4v6Qgm6U9mJJiP/FAKBOGd2NO6HZtC49JQVkTVlH5ee3LAYe26ThEyXCqTveRAF/jOp/24rlIOi5Vas+2LItRJfV6WQTSqSl2t7tNxuMUph1B8RGwuKtTfW4NwvKoD3F38r0Jh9k5P+saIHBl7a80sCGNm8keGPBXxhhpHlz6KQJaTkV0sU8ks3ZNcj1LPeC9T+6x7Kmn0e2MPGDR8wr52Yy7/FcLycPSRCEPTvTCXEx5nchz3qcvm4FloaD7PklI9N9srVDTq6zoFXrN|\\\"";

- (NSString *)description
{
  return [@{
            @"bugsnagKey": self.bugsnagKey,
            @"bingSubscriptionKey": self.bingSubscriptionKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"branchKey": self.branchKey,
            @"proxibaseSecret": self.proxibaseSecret,
            @"facebookToken": self.facebookToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
