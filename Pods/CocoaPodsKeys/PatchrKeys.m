//
// Generated by CocoaPods-Keys
// on 11/08/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "PatchrKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation PatchrKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(PatchrKeys *, SEL) = NULL;

  if ([key isEqualToString:@"bingAccessKey"]) {
    implementation = _podKeysab65e9bbd339baf2a101c0c45e82610a;
  }

  if ([key isEqualToString:@"creativeSdkClientId"]) {
    implementation = _podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f;
  }

  if ([key isEqualToString:@"creativeSdkClientSecret"]) {
    implementation = _podKeysad40c1de013e6d4091f36a72b8bd6d59;
  }

  if ([key isEqualToString:@"awsS3Key"]) {
    implementation = _podKeyse34fa92f188be998ae3b930eacc919f8;
  }

  if ([key isEqualToString:@"awsS3Secret"]) {
    implementation = _podKeys28e3120dfd5d3940bfdd3918b00dc7c8;
  }

  if ([key isEqualToString:@"parseApplicationId"]) {
    implementation = _podKeysa8de356b4723a098354412f8d205af6c;
  }

  if ([key isEqualToString:@"parseApplicationKey"]) {
    implementation = _podKeys3033ac68db3f90561a6df555a9885a2e;
  }

  if ([key isEqualToString:@"fabricApiKey"]) {
    implementation = _podKeysad84410498465e7cde85907b4b49a875;
  }

  if ([key isEqualToString:@"branchKey"]) {
    implementation = _podKeysa0b8dbdc39d299a103febb05c63e662e;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysab65e9bbd339baf2a101c0c45e82610a(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[44] = { PatchrKeysData[5520], PatchrKeysData[6465], PatchrKeysData[8938], PatchrKeysData[2986], PatchrKeysData[6894], PatchrKeysData[561], PatchrKeysData[5573], PatchrKeysData[11026], PatchrKeysData[8880], PatchrKeysData[11868], PatchrKeysData[3540], PatchrKeysData[3080], PatchrKeysData[46], PatchrKeysData[6100], PatchrKeysData[4598], PatchrKeysData[8878], PatchrKeysData[9470], PatchrKeysData[7478], PatchrKeysData[5713], PatchrKeysData[11877], PatchrKeysData[3724], PatchrKeysData[3112], PatchrKeysData[6991], PatchrKeysData[3450], PatchrKeysData[7122], PatchrKeysData[4271], PatchrKeysData[2326], PatchrKeysData[5166], PatchrKeysData[3489], PatchrKeysData[10247], PatchrKeysData[11043], PatchrKeysData[3524], PatchrKeysData[2048], PatchrKeysData[6499], PatchrKeysData[8740], PatchrKeysData[10168], PatchrKeysData[5627], PatchrKeysData[3406], PatchrKeysData[7274], PatchrKeysData[2637], PatchrKeysData[7000], PatchrKeysData[5339], PatchrKeysData[7079], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysb2b3a4eeef502a37c4374d2cdc4b9f4f(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[33] = { PatchrKeysData[6891], PatchrKeysData[11761], PatchrKeysData[3], PatchrKeysData[10481], PatchrKeysData[11637], PatchrKeysData[3627], PatchrKeysData[3276], PatchrKeysData[11556], PatchrKeysData[4931], PatchrKeysData[475], PatchrKeysData[11439], PatchrKeysData[5017], PatchrKeysData[11738], PatchrKeysData[9337], PatchrKeysData[11160], PatchrKeysData[10078], PatchrKeysData[857], PatchrKeysData[1140], PatchrKeysData[5587], PatchrKeysData[5825], PatchrKeysData[6685], PatchrKeysData[10870], PatchrKeysData[6337], PatchrKeysData[8392], PatchrKeysData[1815], PatchrKeysData[1359], PatchrKeysData[10893], PatchrKeysData[3152], PatchrKeysData[582], PatchrKeysData[7048], PatchrKeysData[9143], PatchrKeysData[3775], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad40c1de013e6d4091f36a72b8bd6d59(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[37] = { PatchrKeysData[646], PatchrKeysData[799], PatchrKeysData[8105], PatchrKeysData[11501], PatchrKeysData[5511], PatchrKeysData[2954], PatchrKeysData[5766], PatchrKeysData[6696], PatchrKeysData[3261], PatchrKeysData[8718], PatchrKeysData[7236], PatchrKeysData[162], PatchrKeysData[11758], PatchrKeysData[11356], PatchrKeysData[3808], PatchrKeysData[5388], PatchrKeysData[4998], PatchrKeysData[5850], PatchrKeysData[957], PatchrKeysData[3186], PatchrKeysData[557], PatchrKeysData[1693], PatchrKeysData[10835], PatchrKeysData[4757], PatchrKeysData[9370], PatchrKeysData[7350], PatchrKeysData[7906], PatchrKeysData[6742], PatchrKeysData[6879], PatchrKeysData[3500], PatchrKeysData[310], PatchrKeysData[7626], PatchrKeysData[7471], PatchrKeysData[5736], PatchrKeysData[9801], PatchrKeysData[6835], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeyse34fa92f188be998ae3b930eacc919f8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[21] = { PatchrKeysData[9436], PatchrKeysData[7372], PatchrKeysData[7830], PatchrKeysData[1076], PatchrKeysData[3243], PatchrKeysData[4142], PatchrKeysData[5654], PatchrKeysData[4812], PatchrKeysData[7460], PatchrKeysData[238], PatchrKeysData[10354], PatchrKeysData[2843], PatchrKeysData[11674], PatchrKeysData[4775], PatchrKeysData[10985], PatchrKeysData[11876], PatchrKeysData[5152], PatchrKeysData[7024], PatchrKeysData[4175], PatchrKeysData[418], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys28e3120dfd5d3940bfdd3918b00dc7c8(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7556], PatchrKeysData[2755], PatchrKeysData[1112], PatchrKeysData[8823], PatchrKeysData[3656], PatchrKeysData[525], PatchrKeysData[7333], PatchrKeysData[5107], PatchrKeysData[1622], PatchrKeysData[3754], PatchrKeysData[10897], PatchrKeysData[7182], PatchrKeysData[615], PatchrKeysData[2216], PatchrKeysData[6786], PatchrKeysData[9230], PatchrKeysData[7132], PatchrKeysData[3064], PatchrKeysData[3699], PatchrKeysData[9100], PatchrKeysData[649], PatchrKeysData[10420], PatchrKeysData[4434], PatchrKeysData[7078], PatchrKeysData[6428], PatchrKeysData[316], PatchrKeysData[9133], PatchrKeysData[10621], PatchrKeysData[3986], PatchrKeysData[4750], PatchrKeysData[5874], PatchrKeysData[1651], PatchrKeysData[1954], PatchrKeysData[358], PatchrKeysData[4943], PatchrKeysData[10010], PatchrKeysData[2272], PatchrKeysData[1571], PatchrKeysData[3241], PatchrKeysData[6003], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa8de356b4723a098354412f8d205af6c(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[1996], PatchrKeysData[8357], PatchrKeysData[1615], PatchrKeysData[1809], PatchrKeysData[4012], PatchrKeysData[7795], PatchrKeysData[8965], PatchrKeysData[80], PatchrKeysData[8058], PatchrKeysData[319], PatchrKeysData[3110], PatchrKeysData[5941], PatchrKeysData[7994], PatchrKeysData[498], PatchrKeysData[3473], PatchrKeysData[10992], PatchrKeysData[6284], PatchrKeysData[3471], PatchrKeysData[11217], PatchrKeysData[3374], PatchrKeysData[4249], PatchrKeysData[1934], PatchrKeysData[772], PatchrKeysData[6162], PatchrKeysData[9318], PatchrKeysData[10065], PatchrKeysData[11338], PatchrKeysData[6617], PatchrKeysData[10626], PatchrKeysData[2636], PatchrKeysData[3936], PatchrKeysData[382], PatchrKeysData[2901], PatchrKeysData[7566], PatchrKeysData[8421], PatchrKeysData[4205], PatchrKeysData[7359], PatchrKeysData[10868], PatchrKeysData[7730], PatchrKeysData[645], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys3033ac68db3f90561a6df555a9885a2e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[6749], PatchrKeysData[7161], PatchrKeysData[1829], PatchrKeysData[1003], PatchrKeysData[6610], PatchrKeysData[5559], PatchrKeysData[10663], PatchrKeysData[10104], PatchrKeysData[8912], PatchrKeysData[10184], PatchrKeysData[622], PatchrKeysData[2148], PatchrKeysData[11405], PatchrKeysData[11001], PatchrKeysData[10956], PatchrKeysData[6864], PatchrKeysData[4198], PatchrKeysData[9397], PatchrKeysData[11924], PatchrKeysData[247], PatchrKeysData[9158], PatchrKeysData[7514], PatchrKeysData[9980], PatchrKeysData[11371], PatchrKeysData[9754], PatchrKeysData[5380], PatchrKeysData[9380], PatchrKeysData[6399], PatchrKeysData[10175], PatchrKeysData[9775], PatchrKeysData[6722], PatchrKeysData[11760], PatchrKeysData[8470], PatchrKeysData[6232], PatchrKeysData[3717], PatchrKeysData[9222], PatchrKeysData[241], PatchrKeysData[6519], PatchrKeysData[1536], PatchrKeysData[1429], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysad84410498465e7cde85907b4b49a875(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { PatchrKeysData[7614], PatchrKeysData[8031], PatchrKeysData[7139], PatchrKeysData[1109], PatchrKeysData[10801], PatchrKeysData[7990], PatchrKeysData[11694], PatchrKeysData[9639], PatchrKeysData[3970], PatchrKeysData[3183], PatchrKeysData[5530], PatchrKeysData[898], PatchrKeysData[11867], PatchrKeysData[11270], PatchrKeysData[1395], PatchrKeysData[8959], PatchrKeysData[1764], PatchrKeysData[5815], PatchrKeysData[7470], PatchrKeysData[8028], PatchrKeysData[3798], PatchrKeysData[7164], PatchrKeysData[7229], PatchrKeysData[5936], PatchrKeysData[9174], PatchrKeysData[6144], PatchrKeysData[10494], PatchrKeysData[5002], PatchrKeysData[7586], PatchrKeysData[9694], PatchrKeysData[5888], PatchrKeysData[4521], PatchrKeysData[4558], PatchrKeysData[6009], PatchrKeysData[9488], PatchrKeysData[7587], PatchrKeysData[7800], PatchrKeysData[7866], PatchrKeysData[5037], PatchrKeysData[9132], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeysa0b8dbdc39d299a103febb05c63e662e(PatchrKeys *self, SEL _cmd)
{
  
    
      char cString[42] = { PatchrKeysData[8622], PatchrKeysData[11448], PatchrKeysData[4115], PatchrKeysData[5457], PatchrKeysData[10334], PatchrKeysData[10838], PatchrKeysData[6596], PatchrKeysData[3594], PatchrKeysData[9102], PatchrKeysData[6989], PatchrKeysData[647], PatchrKeysData[4821], PatchrKeysData[266], PatchrKeysData[2002], PatchrKeysData[719], PatchrKeysData[9608], PatchrKeysData[4895], PatchrKeysData[4826], PatchrKeysData[4806], PatchrKeysData[3416], PatchrKeysData[9427], PatchrKeysData[8635], PatchrKeysData[6691], PatchrKeysData[559], PatchrKeysData[8489], PatchrKeysData[9983], PatchrKeysData[6427], PatchrKeysData[1386], PatchrKeysData[3371], PatchrKeysData[6323], PatchrKeysData[9434], PatchrKeysData[9325], PatchrKeysData[2569], PatchrKeysData[4851], PatchrKeysData[9529], PatchrKeysData[1071], PatchrKeysData[833], PatchrKeysData[421], PatchrKeysData[11430], PatchrKeysData[2642], PatchrKeysData[6916], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char PatchrKeysData[11954] = "\\\"";

- (NSString *)description
{
  return [@{
            @"bingAccessKey": self.bingAccessKey,
            @"creativeSdkClientId": self.creativeSdkClientId,
            @"creativeSdkClientSecret": self.creativeSdkClientSecret,
            @"awsS3Key": self.awsS3Key,
            @"awsS3Secret": self.awsS3Secret,
            @"parseApplicationId": self.parseApplicationId,
            @"parseApplicationKey": self.parseApplicationKey,
            @"fabricApiKey": self.fabricApiKey,
            @"branchKey": self.branchKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
